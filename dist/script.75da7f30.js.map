{"version":3,"sources":["node_modules/util/support/isBufferBrowser.js","node_modules/util/node_modules/inherits/inherits_browser.js","node_modules/process/browser.js","node_modules/util/util.js","node_modules/fregejs/dist/index.mjs","script.js"],"names":["process","module","exports","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","Error","defaultClearTimeout","setTimeout","e","clearTimeout","runTimeout","fun","call","runClearTimeout","marker","queue","draining","currentQueue","queueIndex","cleanUpNextTick","length","concat","drainQueue","timeout","len","run","nextTick","args","Array","arguments","i","push","Item","array","prototype","apply","title","env","argv","version","versions","noop","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","name","binding","cwd","chdir","dir","umask","getOwnPropertyDescriptors","Object","obj","keys","descriptors","getOwnPropertyDescriptor","formatRegExp","format","f","isString","objects","inspect","join","str","String","replace","x","Number","JSON","stringify","_","isNull","isObject","deprecate","fn","msg","noDeprecation","warned","deprecated","throwDeprecation","traceDeprecation","console","trace","error","debugs","debugEnviron","debuglog","set","isUndefined","undefined","toUpperCase","RegExp","test","pid","opts","ctx","seen","stylize","stylizeNoColor","depth","colors","isBoolean","showHidden","_extend","customInspect","stylizeWithColor","formatValue","styles","styleType","style","arrayToHash","hash","forEach","val","idx","value","recurseTimes","isFunction","constructor","ret","primitive","formatPrimitive","visibleKeys","getOwnPropertyNames","isError","indexOf","formatError","isRegExp","toString","isDate","Date","base","braces","isArray","n","toUTCString","output","formatArray","map","key","formatProperty","pop","reduceToSingleString","simple","isNumber","l","hasOwnProperty","match","desc","get","split","line","substr","numLinesEst","reduce","prev","cur","ar","arg","isNullOrUndefined","isSymbol","re","objectToString","d","isPrimitive","isBuffer","require","o","pad","months","timestamp","time","getHours","getMinutes","getSeconds","getDate","getMonth","log","inherits","origin","add","prop","kCustomPromisifiedSymbol","Symbol","promisify","original","TypeError","defineProperty","enumerable","writable","configurable","promiseResolve","promiseReject","promise","Promise","resolve","reject","err","setPrototypeOf","getPrototypeOf","defineProperties","custom","callbackifyOnRejected","reason","cb","newReason","callbackify","callbackified","maybeCb","self","then","rej","_util","InvalidFormulaException","InferenceException","InvalidProofSequenceException","UnrecognizedTokenException","_Builder","biconditional","left","right","conjunction","disjunction","implication","buildRecursively","formula","operation","buildFormula","operations","result","Biconditional","Conjunction","Disjunction","Implication","Builder","isBinaryOperationFormula","isBiconditional","isConjunction","isDisjunction","isImplication","isNegation","eliminateDoubleNegations","innerValue","isContradiction","firstCondition","isDeepStrictEqual","secondCondition","isArrayString","every","item","isHypothesis","type","isEndOfHypothesis","isMolecularFormula","isProofItemInferred","includes","propositionalVariablesList","isPropositionalVariable","buildConjunctionString","premises","conjunctionFormulaArray","premise","conjunctionFormulaString","haveEvenNumberOfNegations","Lexer","tokens","pointer","operator","input","lex","next","isSpecial","c","operatorExists","throwTokenException","isWhiteSpace","isVariable","isExpressionBoundary","token","op","position","SyntaxException","Parser","lastIsVariable","parse","_a","_b","_c","_d","_e","_f","node","isUnary","tmp","slice","shift","parseToFormulaObject","parseToFormulaString","printTruthTable","truthTable","headers","truthCombinations","combination","values","truthValues","formattedCombination","formattedValue","implication2","biconditional2","conjunction2","disjunction2","negation","negation2","Calculator","_Calculator","generateTruthTable","stringfiedFormula","parsedFormula","variables","Set","collectVariables","variableArray","from","generateTruthCombinations","table","variable","index","evaluate","evaluateImplication","evaluateBiconditional","evaluateConjunction","evaluateDisjunction","evaluateNegation","isSemanticConsequence","conclusion","conjunctionOfPremises","allPremisesAreTrue","numVariables","combinations","totalCombinations","binaryString","padStart","bit","RuleSetter","BiconditionalIntroduction","conditional1","conditional2","isDeepStrictEqual2","errorMsg","BiconditionalElimination","implication1","ConditionalProof","hypothesis","conclusionOfHypothesis","conditional","Conditionalization","Commutativity","Contraposition","contraposition","ConjunctionIntroduction","formula1","formula2","ConjunctionElimination","DeMorgan","DisjunctionIntroduction","DisjunctiveSyllogism","negatedDisjunct","ImplicationElimination","ImplicationNegation","DoubleNegation","DoubleNegationIntroduction","ConjunctionOverDisjunctionDistribution","Distribute","DisjunctionOverConjunctionDistribution","ConjunctionAssociativity","Associate","DisjunctionAssociativity","BiconditionalAssociativity","HypotheticalSyllogism","ModusPonens","antecedent","ModusTollens","negatedConsequent","ReductioAdAbsurdum","DistributeRecursively","isK","KFormula","otherFormula","distributedFormula","isT","mainFormula","RuleApplier","_RuleApplier","biconditionalIntroduction","proof","requiredItens","id","throwsIfLengthDoesntMatch","throwsIfIndexDoesntExist","formulas","expression","inferenceResult","throwsIfIsNotEqual","biconditionalElimination","requiredItem","conditionalization","conjunctionIntroduction","firstFormula","secondFormula","conjunctionElimination","inferenceResults","isDeepStrictEqual3","commutativity","deMorgan","disjunctionIntroduction","disjunctiveSyllogism","remainingFormula","doubleNegation","doubleNegationIntroduction","hypotheticalSyllogism","implicationElimination","implicationNegation","modusPonens","modusTollens","consequent","conjunctionOverDisjunctionDistribution","disjunctionOverConjunctionDistribution","conjunctionAssociativity","disjunctionAssociativity","biconditionalAssociativity","conditionalProof","item1","item2","endOfHypothesis","hypothesisId","reductioAdAbsurdum","expectedFormula","actualItem","actualFormula","inferenceMethod","expected","received","rule","inferenceRulesMap","ProofChecker","_ProofChecker","check","mappedProof","createMappedProof","inferenceRule","validateScope","layerIdx","blockIdx","itemBlockIdx","requiredItemId","actualLayer","actualBlock","scopeIdx","requiredLayer","requiredBlock","Reducer","reduceFormula","reducedLeft","reducedRight","Frege","builder","reducer","calculator","proofChecker","toFormulaObject","toFormulaString","verifyConsequence","semantic","syntactic","formulaObject","toLocaleLowerCase","reducedFormula","checkProof","isTautology","isContingency","firstTruthValue","frege","_fregejs","document","querySelectorAll","button","addEventListener","insert","textContent","telinha","getElementById","event","deleteChar","moveCursorLeft","moveCursorRight","preventDefault","text","analiseLexica","regex","analisadorSintatico","Function","exibirResultados","lexica","sintatica","tautologia","resultsDiv","innerHTML","querySelector","expressaoLogica","resultadoCalculo","calcularExpressaoLogica","expressao","expressaoNaoTratada","generateHTMLTruthTable","htmlTable","header"],"mappings":"ACAA,ADAA;AEAA,ADCA,ADAA,AGDA;ADCA,ADCA,ADAA,AGDA,AEDA,IHCIA,AGDJ2e,OHCW,CGDX,EHCc1e,CGDd8K,KHCoB,CAAC7K,CGDrB,MHC4B,GAAG,CAAC,CAAC;ADEjC,ADAA,AGDA,AECA0e,QAAQ,CAACC,gBAAgB,CAAC,eAAe,CAAC,CAACpX,OAAO,CAAC,UAACqX,MAAM,EAAK;AHA/D,ADCA,ADAA,AGDA,EECEA,MAAM,CAACC,gBAAgB,CAAC,OAAO,EAAE,YAAY;AHA/C,ADCA,ADAA,AGDA,IECIC,MAAM,CAAC,IAAI,CAACC,WAAW,CAAC;AHA5B,ADCA,AEDA,EECE,CAAC,CAAC;AHAJ,ADCA,AEDA,AECA,CAAC,CAAC;AJCF,AEDA,AECAL,QAAQ,CAACC,gBAAgB,CAAC,SAAS,CAAC,CAACpX,OAAO,CAAC,UAACqX,MAAM,EAAK;AHAzD,ADCA,AEDA,EECEA,EHDE3e,IGCI,CAAC4e,WHDW,KGCK,CAAC,OAAO,EAAE,YAAY;AHA/C,ADCA,AEDA,IDAI3e,AGCE,IAAI,IAAI,CAAC6e,SHDO,EGCI,KAAK,KAAK,EAAE;AHCtC,ADAA,AEDA,MECU,GHAD5e,CGAK6e,OAAO,GAAGN,KHACve,CAAA,EAAG,AGAI,CAAC8e,cAAc,CAAC,WAAW,CAAC;AJC5D,AEDA,EDCI,IGAMD,EHAA,IAAI5e,CGAG,CAAC2e,GHAC,CAAC,OGAS,GAAGC,OAAO,CAACD,WAAW,CAAClM,GHAC,CAAC,CGAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AHChE,ADAA,AEDA,IECM,CAAC,MAAM,IAAI,IAAI,CAACkM,WAAW,KAAK,IAAI,EAAE;AHC5C,ADAA,AEDA,MECU,GHAD1e,CGAK2e,OAAO,GAAGN,QHAIre,AGAI,CHAJ,AGAK4e,EHAD,YGAe,CAAC,WAAW,CAAC;AJC5D,AEDA,EDCI,IGAMD,EHAA,IAAI5e,CGAG,CAAC2e,GHAC,CAAC,OGAS,GAAG,EAAE,uBHAqB,CAAC;AACxD,ADAA,AEDA,IECM;AHCL,ADAD,AEDA,EECE,CAAC,CAAC,SHAS;ADCb,AEDA,AECA,CAAC,CHAG,AGAF,IHAM;ADCR,AEDA,AEEAL,IHDQ,IAAI,AGCJ,CAACG,MHDUve,UAAU,AGCJ,CAAC,IHDQ,KGCC,EAAE,GHDO,EAAE,KGCC4e,KAAK,EAAE;AJAtD,AEDA,EEEE,IHDUjf,AGCNif,KAAK,CAAChW,GAAG,KAAK,EHDQ,GAAG5I,MGCA,EAAE,EHDQ;ADCzC,ICAQ,AGCJ6e,CHDK,MAAM,GGCD,CAAC,CAAC;AJAhB,AEDA,EEEE,CAAC,CFFC1b,EDCQxD,GGCH,IAAIif,KAAK,CAAChW,GHDS,AGCN,GHDS/I,EGCJ,EFFE,GAAGuD,MAAM,AEEA,CFFCD,CEEC,CHDO,uBCDiB,IAC9D,SAASA,yBAAyBA,CAACE,GAAG,EAAE;AFC1C,EEAI,EDAI,AGCJyb,EFDIxb,IAAI,GAAGF,KECG,CFDG,AECF,CFDGE,AECF,IFDM,CAACD,GAAG,CAAC;EDC3B,ACAA,AECF,CHDG,AGCF,CHDG,ECAEE,GECC,EHDItD,CAAC,CGCD2e,CHDG,GCAG,CECD,CAAChW,CFDG,CAAC,CAAC,AECF,KAAK,YAAY,EAAE;EFArC,EDAIjJ,AGCJof,GFDK,IAAIxd,CAAC,GAAG,CAAC,EAAEA,CAAC,AECF,CHDK,AGCJ,CAAC,CFDG+B,CDAGzD,GCAC,CAACgB,MAAM,EAAEU,CAAC,EAAE,CDAG,CCAD;EDCtC,AGCF,CAAC,CFDGgC,KEGFqb,KAAK,CFHQ,AEGPI,CFHQ1b,IAAI,CAAC/B,CAAC,CAAC,CAAC,GAAG6B,EEGL,CAAC,CAAC,EFHS,CAACI,wBAAwB,CAACH,GAAG,EAAEC,IAAI,CAAC/B,CAAC,CAAC,CAAC;AEI1E,CAAC,CHHG,ACAA,AEGF,IHHM;AGKR,EFJI,EDAI,IAAI,CCADgC,AEIFib,MHJUte,AGIJse,CAACS,IFJM,AEIF,EAAE,KHJS,KAAK,UAAU,EAAE;ACC9C,CAAC,CEID,IHJUrf,AGIN8e,OAAO,GAAGN,QHJc,AGIN,CAACO,EHJQze,YAAY,AGIN,CAAC,WAAW,CAAC;AFFpD,EEGEwe,EHJM,ACCJjb,CDDK,IGIA,CAACgb,CHJK,KCCC,GAAG,EEGE,IAAIQ,IFHI,AEGA;AFF7Bvf,AEGA,MHJYE,CCCL,CAAC8D,MAAM,GAAG,ODDa,GAAG3D,ACCP4D,CAAC,EAAE,gBDDuB;AEwDpD,AClDA,EFJE,ECsDF0J,AFvDQ,ECCF,CAACzJ,ECsDP,AClDSsb,GDkDT3U,GDtDe,CAAC5G,CAAC,CAAC,CCsDlB,CDtDoB,EEIEub,CAAChR,OAAO,EAAE;ADrChC,EFiCI,AGKF,CHLG,CAAC,ACCF,EEIIiR,EFJAtb,GDDK5D,AGKA,CHLC,EAAE,AGKA,CFJD,GAAG,EAAE,MEIQ;ADrC5B,ECsCE,EDtCEqN,AFiCI1N,ACCJ,KAAK,AEIAuf,IFJI5d,CAAC,AEIA,CAACsE,EFJE,CAAC,CEIC,CFJCtE,AEIA2M,CFJC,CDDK,ECCF5M,CDDKvB,EEjCF,ACsCA,CAAC,EDtCE,GDkCG,CAACc,MAAM,EAAEU,CAAC,CClCCzB,AFiCI,CCCH,EAAE,EClCE,CAAC,EACjD;ACsCD,EHLI,ICCE+D,OAAO,CAACrC,IAAI,CAACsC,OAAO,CAACxC,SAAS,CAACC,CAAC,CAAC,CAAC,CAAC;AChCzC,AFgCA,AGMA,CHNC,EAAE,CAAC,ACCA,KEKK6d,mBAAmBA,CAAClR,OAAO,EAAE;ADtCtCxO,AFiCA,EGME,EFLE,EEKE,CDvCN,CAAA4N,CFiCSnN,ECCE0D,OAAO,CDDC1D,ACCA4D,CDDC3D,GAAG,ACCA,CAAC,CDDC,ECCE,CAAC,GClC5B,GAAAkN,uBAAA;AACA,EFiCI,ACCF,EClCEC,ACuCA,EHNI5N,EGMA0f,QAAQ,CAAC,KDvCK,AFiCE,GEjCC,CCuCC,CHNGrf,EGMAkO,OAAO,CHNG,AGMF,EDvCEpO,AFiCE,KEjCG,CAAC,EAC5C;EDmCC,EDFM,AGMJ,EFJEyB,CAAC,GAAG,CAAC,AEIA,IAAI;ADrCf,EDkCE,AEIA,CAAC,CHNK,AGMJ,EFJEH,IAAI,CDFKpB,AGMJoF,EFJE9D,GEIG,EAAE,GHNO,CAAClB,ACEJ,GDFO,EAAE,CAAC,CAAC;AEhCjCV,EFiCI,ACEF,EEIE,EFJEuB,CCnCN,CAAAsM,CDmCS,EEIE,CFJCnM,IAAI,AEIA,CFJCP,MAAM,GCnCvB,GAAA0M,kBAAA;AACA,EFiCI,ACEF,AEIA,EDvCEC,EDmCExJ,GAAG,GAAGC,MAAM,CAACN,CAAC,CAAC,CAACO,OAAO,CAACT,GCnCG,GAAG,MDmCM,EAAE,MCnCM3D,IDmCGqE,CCnCE,ADmCD,CCnCE,CDmCA,CClCvD;ACuCD,EHNI,ECEA,EDFI,CAACxE,CCEDwE,CAAC,KAAK,IAAI,EAAE,GDFK,ICEE,CDFGtE,ECEA,cDFgB,IAAI,CAACF,gBAAgB,KAAKK,UAAU,EAAE;AE/BpF,ACwCA,IHRQL,ACEJ,IAAI4B,CAAC,AEMA+d,IFNIre,GAAG,EAAE,EDFM,GAAGjB,ECEFmE,AEMAmb,CFNC,AEMApR,OHRW,AGQJ,EAAEqR,MAAM,EAAEC,SAAS,EAAEC,UAAU,EAAE;ADxClE/f,ECyCE,EHRM,ACEJ,EEMIggB,CDzCR,CAAAlS,GFiCexN,CCEHmE,CAAC,GEMK,GAAGia,EHRI,CAAChe,GAAG,EAAE,AGQF,CHRG,AGQFue,CHRG,QEjCjC,GAAAnR,ECyC4C,CAAC,SAAS,CAAC,gBDzCvD;AACA,EFiCI,AGQFkS,EDzCEjS,EDmCE,KAAK,CEMC,CAACkS,EFNE,OEMO,QDzCQ,GAAG,cAAc7f,ECyCzBgB,GDzC8B,CAAC,EACpD,ACwCqB,CACJoN,OAAO,yCAAApN,MAAA,CACAye,MAAM,GAAG,QAAQ,GAAG,UAAU,4CAAAze,MAAA,CACxB0e,SAAS,GAAG,QAAQ,GAAG,UAAU,2CAAA1e,MAAA,CAE1D2e,UAAU,GAAG,kBAAkB,GAAG,sBAAsB,eAG3D;AACH,EHhBI,IAAI,ECCS,OAAOxb,MAAM,CAAC7C,IAAI,CAACG,CAAC,EAAE,CAAC,CAAC;AChCzC,ACkDA6c,IHlBQ,ECCF,EEiBE,CAACwB,EFjBE,IAAI,OEiBO,CAAC,cAAc,CAAC,CAACrB,gBAAgB,CAAC,OAAO,EAAE,YAAW;ADlD5E7e,ECmDE,EHlBM,EGkBFmgB,CDnDN,CAAApS,ADiCiB,GDAF9N,ICASyE,MAAM,AEkBT,CFlBUhD,EEkBPgd,EFlBW,CDAJ,ACAK7c,CDAJnB,ACAK,EAAE,CDAJ,ACAK,CAAC,AEkBT,CHlBK,AGkBJue,CDnDjC,AFiCsC,CAAC,EEjCvClR,UCmD+C,CAAC,WAAW,CAAC,CAACgR,EDnD7D,SCmDwE;ADlDxE,EFiCI,AGkBF,CHlBG,CEjCD/Q,AFiCE,ECAA,AEkBAoS,KHlBM7f,ACAD,CCjCC,AFiCC,EAAC,CEjCC,ADiCA,MCjCMyN,CCmDC,GAAGqS,IDnDI,CAAC,kBCmDkB,CAACF,eAAe,CAAC;AACjE,CAAC,CDnDC,ACmDA,EHlBM,IAAI,ACAJ,CCjCClS,GDiCG,UCjCUA,CAACC,IAAI,EAAEC,KAAK,EAAE;ACqDpC,IDpDI,EFiCQ,GGmBHkS,CFnBC,CCjCE,IAAGnS,EDiCEvJ,ECjCG,EDiCC,CAACC,KCjCKuJ,IDiCI,CCjCE,ADiCDzM,AEmBA2e,CAACC,EDpDE,CDiCC,CAACze,CAAC,EAAE,CAAC,CAAC,AEmBA,EAAE;EDnD1C,ACoDE,IHnBQ,AGmBJ0e,EFnBA,CAAC,CAAC,GDAStgB,ICAF4E,CAAC,EAAE,KEmBO,GAAGyb,CHnBK,CAAC3f,IAAI,CAAC,EGmBF,EHnBM,EAAED,GAAG,EAAE,CAAC,CAAC;EEhCpD,ACoDE4f,EHnBI,CAAC,CAAC,GEjCDlS,CDiCC,CEmBG,EHnBG7N,CAAC,AGmBD+f,EHnBE,CCAD,GCjCGlS,CAACF,ECoDI,CAAC1J,CDpDD,EAAE2J,EDiCE,EEmBI,CDpDD,ACoDE,EDpDA,ECoDI,EAAE,GAAG,CAAC;EAExCmS,EDrDA,EFiCQ,ECAJ,GCjCI,ACqDC,GAAGA,CDrDDpS,IAAK,ICqDK,CAAC1J,MDrDI2J,CCqDG,CAAC,GDrDE,CCqDE,EDrDA,ACqDE,IAAI,CAAC;EDpD3C,ACqDEmS,IHpBQ,ACAN,KEoBO,EHpBMrgB,CGoBHqgB,SAAS,CAAC9b,KHpBS,CAAC7D,CGoBH,CAAC,EHpBM,CAAC,CGoBH,EAAE,CHpBK,EAAED,EGoBF,CHpBK,AGoBJ,EHpBM,CAAC,CAAC;EEhCpD,ACqDE,EHpBI,EGoBEwS,EFpBF,CCjCC7E,MDiCM5J,CAAC,AEoBI,GAAG+Z,CDrDHnQ,CAACH,IAAI,EAAEC,KAAK,CCqDJ,CDrDM,ACqDL+F,kBAAkB,CAACoM,SAAS,CAAC;EHnBtD,AGoBA,EDrDA,ADiCA,OCjCQ,IAAGpS,IAAK,WAAUC,KAAM,GAAE;AFoCtC,EEnCE,ADiCA,AEoBEqS,CFpBD,CAAC,oBEoBsB,CAACtN,UAAU,CAAC;AHjBtC,EEnCE,ADiCA,AEoBE,IAAM2M,CFpBH,ECjCEvR,AFmCA1N,ECFE6D,CAAC,AEoBI,GFpBD/C,AEoBI,EAAE,EFpBF,CCjCC4M,ADiCAzM,CCjCCqM,ADiCA,CAAC,EDEEtN,ACFAiB,CCjCC,AFmCAhB,ACFA,ECjCEsN,CDiCC5M,GDEG,ACFA,CCjCC,CFmCC,ACFAkD,CCjCC,ADiCA,GAAG/C,IAAI,CAAC,EAAEG,CAAC,CAAC,EAAE;EDG5C,AGkBA,EDrDA,ADiCA,EDEI3B,AGkBE4f,EFpBFhb,GCjCI,GDiCE,CCjCCoJ,ADiCAzJ,AEoBI,CFpBH,CAAC,CEoBK,CDrDF,CCqDI,CFpBH,CAACM,EDEI,EEnCAoJ,GFmCK3N,CCFD,CCjCE,ADiCDiE,CAAC,CAAC,CCjCC,CDiCC,MDEQ,EAAE;EElC3C,ACqDE,EHlBI,ECFFH,AEoBIyb,GFpBD,IAAI,GAAG,AEoBI,GFpBDtb,AEoBI+Z,CFpBH,aEoBQ,CAACH,WAAW,CAACiC,SAAS,CAAC;EDpDjD,ACqDEV,EHlBI,ACFJ,CAAC,ICjCIrR,EFmCM/N,ACFJ,OEoBS,CAAC+f,IHlBM,CAAC1f,CEnCH0N,CAACC,IFmCQ,CAAC,EEnCF,EAAE,GCqDK,EAAEqR,MAAM,EAAEC,SAAS,EAAEC,UAAU,CAAC;AACxE,EHlBI,EEnCA,EDiCEzb,ECjCE,CDiCC,IAAI,ECjCEkK,CDiCC,GAAGpK,GCjCG,IDiCI,CCjCC,ADiCAK,CAAC,CAAC,MCjCM,EAC7B,OAAO+J,OAAO;ACwDpB,EHrBI,EElCA,ADgCA,IChCI,CCuDCgS,UDvDU,IAAIhS,OAAO,CCuDCgS,CAACtN,EDvDE1E,OAAO,CAACC,ACuDA,EAAE,ODvDO,KAAK,UAAU,EAC5D,OAAQ,QAAO,IAAI,CAACC,YAAY,CAACF,OAAO,CAAC9G,KAAK,CAAE,GAAE;EFkCpD,ACFF,AEuBA,EDtDE,EFiCI,AGqBF+Y,CHrBGvgB,CEjCD,EAAE,KCsDK,GAAG,GDtDG,IAAIsO,AFiCE,KAAKnO,EEjCA,CAAC,EAC3B,MAAM,IAAIuN,IFgCmC,CGqBD,GHrBK,CAAC1N,cEhCjB,CAAC,GFgCkC,KAAKM,UEhCrB,CAAC,CFgCgC,EAAE;ECD3F,AEwBAigB,EDtDE,AFgCIvgB,KCFCoE,CC9BC4J,CCsDC,CFxBC,EC9BE,CCsDC,EDtDE,IAAI,ACsDA,CDtDCQ,AFgCI,GAAGlO,SEhCK,CAACgO,EFgCM,KEhCC,CAACN,IAAI,CAAC;AD+BhD,CAAC,CEwBCgF,EDtDE,AFgCI,MEhCE/E,CFgCK3N,CGsBH,CAAC2S,EDtDE,GAAG,ECsDE,CAAC5L,CDtDC,CAACmH,AFgCI,CAAC7N,IGsBA,CAAC,CHtBK,CAAC,IEhCA,CAAC2N,GCsDPkS,IDtDc,CAACvS,CCsDT,EAAI,EDtDU,CAAC;EFiC9C,EEhCA,ACsDAsS,MDtDMhS,GCsDG,MDtDM,GAAGD,ECsDTpN,KDtDgB,CAACqN,ACsDjB,CAAWiS,MAAM,EDtDS,QCsDF;AFtBrC,EDCI,AGsBF,CAAC,CDtDC,ACsDA,EHtBI,KEhCG,IAAI,CAAC/R,UAAU,CAACF,SAAS,CAAC,CAACP,IAAI,EAAEC,KAAK,CAAC;ADgClD,EC/BE,ACsDAsS,EHtBM,OGsBG,IAAI,OAAO;AFtBtB,EC/BE,ACuDA,EHvBM,GGuBD,IHvBQvgB,AGuBJ2B,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGqR,OHvBW,CAACrS,EGuBF,CAACuS,GHvBO,CAAC,aGuBS,CAACjS,MAAM,EAAEU,CAAC,EAAE,EAAE;ADtDhE,AD+BA7B,EDCI,CAAC,CAAC,AGuBFygB,GFxBG,CAACzb,GDCKzE,CAAC,CGuBD,CHvBE,GCDE,AEwBA,GFxBG,GEwBG,OFxBM0E,EAAE,EAAEC,GAAG,EAAE;AC9BtC,ED+BE,EDCM,AGuBJ,EFxBE,EDCM,AGuBFmO,KFxBGvT,MEwBQ,CFxBD,EEwBIoT,GFxBC,OEwBS,CAACE,GFxBC,IAAItT,OAAO,CAACqF,EEwBI,CAACtD,CAAC,CAAC,QFxBM,KAAK,IAAI,EAAE;AC9BxE,ID+BI,AEwBAwR,EHvBQ,KCDDpO,EAAE,EEwBE,CAACsC,OAAO,CAAC,UAAAG,KAAK,EAAI;ADtDjC,ED+BE,IDCU,AGuBN,IAAM+L,GHvBOvT,WGuBO,GAAGwH,IHvBQ,CAAC/G,AGuBJ,GAAG,CHvBK,CAAC,IAAI,EAAEE,MAAM,CAAC,qBGuBiB,GAAG,kCAAkC;ADtD9G,IFgCQ,CAAC,CAAC,AGuBJ4f,OHvBWlgB,CAAC,CGuBH,CHvBI,mCGuBJa,MAAA,CAAkCqS,cAAc,UAAO;EDtDpE,AD+BA,EEwBE,CAAC,CHvBO,AGuBN,GDvDG/E,YAAYA,CAACF,OAAO,EAAE;EDgC7B,EC/BE,ACuDA,EHvBQ,ACDN,EEwBIiF,EDvDA7E,GD+BG9O,GC/BG,GAAG,CD+BC,EEwBI,CDvDD,CAACyO,CD+BC,AEwBE2E,UAAU,CFxBD,AEwBEK,EFxBA,EC/BE,CAAC/E,MCuDQ,CDvDD,ACuDE3M,CDvDD,ACuDE,CAAC,GAAG,oCAAoC,GAAG,kCAAkC;IDtD5H,AD+BA,AEwBA4e,EHvBQ,KEhCD7R,AD+BA,EDCQ1O,AGuBN,IDvDI,MD+BK,QDCe,CAACS,IAAI,CAAC,IAAI,EAAEE,MAAM,AGuB1CO,CHvB2C,KGuB3C,CAAkCqS,cAAc,UAAO;EDtDlE,EFgCM,AGuBJgN,EFxBE,OAAOzgB,AEwBA,IAAI,GFxBG,CAACgF,GEwBG,MFxBM,CAACC,EAAE,EAAEC,GAAG,CAAC,CAAChD,KAAK,CAAC,IAAI,EAAEN,SAAS,CAAC;AC9B9D,CAAC,CFgCG,AGuBF,EFxBE,CAAC;AC9BLoM,AFmCA,ECJE,AEyBAyS,MDxDM,CAAC9R,ECwDE,IAAI,IDxDI,GAAG,GCwDG;AHpBzB,EEnCEE,ADgCA,AEyBA,EHtBE/N,ECHEsE,AEyBA4a,GHtBG,GAAG,ACHA,EDGE,CEnCC,ADgCA,CEyBC,CDzDChS,ECyDE0Q,CFzBC,KChCK,CAACzQ,CCyDC,CAACgR,WDzDW,GCyDG,CAAC,QAAQ,CAAC;AHrBpD,EEnCEnQ,ADgCA,AEyBAkR,EHtBEjf,OCHOsE,CDGC,AGsBA,CDzDC,ACyDA4a,EDzDEjS,AFmCA,KAAK,CCHC3I,CAAA,AEyBC,CDzDC,CAAC+I,ADgCA,CEyBCqS,SAAS,CDzDC;AFoCnC,AGsBA,EDzDE1R,EFmCE/N,ACHA,IAAI,CAACoE,IChCI,EAAE4I,ADgCA,CDGC,CCHC,MChCM,CAACK,WAAW;AFoCnC,EEnCEW,EFmCE/N,ECHE,IAAInB,GChCG,CFmCC,CEnCCkO,EFmCE,ACHA,CDGC,ACHA1I,CDGC,IEnCI,CAACgJ,UDgCU,EAAE;AC/BpC,AFoCA,CEpCC,ODgCO,CDICpN,KCJK,IAAId,KAAK,CDICc,ACJAgE,CDIA,EAAG,ACJA,CAAC;AC/B5B,EFoCI,EEpCA+J,EFoCI,ACJF,CDIGlO,ACJF,IChCI,EDgCE,CChCFf,CFoCM,ECJAF,EDII,CAACkB,CEpCX,CAAAiO,EDgCa,CAAC1J,IChCd,GAAGyI,AFoCoB,EAAE,MEpCd,CDgCmB,EAAE;IDKnC,ICJAxI,OAAO,CAACC,KAAK,CAACP,GAAG,CAAC;AC/B1B,EFoCI,ICJE,CAAC,MAAM;AC/Bb,EFoCInE,MCJIyE,CChCC0J,CFoCG,GAAG,ECJA,CAACxJ,EDII,GCJC,CAACR,GAAG,CAAC,OChCOgK,CAACV,OAAO,EAAE;EACzC,AFoCE,IAAIxN,ACJF,GChCG,CAAC,EAAEwN,MFoCQ,CEpCD,AFoCErN,CEpCDsN,KFoCO,EAAE,EEpCA,IAAID,OAAO,CAACN,IAAI,IAAIM,OAAO,CAACL,KAAK,CAAC;AAC/D,IFoCQrN,ECJFsE,GDIO,GAAGpE,ACJJ,GAAG,IAAI,KDIS,CAACI,MAAM,CAACN,KAAK,CAAC;EACtC,CAAC,CCJD,KDIO;AEnCX,IFoCQG,ACJJ,OAAOgE,EAAE,CDIK,ACJJ/C,GDIO,CAAC,CAAC,ACJJ,CAAC,IAAI,EAAEN,SAAS,CAAC;AC/BpC,EFoCI,ACJF,OChCOuN,eAAeA,CAACX,OAAO,EAAE;EAChC,AFoCE,ACHF,IDGM1N,GEpCC0N,ADiCAnJ,EDGI,CAAClE,IEpCE,CAACsN,CFoCG,CCHD,CDGG,MEpCI,KAAK,eAAe,IAAIS,wBAAwB,CAACV,OAAO,CAAC;AACnF,ADiCA,CAAC,GDGOnN,UAAU,CAAC,CAAC;ACApB,EDCI,ECDAsE,MAAM,GAAG,CAAC,CAAC;AClCf,AFoCA,ACDA,IAAIC,YAAY;AClChB,AFqCA,ACFA5F,OAAO,CAAC6F,CCnCCuJ,AFqCA/N,OCFO,GDEGA,ACFA,CDEA,EErCG+N,AFqCA,CErCCZ,MDmCK1I,CCnCE,EAAE,ADmCD,EAAE;EClC/B,AFqCE,ACFF,IDEM/E,ACFFgF,GCnCGyI,KFqCO,EErCA,AFqCE,CErCDC,ADmCA,CAAC7I,QCnCQ,IDmCI,CCnCC,ADmCA,EAC3BA,WCpCwC,CDoC5B,GCpCgCsJ,ADoC7BlJ,SAAA,IAA0B,EAAE,SCpCyB,CAACwI,OAAO,CAAC;AACjF,EDoCE1I,EDCM,CCDH,GAAGA,GAAG,CAACG,WAAW,CAAC,CAAC;EDErB,ACDF,IAAI,CAACN,MAAM,CAACG,GAAG,CAAC,EAAE;ACnCpB,EFqCI,ECDA,EDCIxE,ECDA,IAAI4E,CDCG,GAAGzF,ECDA,CAAC,KAAK,EDCI,CAACS,ACDF4E,GAAG,GAAG,KAAK,EAAE,EDCI,CAAC,ACDF,CAAC,CAACK,IAAI,CAACP,YAAY,CAAC,EAAE;ACnCjE,EFqCI7E,ICDE,GCpCGsO,CFqCG,ACDFjJ,GDCK,ACDF,GAAGtG,CDCG,KErCGuP,CAACb,ADoCA,CAACpI,GAAG,GCpCG,EAAE;EAC9B,AFsCE,IAAI7E,ACFFoE,GCpCG6I,AFsCE,GAAG1N,ACFF,CAACgF,GCpCG,ADoCA,CCpCC2I,AFsCE,ACFF,CDEGtN,ECFA,IDEM,EEtCA,KAAK,CDoCA,YCpCa,IAAI+N,wBAAwB,CAACV,OAAO,CAAC;AACjF,EFsCI,MCFI,CDEEjN,GAAG,ACFD2D,EDEG,CCFA,GAAGlF,OAAO,CAACgE,MAAM,CAAC9B,KAAK,CAAClC,OAAO,EAAE4B,SAAS,CAAC;IDGlDZ,ICFAwE,OAAO,CDEK,ACFJE,GDEO5E,ECFF,CAAC,EDEM,SCFK,EAAEgF,GAAG,EAAEM,GAAG,EAAElB,GAAG,CAAC;ACnCjD,IFsCQpE,ECFF,CAAC,EDEM,GAAG,EAAE;AErClB,IFsCQ,ACFJ,CAAC,ICpCIwO,EFsCM,ACFJ,EDEMrO,SEtCKqO,CAACd,AFsCI,GAAGjN,GAAG,CEtCH,CFsCK,CEtCH;EAC9B,IFsCU,ACFNoE,GCpCG6I,CFsCOxN,ECFJ,CAAC8E,GCpCG,ADoCA,CCpCC2I,ADoCA,GAAG,EDEQ,EAAE,EEtCJ,KAAK,CDoCA,CAAC,CAAC,UCpCW,IAAIS,wBAAwB,CAACV,OAAO,CAAC;AACjF,IDoCI,IDEYxN,YAAY,CAACC,UAAU,CAAC,CAACO,GAAG,CAAC,CAAC;ECD5C,IDEU;AErCZ,EDoCE,EDEM,KCFCmE,MAAM,CAACG,GAAG,CAAC;AACpB,CAAC,GDEO7E,UAAU,GAAG,CAAC,CAAC;AEpCvB,IFqCQM,GAAG,GAAGT,KAAK,CAACK,MAAM;AEpC1B,ADoCA,EDCI,OErCKoO,UAAUA,CAACf,OAAO,EAAE;ADqC7B,ECpCE,AFqCExN,OErCKwN,KFqCO,EErCA,CAACC,AFqCE,IAAI,KErCG,KAAK,UAAU,IAAI,CAAC,CAACD,OAAO,CAAC9G,KAAK;AAC5D,ADoCA,EDCI3G,QAAQ,GAAG,KAAK;ACApB,EDCIH,eAAe,CAACU,OAAO,CAAC;AEpC5B,AFqCA,ACDA;ACnCA,AFsCAxB,ACFA,ODEO,CAAC2B,CEtCC+N,OFsCO,GAAG,UAAU9O,GAAG,CEtCC8O,CAAChB,AFsCA,OEtCO,EAAE;ADqC3C,ECpCE,AFsCE,IEtCEe,AFsCE7N,IAAI,GAAG,GEtCC,CAAC8M,AFsCE7M,KAAK,CAACC,CEtCD,CAAC,EAAE,KFsCO,CAACT,MAAM,GAAG,CAAC,CAAC;ACD9C,EDEI,EEtCA,EFsCIS,IEtCE6N,KFsCO,CAACtO,IEtCE,EFsCI,CEtCDqN,EFsCI,CAAC,EAAE,EEtCA,CAAC9G,KAAK;ADqCpC,ICpCI,AFsCI,IEtCA6H,CFsCK,ACFJnL,IDEQvC,CAAC,ECFFuC,CDEK,ACFJT,CCpCC,AFsCI,CEtCH8L,CFsCK5N,ACFJ,CDEK,CCFHwE,EDEMzE,ECFF,EAAE,CCpCC,CAAC,EAAE,CFsCK,CAACT,MAAM,EAAEU,CAAC,EAAE,EAAE;ECDjD,ICpCI,AFsCMH,IAAI,CAACG,CAAC,CEtCL2N,EFsCQ,CAAC,CAAC,GAAG5N,SAAS,CAACC,CAAC,CAAC,KEtCD,CAAC4N,UAAU,CAAC/H,KAAK,CAAC;EDqCrD,ECpCE,AFsCI,ECFFpB,GAAG,GAAG;EDGR,EEtCA,ADoCAC,IAAI,EAAE,CCpCC,CDoCC;EDGRzF,ECFA0F,ECpCEiI,CFsCG,CAAC3M,GCFC,CDEG,CAAC,ACFF2E,ECpCE,EAAE,AFsCE1E,IAAI,CAACrB,GAAG,EEtCA,AFsCEgB,IAAI,CAAC,CAAC;EAC/B,ACFF,CAAC,GCpCGgG,AFsCE5G,KEtCG,AFsCE,CAACK,CEtCDqO,KFsCO,KAAK,CAAC,IAAI,CAACzO,QEtCM,AFsCE,CEtCD0O,CFsCG,SEtCO;EDqC9C,ECpCE,AFsCIhP,CEtCH,SFsCa,CAACY,UAAU,CAAC;EErC5B,AFsCE,ACFF,IAAIO,SAAS,CAACT,MAAM,IAAI,CAAC,EAAEmF,GAAG,CAACI,KAAK,GAAG9E,SAAS,CAAC,CAAC,CAAC;ADGrD,CAAC,CEtCC,ADoCA,ICpCIsN,ADoCAtN,SAAS,CAACT,MAAM,IAAI,CAAC,EAAEmF,CCpCC,CAACkI,CDoCC,CAAC7H,KCpCK,CAAC,ADoCA,ECpCE,CDoCC/E,SAAS,CAAC,CAAC,CAAC;EACpD,ECpCE,EDoCEgF,KCpCK,IDoCI,CAACP,IAAI,CAAC,EAAE;ADGvB,ICFI,ECpCEoI,SAAS,EAAED,OAAO,CAACC,SAAS;AFuClC,ICFInI,ECpCE4H,CDoCC,CAACrH,CDEC9E,CEtCC,EAAEyN,CFsCCzN,CAACrB,GAAG,CCFC,CDECsB,ECFEqE,GDEG,CCFC,CDEC,UEtCU,CAACmI,OAAO,CAACN,IAAI,CAAC;EFuC9C,ACFF,CAAC,GCpCGC,AFsCE,CAACzN,ECFA,CDEG,CEtCD,EAAE8O,AFsCE9O,ACFF2F,GDEK,CCFD,EAAE,kBCpCkB,CAACmI,OAAO,CAACL,KAAK;EFuC/C,EEtCA,ADoCA,CCpCC,CFsCG,CAACnM,KAAK,GAAGA,KAAK;AACtB,EEtCE,EDoCEhC,OAAO,CAAC8G,OAAO,CAACR,GAAG,EAAED,IAAI,CAAC;ADG9BtE,EEtCE,ADoCA,EDEE,CAACE,IEtCIuM,KFsCK,CAAChN,CEtCC,EFsCE,GAAG,YAAY;AErCjC,EFsCI,ACFF,IDEM,CAACd,GAAG,CAACwB,KAAK,CAAC,IAAI,EAAE,IAAI,CAACF,KAAK,CAAC;AACpC,CAAC,CCFC,IAAI+D,WAAW,CAACO,GAAG,CAACO,UAAU,CAAC,EAAEP,GAAG,CAACO,UAAU,GAAG,KAAK;ACnCzD,AFsCA/G,ECFE,IAAIiG,CDEC,CAAC5D,KAAK,GAAG,CCFC,CAACmE,GAAG,CAACI,GDEG,ECFE,CAAC,EAAEJ,GAAG,CAACI,KAAK,GAAG,CAAC;ACnC3C,AFuCA5G,ECHE,IAAIiG,CDGC,CAAC3D,CEvCCsN,EFuCE,GAAG,CAAC,CAAC,CCHC,CAACpJ,GAAG,CAACK,ECpCE+I,CAAClB,GDoCG,CAAC,EAAElI,CCpCC,EAAE,ADoCA,CAACK,MAAM,GAAG,KAAK;ADIjD7G,EEvCE0O,ADoCA,IAAIzI,CDGC,CAAC1D,CEvCC,GAAGmN,AFuCA,GAAG,EAAE,ACHA,CAAClJ,GAAG,CAACS,aAAa,CCpCC,ADoCA,CCpCCyH,CDoCClI,GAAG,CAACS,ECpCE,CAAC,UDoCU,GAAG,IAAI;ADI9DjH,EEvCE,ADoCA,IAAIwG,CDGC,CEvCCqJ,AFuCArN,CCHC,CAACqE,KDGK,CCHC,EDGE,ACHAL,EDGE,CAAC,ACHA,CCpCC,AFuCA,ACHAE,GCpCG,IAAAoJ,ADoCI,GAAG5I,gBAAgB,ICpCN,EAACwH,OAAO,EAAE;AFwCpD1O,ECHE,ECpCE2O,GFuCG,CAAClM,CCHC0E,ICpCI,EAAE,CFuCC,GAAG,CAAC,ACHA,CDGC,ACHAX,GAAG,EAAE3C,ECpCE,CDoCC,EAAE2C,GAAG,CAACI,KAAK,CAAC;ADKzC,ACJA,ICpCIwH,IAAI,CFwCC1L,CExCCgM,GFwCGhM,CAAA,EAAG,CExCC,AFwCA,CExCC0L,IAAI;AF0CtBpO,ACLAE,ICpCImO,GFyCG,ACLA,CDKC1L,ACLA2B,CCpCC,CFyCC,CEzCC,EFyCE5B,ECLE,EDKE,CCLC4B,OAAO;ADMzBtE,ME1Ca2O,CF0CN,CAAC/L,OE1Cc,EAAE,EF0CL,GAAGF,IAAI,CE1CQ;AF2ClC1C,ACJA,MCvCoC4H,CF2C7B,CAAC/E,GE3CiC,CF2C7B,CE3C+B6L,EF2C5BhM,IAAI,CE3C+B,CAAC0L;AF4CnDpO,ACJAsE,ICxCwD,GF4CjD,ACJA,CDICxB,ACJA+D,GDIG,GAAGnE,ACJA,GAAG,CDIC;AAClB1C,EE5CE,ADwCA,CCxCC,CAAC,GF4CG,CAAC+C,ACJA,EAAG,CAAC,CAAC,EAAE,EAAE,CAAC,KDII,GAAGL,IAAI;AAC7B1C,EE5CE,ADwCA,KDIK,CE5CC+P,AF4CA/M,ECJE,EAAG,CAAC,CAAC,EAAE,EAAE,CAAC,ICxCG,GAAG,AF4CA,GAAGN,CE5CHoN,GF4CO,oBE5CU,EAACpB,OAAO,EAAE;AF6CrD1O,ECJE,ECxCE2O,GF4CG,CAAC1L,IAAI,CE5CC,ADwCA,ECxCE,AF4CAP,ACJC,CAAC,CAAC,EDIC,ACJC,EAAE,CAAC,MCxCK;AF6C5B1C,ECJE,ECxCEoO,GF4CG,CE5CC,AF4CAlL,EE5CE,CDwCC,EAAG,CAAC,CAAC,EAAE,EAAE,CAAC,GDIE,GAAGR,IAAI;AAC9B1C,ECJE,ICzCU2O,CF6CL,CAACxL,CCJC,EAAG,CAAC,EAAE,CCzCM,CDyCJ,CCzCM,CDyCJ,CAAC,QCzCa,AF6CN,GAAGT,IAAI;AAElC1C,ECLE,IC1CiC4H,CF+C5B,CAACxE,ACLA,EAAG,CC1C6B,AD0C5B,EC1C8BsL,AD0C5B,EAAE,EDKC,ACLC,CAAC,EC1C8B,AF+C7B,CE/C8BL,SF+CpBhL,IAAI,EAAE;EAAE,ACJpC,EC3CsD,CAAC,IF+CZ,ACJpC,EDIsC,ACJnC,CAAC,EAAE,EAAE,EAAE,CAAC;ADI4B,CAAC,CCH/C,EC3CEgL,ID2CI,CC3CC,CD2CE,CC3CAK,AD2CC,EAAE,EAAE,EAAE,CC3CA,AD2CC,CC3CAL;AFgDnBrO,EE/CE,AD2CA,CC3CC,CAAC,GF+CG,CAACsD,ACJA,EAAG,CAAC,EAAE,EDIC,ACJC,EAAE,CDIA,ACJC,UDISD,IAAI,EAAE;EE9ChC,AF+CE,ACJF,MDIQ,CE/CDwM,AD2CA,EAAG,CDIEvP,ACJD,EAAE,EAAE,CDIE,CAAC,ACJD,CAAC,IC3CG,IAAIyP,eAAe,UF+CY,CAAC;AE9CvD,AF+CA,CAAC,CCJC,SAAS,EAAG,CAAC,EAAE,EAAE,EAAE,CAAC;ADMtB/P,ECLE,KDKK,ACLA,CDKCuD,CCLE,CAAC,CDKA,CCLE,EDKC,ACLC,EAAE,CAAC,SDKQ;AE/C1B,EF+C4B,ACJ1B,ODIiC,CCJzB,EDI4B,ACJzB,CAAC,EAAE,EAAE,EAAE;AC1CpB,AF8CuC,ACHvC,CDGwC,ACHvC,QC3CQyM,aAAaA,CAAC9N,KAAK,EAAE;AF+C9BlC,EE9CE,KF8CK,CAACwD,CE9CCtB,IF8CI,CE9CC,CAAC+N,CF8CC,IE9CI,CAAEC,IAAI,CF8CAzM,GE9CK,AF8CF,EAAE,KE9COyM,IAAI,KAAK,QAAQ,CAAC;AACxD,AD2CA,EDGI,MAAM,IAAI5P,KAAK,CAAC,gCAAgC,CAAC;AACrD,ACHAgE,CDGC,MCHM,CAAC8C,MAAM,GAAG;AC1CjB,AF8CApH,ECHE,KDGK,CAAC0D,GCHG,EDGE,ACHA,GDGG,GCHG,SDGQ;AE7C3B,EF6C6B,ACF3B,OC3COyM,AF6C2B,CAAC,ACF3B,EAAE,QAAQ,CC3CCA,CAACxL,CAAC,EAAE;AF6Cc,CAAC,CE5CtC,AD2CA,OC3COA,CAAC,CAACyL,AD2CA,EAAE,EC3CE,KAAK,CD2CC,WC3CW;AAChC,ED2CE,WAAW,EAAE,MAAM;EACnB,MAAM,EAAE,MAAM;AC1ChB,ED2CE,QAAQ,EAAE,OAAO;AC1CnB,ED2CE,MAAM,CC3CCC,CD2CC,SAAS,OC3COA,CAAC1L,CAAC,EAAE;EAC5B,AD2CA,OC3COA,CAAC,CAACyL,IAAI,KAAK,mBAAmB;AACvC,ED2CE,QAAQ,EAAE;AACZ,CAAC;AC1CD,AD6CA,SAASlJ,gBAAgBA,CAAC1C,GAAG,EAAE6C,SAAS,EAAE;AC5C1C,ED6CE,IAAIC,GC7CGgJ,ED6CE,GAAGhM,OAAO,CAAC8C,KC7CKkJ,CAAC5B,AD6CA,CAACrH,MC7CM,EAAE,CD6CC,CAAC;EC5CrC,AD8CA,IC9CI,AD8CAC,KAAK,EC9CEoH,AD8CA,OC9CO,KAAK,QAAQ,EAC7B,OAAO,KAAK;EACd,ED6CE,EC7CEA,KD6CK,EC7CE,CAACC,MD6CM,GC7CG,AD6CArK,KC7CK,ED6CE,CAACuC,MAAM,CC7CC,AD6CAS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","file":"script.75da7f30.js","sourceRoot":"..","sourcesContent":["module.exports = function isBuffer(arg) {\n  return arg && typeof arg === 'object'\n    && typeof arg.copy === 'function'\n    && typeof arg.fill === 'function'\n    && typeof arg.readUInt8 === 'function';\n}","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    var TempCtor = function () {}\n    TempCtor.prototype = superCtor.prototype\n    ctor.prototype = new TempCtor()\n    ctor.prototype.constructor = ctor\n  }\n}\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar getOwnPropertyDescriptors = Object.getOwnPropertyDescriptors ||\n  function getOwnPropertyDescriptors(obj) {\n    var keys = Object.keys(obj);\n    var descriptors = {};\n    for (var i = 0; i < keys.length; i++) {\n      descriptors[keys[i]] = Object.getOwnPropertyDescriptor(obj, keys[i]);\n    }\n    return descriptors;\n  };\n\nvar formatRegExp = /%[sdj%]/g;\nexports.format = function(f) {\n  if (!isString(f)) {\n    var objects = [];\n    for (var i = 0; i < arguments.length; i++) {\n      objects.push(inspect(arguments[i]));\n    }\n    return objects.join(' ');\n  }\n\n  var i = 1;\n  var args = arguments;\n  var len = args.length;\n  var str = String(f).replace(formatRegExp, function(x) {\n    if (x === '%%') return '%';\n    if (i >= len) return x;\n    switch (x) {\n      case '%s': return String(args[i++]);\n      case '%d': return Number(args[i++]);\n      case '%j':\n        try {\n          return JSON.stringify(args[i++]);\n        } catch (_) {\n          return '[Circular]';\n        }\n      default:\n        return x;\n    }\n  });\n  for (var x = args[i]; i < len; x = args[++i]) {\n    if (isNull(x) || !isObject(x)) {\n      str += ' ' + x;\n    } else {\n      str += ' ' + inspect(x);\n    }\n  }\n  return str;\n};\n\n\n// Mark that a method should not be used.\n// Returns a modified function which warns once by default.\n// If --no-deprecation is set, then it is a no-op.\nexports.deprecate = function(fn, msg) {\n  if (typeof process !== 'undefined' && process.noDeprecation === true) {\n    return fn;\n  }\n\n  // Allow for deprecating things in the process of starting up.\n  if (typeof process === 'undefined') {\n    return function() {\n      return exports.deprecate(fn, msg).apply(this, arguments);\n    };\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (process.throwDeprecation) {\n        throw new Error(msg);\n      } else if (process.traceDeprecation) {\n        console.trace(msg);\n      } else {\n        console.error(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n};\n\n\nvar debugs = {};\nvar debugEnviron;\nexports.debuglog = function(set) {\n  if (isUndefined(debugEnviron))\n    debugEnviron = process.env.NODE_DEBUG || '';\n  set = set.toUpperCase();\n  if (!debugs[set]) {\n    if (new RegExp('\\\\b' + set + '\\\\b', 'i').test(debugEnviron)) {\n      var pid = process.pid;\n      debugs[set] = function() {\n        var msg = exports.format.apply(exports, arguments);\n        console.error('%s %d: %s', set, pid, msg);\n      };\n    } else {\n      debugs[set] = function() {};\n    }\n  }\n  return debugs[set];\n};\n\n\n/**\n * Echos the value of a value. Trys to print the value out\n * in the best way possible given the different types.\n *\n * @param {Object} obj The object to print out.\n * @param {Object} opts Optional options object that alters the output.\n */\n/* legacy: obj, showHidden, depth, colors*/\nfunction inspect(obj, opts) {\n  // default options\n  var ctx = {\n    seen: [],\n    stylize: stylizeNoColor\n  };\n  // legacy...\n  if (arguments.length >= 3) ctx.depth = arguments[2];\n  if (arguments.length >= 4) ctx.colors = arguments[3];\n  if (isBoolean(opts)) {\n    // legacy...\n    ctx.showHidden = opts;\n  } else if (opts) {\n    // got an \"options\" object\n    exports._extend(ctx, opts);\n  }\n  // set default options\n  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;\n  if (isUndefined(ctx.depth)) ctx.depth = 2;\n  if (isUndefined(ctx.colors)) ctx.colors = false;\n  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;\n  if (ctx.colors) ctx.stylize = stylizeWithColor;\n  return formatValue(ctx, obj, ctx.depth);\n}\nexports.inspect = inspect;\n\n\n// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics\ninspect.colors = {\n  'bold' : [1, 22],\n  'italic' : [3, 23],\n  'underline' : [4, 24],\n  'inverse' : [7, 27],\n  'white' : [37, 39],\n  'grey' : [90, 39],\n  'black' : [30, 39],\n  'blue' : [34, 39],\n  'cyan' : [36, 39],\n  'green' : [32, 39],\n  'magenta' : [35, 39],\n  'red' : [31, 39],\n  'yellow' : [33, 39]\n};\n\n// Don't use 'blue' not visible on cmd.exe\ninspect.styles = {\n  'special': 'cyan',\n  'number': 'yellow',\n  'boolean': 'yellow',\n  'undefined': 'grey',\n  'null': 'bold',\n  'string': 'green',\n  'date': 'magenta',\n  // \"name\": intentionally not styling\n  'regexp': 'red'\n};\n\n\nfunction stylizeWithColor(str, styleType) {\n  var style = inspect.styles[styleType];\n\n  if (style) {\n    return '\\u001b[' + inspect.colors[style][0] + 'm' + str +\n           '\\u001b[' + inspect.colors[style][1] + 'm';\n  } else {\n    return str;\n  }\n}\n\n\nfunction stylizeNoColor(str, styleType) {\n  return str;\n}\n\n\nfunction arrayToHash(array) {\n  var hash = {};\n\n  array.forEach(function(val, idx) {\n    hash[val] = true;\n  });\n\n  return hash;\n}\n\n\nfunction formatValue(ctx, value, recurseTimes) {\n  // Provide a hook for user-specified inspect functions.\n  // Check that value is an object with an inspect function on it\n  if (ctx.customInspect &&\n      value &&\n      isFunction(value.inspect) &&\n      // Filter out the util module, it's inspect function is special\n      value.inspect !== exports.inspect &&\n      // Also filter out any prototype objects using the circular check.\n      !(value.constructor && value.constructor.prototype === value)) {\n    var ret = value.inspect(recurseTimes, ctx);\n    if (!isString(ret)) {\n      ret = formatValue(ctx, ret, recurseTimes);\n    }\n    return ret;\n  }\n\n  // Primitive types cannot have properties\n  var primitive = formatPrimitive(ctx, value);\n  if (primitive) {\n    return primitive;\n  }\n\n  // Look up the keys of the object.\n  var keys = Object.keys(value);\n  var visibleKeys = arrayToHash(keys);\n\n  if (ctx.showHidden) {\n    keys = Object.getOwnPropertyNames(value);\n  }\n\n  // IE doesn't make error fields non-enumerable\n  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx\n  if (isError(value)\n      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {\n    return formatError(value);\n  }\n\n  // Some type of object without properties can be shortcutted.\n  if (keys.length === 0) {\n    if (isFunction(value)) {\n      var name = value.name ? ': ' + value.name : '';\n      return ctx.stylize('[Function' + name + ']', 'special');\n    }\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    }\n    if (isDate(value)) {\n      return ctx.stylize(Date.prototype.toString.call(value), 'date');\n    }\n    if (isError(value)) {\n      return formatError(value);\n    }\n  }\n\n  var base = '', array = false, braces = ['{', '}'];\n\n  // Make Array say that they are Array\n  if (isArray(value)) {\n    array = true;\n    braces = ['[', ']'];\n  }\n\n  // Make functions say that they are functions\n  if (isFunction(value)) {\n    var n = value.name ? ': ' + value.name : '';\n    base = ' [Function' + n + ']';\n  }\n\n  // Make RegExps say that they are RegExps\n  if (isRegExp(value)) {\n    base = ' ' + RegExp.prototype.toString.call(value);\n  }\n\n  // Make dates with properties first say the date\n  if (isDate(value)) {\n    base = ' ' + Date.prototype.toUTCString.call(value);\n  }\n\n  // Make error with message first say the error\n  if (isError(value)) {\n    base = ' ' + formatError(value);\n  }\n\n  if (keys.length === 0 && (!array || value.length == 0)) {\n    return braces[0] + base + braces[1];\n  }\n\n  if (recurseTimes < 0) {\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    } else {\n      return ctx.stylize('[Object]', 'special');\n    }\n  }\n\n  ctx.seen.push(value);\n\n  var output;\n  if (array) {\n    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\n  } else {\n    output = keys.map(function(key) {\n      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\n    });\n  }\n\n  ctx.seen.pop();\n\n  return reduceToSingleString(output, base, braces);\n}\n\n\nfunction formatPrimitive(ctx, value) {\n  if (isUndefined(value))\n    return ctx.stylize('undefined', 'undefined');\n  if (isString(value)) {\n    var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '')\n                                             .replace(/'/g, \"\\\\'\")\n                                             .replace(/\\\\\"/g, '\"') + '\\'';\n    return ctx.stylize(simple, 'string');\n  }\n  if (isNumber(value))\n    return ctx.stylize('' + value, 'number');\n  if (isBoolean(value))\n    return ctx.stylize('' + value, 'boolean');\n  // For some reason typeof null is \"object\", so special case here.\n  if (isNull(value))\n    return ctx.stylize('null', 'null');\n}\n\n\nfunction formatError(value) {\n  return '[' + Error.prototype.toString.call(value) + ']';\n}\n\n\nfunction formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n  var output = [];\n  for (var i = 0, l = value.length; i < l; ++i) {\n    if (hasOwnProperty(value, String(i))) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          String(i), true));\n    } else {\n      output.push('');\n    }\n  }\n  keys.forEach(function(key) {\n    if (!key.match(/^\\d+$/)) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          key, true));\n    }\n  });\n  return output;\n}\n\n\nfunction formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\n  var name, str, desc;\n  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };\n  if (desc.get) {\n    if (desc.set) {\n      str = ctx.stylize('[Getter/Setter]', 'special');\n    } else {\n      str = ctx.stylize('[Getter]', 'special');\n    }\n  } else {\n    if (desc.set) {\n      str = ctx.stylize('[Setter]', 'special');\n    }\n  }\n  if (!hasOwnProperty(visibleKeys, key)) {\n    name = '[' + key + ']';\n  }\n  if (!str) {\n    if (ctx.seen.indexOf(desc.value) < 0) {\n      if (isNull(recurseTimes)) {\n        str = formatValue(ctx, desc.value, null);\n      } else {\n        str = formatValue(ctx, desc.value, recurseTimes - 1);\n      }\n      if (str.indexOf('\\n') > -1) {\n        if (array) {\n          str = str.split('\\n').map(function(line) {\n            return '  ' + line;\n          }).join('\\n').substr(2);\n        } else {\n          str = '\\n' + str.split('\\n').map(function(line) {\n            return '   ' + line;\n          }).join('\\n');\n        }\n      }\n    } else {\n      str = ctx.stylize('[Circular]', 'special');\n    }\n  }\n  if (isUndefined(name)) {\n    if (array && key.match(/^\\d+$/)) {\n      return str;\n    }\n    name = JSON.stringify('' + key);\n    if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n      name = name.substr(1, name.length - 2);\n      name = ctx.stylize(name, 'name');\n    } else {\n      name = name.replace(/'/g, \"\\\\'\")\n                 .replace(/\\\\\"/g, '\"')\n                 .replace(/(^\"|\"$)/g, \"'\");\n      name = ctx.stylize(name, 'string');\n    }\n  }\n\n  return name + ': ' + str;\n}\n\n\nfunction reduceToSingleString(output, base, braces) {\n  var numLinesEst = 0;\n  var length = output.reduce(function(prev, cur) {\n    numLinesEst++;\n    if (cur.indexOf('\\n') >= 0) numLinesEst++;\n    return prev + cur.replace(/\\u001b\\[\\d\\d?m/g, '').length + 1;\n  }, 0);\n\n  if (length > 60) {\n    return braces[0] +\n           (base === '' ? '' : base + '\\n ') +\n           ' ' +\n           output.join(',\\n  ') +\n           ' ' +\n           braces[1];\n  }\n\n  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\n}\n\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\nfunction isArray(ar) {\n  return Array.isArray(ar);\n}\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return isObject(re) && objectToString(re) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return isObject(d) && objectToString(d) === '[object Date]';\n}\nexports.isDate = isDate;\n\nfunction isError(e) {\n  return isObject(e) &&\n      (objectToString(e) === '[object Error]' || e instanceof Error);\n}\nexports.isError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\nexports.isPrimitive = isPrimitive;\n\nexports.isBuffer = require('./support/isBuffer');\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n\n\nfunction pad(n) {\n  return n < 10 ? '0' + n.toString(10) : n.toString(10);\n}\n\n\nvar months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',\n              'Oct', 'Nov', 'Dec'];\n\n// 26 Feb 16:19:34\nfunction timestamp() {\n  var d = new Date();\n  var time = [pad(d.getHours()),\n              pad(d.getMinutes()),\n              pad(d.getSeconds())].join(':');\n  return [d.getDate(), months[d.getMonth()], time].join(' ');\n}\n\n\n// log is just a thin wrapper to console.log that prepends a timestamp\nexports.log = function() {\n  console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));\n};\n\n\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * The Function.prototype.inherits from lang.js rewritten as a standalone\n * function (not on Function.prototype). NOTE: If this file is to be loaded\n * during bootstrapping this function needs to be rewritten using some native\n * functions as prototype setup using normal JavaScript does not work as\n * expected during bootstrapping (see mirror.js in r114903).\n *\n * @param {function} ctor Constructor function which needs to inherit the\n *     prototype.\n * @param {function} superCtor Constructor function to inherit prototype from.\n */\nexports.inherits = require('inherits');\n\nexports._extend = function(origin, add) {\n  // Don't do anything if add isn't an object\n  if (!add || !isObject(add)) return origin;\n\n  var keys = Object.keys(add);\n  var i = keys.length;\n  while (i--) {\n    origin[keys[i]] = add[keys[i]];\n  }\n  return origin;\n};\n\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nvar kCustomPromisifiedSymbol = typeof Symbol !== 'undefined' ? Symbol('util.promisify.custom') : undefined;\n\nexports.promisify = function promisify(original) {\n  if (typeof original !== 'function')\n    throw new TypeError('The \"original\" argument must be of type Function');\n\n  if (kCustomPromisifiedSymbol && original[kCustomPromisifiedSymbol]) {\n    var fn = original[kCustomPromisifiedSymbol];\n    if (typeof fn !== 'function') {\n      throw new TypeError('The \"util.promisify.custom\" argument must be of type Function');\n    }\n    Object.defineProperty(fn, kCustomPromisifiedSymbol, {\n      value: fn, enumerable: false, writable: false, configurable: true\n    });\n    return fn;\n  }\n\n  function fn() {\n    var promiseResolve, promiseReject;\n    var promise = new Promise(function (resolve, reject) {\n      promiseResolve = resolve;\n      promiseReject = reject;\n    });\n\n    var args = [];\n    for (var i = 0; i < arguments.length; i++) {\n      args.push(arguments[i]);\n    }\n    args.push(function (err, value) {\n      if (err) {\n        promiseReject(err);\n      } else {\n        promiseResolve(value);\n      }\n    });\n\n    try {\n      original.apply(this, args);\n    } catch (err) {\n      promiseReject(err);\n    }\n\n    return promise;\n  }\n\n  Object.setPrototypeOf(fn, Object.getPrototypeOf(original));\n\n  if (kCustomPromisifiedSymbol) Object.defineProperty(fn, kCustomPromisifiedSymbol, {\n    value: fn, enumerable: false, writable: false, configurable: true\n  });\n  return Object.defineProperties(\n    fn,\n    getOwnPropertyDescriptors(original)\n  );\n}\n\nexports.promisify.custom = kCustomPromisifiedSymbol\n\nfunction callbackifyOnRejected(reason, cb) {\n  // `!reason` guard inspired by bluebird (Ref: https://goo.gl/t5IS6M).\n  // Because `null` is a special error value in callbacks which means \"no error\n  // occurred\", we error-wrap so the callback consumer can distinguish between\n  // \"the promise rejected with null\" or \"the promise fulfilled with undefined\".\n  if (!reason) {\n    var newReason = new Error('Promise was rejected with a falsy value');\n    newReason.reason = reason;\n    reason = newReason;\n  }\n  return cb(reason);\n}\n\nfunction callbackify(original) {\n  if (typeof original !== 'function') {\n    throw new TypeError('The \"original\" argument must be of type Function');\n  }\n\n  // We DO NOT return the promise as it gives the user a false sense that\n  // the promise is actually somehow related to the callback's execution\n  // and that the callback throwing will reject the promise.\n  function callbackified() {\n    var args = [];\n    for (var i = 0; i < arguments.length; i++) {\n      args.push(arguments[i]);\n    }\n\n    var maybeCb = args.pop();\n    if (typeof maybeCb !== 'function') {\n      throw new TypeError('The last argument must be of type Function');\n    }\n    var self = this;\n    var cb = function() {\n      return maybeCb.apply(self, arguments);\n    };\n    // In true node style we process the callback on `nextTick` with all the\n    // implications (stack, `uncaughtException`, `async_hooks`)\n    original.apply(this, args)\n      .then(function(ret) { process.nextTick(cb, null, ret) },\n            function(rej) { process.nextTick(callbackifyOnRejected, rej, cb) });\n  }\n\n  Object.setPrototypeOf(callbackified, Object.getPrototypeOf(original));\n  Object.defineProperties(callbackified,\n                          getOwnPropertyDescriptors(original));\n  return callbackified;\n}\nexports.callbackify = callbackify;\n","// src/exceptions/invalid-formula.exception.ts\nvar InvalidFormulaException = class extends Error {\n};\n\n// src/exceptions/invalid-inference.exception.ts\nvar InferenceException = class extends Error {\n};\n\n// src/exceptions/invalid-proof-sequence.exception.ts\nvar InvalidProofSequenceException = class extends Error {\n};\n\n// src/exceptions/unrecognized-token.exception.ts\nvar UnrecognizedTokenException = class extends Error {\n};\n\n// src/builder/Builder.ts\nvar _Builder = class _Builder {\n  static biconditional(left, right) {\n    return `(${left} <-> ${right})`;\n  }\n  static conjunction(left, right) {\n    return `(${left} \\u2227 ${right})`;\n  }\n  static disjunction(left, right) {\n    return `(${left} \\u2228 ${right})`;\n  }\n  static implication(left, right) {\n    return `(${left} -> ${right})`;\n  }\n  static buildRecursively(formula) {\n    if (typeof formula === \"string\")\n      return formula;\n    if (\"operation\" in formula && formula.operation === \"Negation\")\n      return `\\xAC(${this.buildFormula(formula.value)})`;\n    if (!(\"operation\" in formula))\n      throw new InvalidFormulaException(\"Invalid Formula.\");\n    const left = this.buildFormula(formula.left);\n    const right = this.buildFormula(formula.right);\n    const operation = formula.operation;\n    return this.operations[operation](left, right);\n  }\n  /**\n   * Builds a formula with the syntax of logic.\n   * @param formula - The logical formula to build.\n   * @returns The builded logical formula.\n   * @throws {InvalidFormulaException}\n   */\n  static buildFormula(formula) {\n    const result = this.buildRecursively(formula);\n    return result;\n  }\n};\n_Builder.operations = {\n  Biconditional: _Builder.biconditional,\n  Conjunction: _Builder.conjunction,\n  Disjunction: _Builder.disjunction,\n  Implication: _Builder.implication\n};\nvar Builder = _Builder;\n\n// src/utils/isBinaryOperation.ts\nfunction isBinaryOperationFormula(formula) {\n  return !!(formula.operation && formula.left && formula.right);\n}\n\n// src/utils/isBiconditional.ts\nfunction isBiconditional(formula) {\n  return formula.operation === \"Biconditional\" && isBinaryOperationFormula(formula);\n}\n\n// src/utils/isConjunction.ts\nfunction isConjunction(formula) {\n  return formula.operation === \"Conjunction\" && isBinaryOperationFormula(formula);\n}\n\n// src/utils/isDisjunction.ts\nfunction isDisjunction(formula) {\n  return formula.operation === \"Disjunction\" && isBinaryOperationFormula(formula);\n}\n\n// src/utils/isImplication.ts\nfunction isImplication(formula) {\n  return formula.operation === \"Implication\" && isBinaryOperationFormula(formula);\n}\n\n// src/utils/isContradiction.ts\nimport { isDeepStrictEqual } from \"util\";\n\n// src/utils/isNegation.ts\nfunction isNegation(formula) {\n  return formula.operation === \"Negation\" && !!formula.value;\n}\n\n// src/utils/eliminateDoubleNegation.ts\nfunction eliminateDoubleNegations(formula) {\n  if (isNegation(formula)) {\n    const innerValue = formula.value;\n    if (isNegation(innerValue)) {\n      return eliminateDoubleNegations(innerValue.value);\n    }\n    return {\n      operation: \"Negation\",\n      value: eliminateDoubleNegations(innerValue)\n    };\n  }\n  if (isBinaryOperationFormula(formula)) {\n    return {\n      operation: formula.operation,\n      left: eliminateDoubleNegations(formula.left),\n      right: eliminateDoubleNegations(formula.right)\n    };\n  }\n  return formula;\n}\n\n// src/utils/isContradiction.ts\nfunction isContradiction(formula) {\n  formula = eliminateDoubleNegations(formula);\n  const firstCondition = isDeepStrictEqual(formula, {\n    operation: \"Conjunction\",\n    left: formula.left,\n    right: { operation: \"Negation\", value: formula.left }\n  });\n  const secondCondition = isDeepStrictEqual(formula, {\n    operation: \"Conjunction\",\n    left: { operation: \"Negation\", value: formula.right },\n    right: formula.right\n  });\n  return firstCondition || secondCondition;\n}\n\n// src/utils/isArrayString.ts\nfunction isArrayString(array) {\n  return array.every((item) => typeof item === \"string\");\n}\n\n// src/utils/isHypothesis.ts\nfunction isHypothesis(x) {\n  return x.type === \"Hypothesis\";\n}\n\n// src/utils/isEndOfHypothesis.ts\nfunction isEndOfHypothesis(x) {\n  return x.type === \"End of Hypothesis\";\n}\n\n// src/utils/isMolecularFormula.ts\nfunction isMolecularFormula(formula) {\n  if (typeof formula === \"string\")\n    return false;\n  if (formula.operation === \"Negation\")\n    return false;\n  return true;\n}\n\n// src/utils/isProofItemInferred.ts\nfunction isProofItemInferred(x) {\n  if (!(x == null ? void 0 : x.type))\n    return false;\n  return [\"Knowledge\", \"End of Hypothesis\", \"Conclusion\"].includes(x.type);\n}\n\n// src/utils/isPropositionalVariable.ts\nvar propositionalVariablesList = [\n  \"A\",\n  \"B\",\n  \"C\",\n  \"D\",\n  \"E\",\n  \"F\",\n  \"G\",\n  \"H\",\n  \"I\",\n  \"J\",\n  \"K\",\n  \"L\",\n  \"M\",\n  \"N\",\n  \"O\",\n  \"P\",\n  \"Q\",\n  \"R\",\n  \"S\",\n  \"T\",\n  \"U\",\n  \"V\",\n  \"W\",\n  \"X\",\n  \"Y\",\n  \"Z\"\n];\nfunction isPropositionalVariable(formula) {\n  return typeof formula === \"string\" && propositionalVariablesList.includes(formula);\n}\n\n// src/utils/buildConjunctionString.ts\nfunction buildConjunctionString(premises) {\n  const conjunctionFormulaArray = premises.map(\n    (premise) => `(${premise})`\n  );\n  const conjunctionFormulaString = conjunctionFormulaArray.join(\"\\u2227\");\n  return conjunctionFormulaString;\n}\n\n// src/utils/haveEvenNumberOfNegations.ts\nfunction haveEvenNumberOfNegations(formula) {\n  if (!isNegation(formula))\n    return true;\n  formula = eliminateDoubleNegations(formula);\n  return !isNegation(formula);\n}\n\n// src/lexer/Lexer.ts\nvar Lexer = class {\n  /**\n   * Creates a new Lexer instance.\n   * @param formula The propositional logic formula to tokenize.\n   */\n  constructor(formula) {\n    this.tokens = [];\n    this.pointer = 0;\n    this.operator = \"\";\n    this.input = formula;\n  }\n  /**\n   * Tokenizes the propositional logic formula.\n   * @returns An array of tokens representing the formula.\n   */\n  lex() {\n    while (this.next()) {\n      if (this.isSpecial(this.c)) {\n        this.operator += this.c;\n        if (this.operatorExists(this.operator)) {\n          this.push({\n            type: \"operator\",\n            value: this.operator\n          });\n          this.operator = \"\";\n        }\n      } else {\n        if (this.operator)\n          this.throwTokenException(\n            this.operator,\n            this.pointer - this.operator.length - 1\n          );\n        else if (this.isWhiteSpace(this.c))\n          continue;\n        else if (this.isVariable(this.c))\n          this.push({ type: \"variable\", value: this.c });\n        else if (this.isExpressionBoundary(this.c))\n          this.push({ type: \"boundary\", value: this.c });\n        else\n          this.throwTokenException(this.c, this.pointer - 2);\n      }\n    }\n    return this.tokens;\n  }\n  next() {\n    return this.c = this.input[this.pointer++];\n  }\n  push(token) {\n    this.tokens.push({\n      type: token.type,\n      value: token.value\n    });\n  }\n  isWhiteSpace(c) {\n    return /\\s/.test(c);\n  }\n  isVariable(c) {\n    return /[A-Z]/.test(c);\n  }\n  isSpecial(c) {\n    return /[¬∧∨&!|\\-><->]/.test(c);\n  }\n  isExpressionBoundary(c) {\n    return /[\\(\\)]/.test(c);\n  }\n  operatorExists(op) {\n    return [\"\\xAC\", \"!\", \"\\u2227\", \"&\", \"\\u2228\", \"|\", \"->\", \"<->\"].indexOf(op) !== -1;\n  }\n  throwTokenException(token, position) {\n    throw new UnrecognizedTokenException(\n      `Unrecognized token \"${token}\" on position ${position}`\n    );\n  }\n};\n\n// src/exceptions/syntax-error.exception.ts\nvar SyntaxException = class extends Error {\n};\n\n// src/parser/Parser.ts\nvar Parser = class {\n  /**\n   * Constructor of the Parser class.\n   * @param tokens Array of tokens to be analyzed.\n   */\n  constructor(tokens) {\n    this.lastIsVariable = false;\n    this.tokens = JSON.parse(JSON.stringify(tokens));\n  }\n  /**\n   * Performs the analysis of the tokens and returns the logical formula tree.\n   * @returns The logical formula resulting from the analysis of the tokens.\n   */\n  parse() {\n    return this.process();\n  }\n  process(operation) {\n    var _a, _b, _c, _d, _e, _f;\n    operation = operation || null;\n    const args = [];\n    while (this.next()) {\n      if (this.lastIsVariable && ((_a = this.token) == null ? void 0 : _a.type) === \"variable\")\n        throw new SyntaxException(\n          `Token \"${this.token.value}\": Expected one variable, but received more than 1.`\n        );\n      if (this.token === void 0)\n        break;\n      if (((_b = this.token) == null ? void 0 : _b.type) === \"boundary\") {\n        if (this.token.value === \")\")\n          return this.node(operation, args);\n        args.push(this.process());\n      }\n      if (((_c = this.token) == null ? void 0 : _c.type) === \"variable\") {\n        args.push(this.token.value);\n        if (this.isUnary(operation))\n          return this.node(operation, args);\n      }\n      if (((_d = this.token) == null ? void 0 : _d.type) === \"operator\") {\n        if (this.isUnary(this.token.value)) {\n          args.push(this.process(this.token.value));\n          continue;\n        }\n        if (operation) {\n          const tmp = args.slice(0);\n          args.length = 0;\n          args.push(this.node(operation, tmp));\n        }\n        operation = this.token.value;\n      }\n      this.lastIsVariable = ((_e = this.token) == null ? void 0 : _e.type) === \"variable\" || this.lastIsVariable && ((_f = this.token) == null ? void 0 : _f.type) === \"boundary\";\n    }\n    return this.node(operation, args);\n  }\n  next() {\n    return this.token = this.tokens.shift();\n  }\n  node(operator, args) {\n    if ([\"->\", \"<->\", \"&\", \"|\", \"\\u2227\", \"\\u2228\"].includes(operator)) {\n      if (args.length !== 2)\n        throw new SyntaxException(`\n        Token \"${operator}\": expected 2 variables, but received 1.\n      `);\n    }\n    if (operator === \"\\xAC\" || operator === \"!\")\n      return { operation: \"Negation\", value: args[0] };\n    if (operator === \"\\u2228\" || operator === \"|\")\n      return {\n        operation: \"Disjunction\",\n        left: args[0],\n        right: args[1]\n      };\n    if (operator === \"\\u2227\" || operator === \"&\")\n      return {\n        operation: \"Conjunction\",\n        left: args[0],\n        right: args[1]\n      };\n    if (operator === \"->\")\n      return {\n        operation: \"Implication\",\n        left: args[0],\n        right: args[1]\n      };\n    if (operator === \"<->\")\n      return {\n        operation: \"Biconditional\",\n        left: args[0],\n        right: args[1]\n      };\n    return args[0];\n  }\n  isUnary(operator) {\n    return operator === \"\\xAC\" || operator === \"!\";\n  }\n};\n\n// src/utils/parse.ts\nfunction parseToFormulaObject(formula) {\n  const tokens = new Lexer(formula).lex();\n  return new Parser(tokens).parse();\n}\nfunction parseToFormulaString(formula) {\n  return Builder.buildFormula(formula);\n}\n\n// src/utils/printTruthTable.ts\nfunction printTruthTable(truthTable) {\n  console.log(`\\x1B[36m${truthTable.headers.join(\"\t\")}\\x1B[0m`);\n  for (let i = 0; i < truthTable.truthCombinations.length; i++) {\n    const combination = truthTable.truthCombinations[i];\n    const values = truthTable.truthValues[i];\n    const formattedCombination = combination.map((value) => value ? \"\\x1B[32mT\\x1B[0m\" : \"\\x1B[31mF\\x1B[0m\").join(\"\t\");\n    const formattedValue = values ? \"\\x1B[32mT\\x1B[0m\" : \"\\x1B[31mF\\x1B[0m\";\n    console.log(`${formattedCombination}\t${formattedValue}`);\n  }\n}\n\n// src/utils/objectBuilder.ts\nfunction implication(left, right) {\n  let implication2 = { operation: \"Implication\", left, right };\n  return implication2;\n}\nfunction biconditional(left, right) {\n  let biconditional2 = { operation: \"Biconditional\", left, right };\n  return biconditional2;\n}\nfunction conjunction(left, right) {\n  let conjunction2 = { operation: \"Conjunction\", left, right };\n  return conjunction2;\n}\nfunction disjunction(left, right) {\n  let disjunction2 = { operation: \"Disjunction\", left, right };\n  return disjunction2;\n}\nfunction negation(value) {\n  let negation2 = { operation: \"Negation\", value };\n  return negation2;\n}\n\n// src/calculator/Calculator.ts\nvar Calculator = class _Calculator {\n  /**\n   * Generates a truth table for the given formula.\n   *\n   * @param formula - The logical formula to generate a truth table for.\n   * @param stringfiedFormula - An optional string representation of the formula.\n   * @returns The truth table as an array containing headers, truth combinations, and results.\n   *\n   * @example\n   * const output = Calculator.generateTruthTable('P -> Q');\n   * console.log(output);\n   * // Output:\n   * // {\n   * //   headers: ['P', 'Q', '(P -> Q)'],\n   * //   truthCombinations: [\n   * //     [false, false], [false, true],\n   * //     [true, false], [true, true]\n   * //   ],\n   * //   truthValues: [true, true, false, true]\n   * // }\n   */\n  static generateTruthTable(formula, stringfiedFormula) {\n    if (typeof formula === \"string\" && !isPropositionalVariable(formula)) {\n      const parsedFormula = parseToFormulaObject(formula);\n      return _Calculator.generateTruthTable(parsedFormula, formula);\n    }\n    const variables = /* @__PURE__ */ new Set();\n    _Calculator.collectVariables(formula, variables);\n    const variableArray = Array.from(variables);\n    const truthCombinations = _Calculator.generateTruthCombinations(\n      variableArray.length\n    );\n    const table = {\n      headers: [],\n      truthCombinations: [],\n      truthValues: []\n    };\n    variableArray.forEach((variable) => {\n      table.headers.push(variable);\n    });\n    stringfiedFormula = stringfiedFormula || Builder.buildFormula(formula);\n    table.headers.push(stringfiedFormula);\n    truthCombinations.forEach((combination) => {\n      const values = {};\n      variableArray.forEach((variable, index) => {\n        values[variable] = !!combination[index];\n      });\n      table.truthCombinations.push(combination);\n      const result = _Calculator.evaluate(formula, values);\n      table.truthValues.push(result);\n    });\n    return table;\n  }\n  /**\n   * Evaluates the given logical formula with the provided truth values for variables.\n   *\n   * @param formula - The logical formula to evaluate.\n   * @param values - An object representing truth values for propositional variables.\n   * @returns The result of the evaluation (true or false).\n   *\n   * @example\n   * const result = Calculator.evaluate('P -> Q', { P: true, Q: false });\n   * console.log(result); // Output: false\n   */\n  static evaluate(formula, values) {\n    if (typeof formula === \"string\" && !isPropositionalVariable(formula)) {\n      const parsedFormula = parseToFormulaObject(formula);\n      return _Calculator.evaluate(parsedFormula, values);\n    }\n    if (typeof formula === \"string\")\n      return values[`${formula}`];\n    if (formula.operation === \"Implication\") {\n      return _Calculator.evaluateImplication(formula, values);\n    }\n    if (formula.operation === \"Biconditional\") {\n      return _Calculator.evaluateBiconditional(formula, values);\n    }\n    if (formula.operation === \"Conjunction\") {\n      return _Calculator.evaluateConjunction(formula, values);\n    }\n    if (formula.operation === \"Disjunction\") {\n      return _Calculator.evaluateDisjunction(formula, values);\n    }\n    if (formula.operation === \"Negation\") {\n      return _Calculator.evaluateNegation(formula, values);\n    }\n    throw new Error(\"Invalid formula operation\");\n  }\n  /**\n   * Checks if a given formula is a semantic consequence of the given premises.\n   * A semantic consequence holds if, in every possible truth assignment to the propositional variables,\n   * when all premises are true, the conclusion is also true.\n   *\n   * @param premises - An array of logical formulas or strings representing the premises.\n   * @param conclusion - The conclusion formula to check as a semantic consequence.\n   * @returns True if the conclusion is a semantic consequence of the premises, false otherwise.\n   *\n   * @example\n   * const output = Calculator.isSemanticConsequence(['P->Q', 'P'], 'Q');\n   * console.log(output); // Output: true\n   */\n  static isSemanticConsequence(premises, conclusion) {\n    const variables = /* @__PURE__ */ new Set();\n    let conjunctionOfPremises;\n    if (typeof conclusion === \"string\" && !isPropositionalVariable(conclusion))\n      conclusion = parseToFormulaObject(conclusion);\n    if (premises.length === 1) {\n      conjunctionOfPremises = typeof premises[0] === \"object\" ? premises[0] : parseToFormulaObject(premises[0]);\n    } else {\n      if (!isArrayString(premises)) {\n        premises = premises.map((premise) => parseToFormulaString(premise));\n      }\n      let conjunctionFormulaString = buildConjunctionString(premises);\n      conjunctionOfPremises = parseToFormulaObject(conjunctionFormulaString);\n    }\n    _Calculator.collectVariables(conjunctionOfPremises, variables);\n    const variableArray = Array.from(variables);\n    const truthCombinations = _Calculator.generateTruthCombinations(variableArray.length);\n    for (const combination of truthCombinations) {\n      const values = {};\n      variableArray.forEach((variable, index) => {\n        values[variable] = !!combination[index];\n      });\n      const allPremisesAreTrue = _Calculator.evaluate(conjunctionOfPremises, values);\n      if (allPremisesAreTrue && !_Calculator.evaluate(conclusion, values))\n        return false;\n    }\n    return true;\n  }\n  static evaluateImplication(formula, values) {\n    const left = _Calculator.evaluate(formula.left, values);\n    const right = _Calculator.evaluate(formula.right, values);\n    return !left || right;\n  }\n  static evaluateBiconditional(formula, values) {\n    const left = _Calculator.evaluate(formula.left, values);\n    const right = _Calculator.evaluate(formula.right, values);\n    return left && right || !left && !right;\n  }\n  static evaluateConjunction(formula, values) {\n    const left = _Calculator.evaluate(formula.left, values);\n    const right = _Calculator.evaluate(formula.right, values);\n    return left && right;\n  }\n  static evaluateDisjunction(formula, values) {\n    const left = _Calculator.evaluate(formula.left, values);\n    const right = _Calculator.evaluate(formula.right, values);\n    return left || right;\n  }\n  static evaluateNegation(formula, values) {\n    const value = _Calculator.evaluate(formula.value, values);\n    return !value;\n  }\n  static generateTruthCombinations(numVariables) {\n    const combinations = [];\n    const totalCombinations = 2 ** numVariables;\n    for (let i = 0; i < totalCombinations; i++) {\n      const binaryString = i.toString(2).padStart(numVariables, \"0\");\n      const combination = binaryString.split(\"\").map((bit) => bit === \"1\");\n      combinations.push(combination);\n    }\n    return combinations;\n  }\n  static collectVariables(formula, variables) {\n    if (isPropositionalVariable(formula)) {\n      variables.add(formula);\n    } else if (isNegation(formula)) {\n      _Calculator.collectVariables(formula.value, variables);\n    } else {\n      _Calculator.collectVariables(formula.left, variables);\n      _Calculator.collectVariables(formula.right, variables);\n    }\n  }\n};\n\n// src/rulers/RuleApplier.ts\nimport { isDeepStrictEqual as isDeepStrictEqual3 } from \"util\";\n\n// src/rulers/RuleSetter.ts\nimport { isDeepStrictEqual as isDeepStrictEqual2 } from \"util\";\nvar RuleSetter = class {\n  static BiconditionalIntroduction(conditional1, conditional2) {\n    if (isDeepStrictEqual2(conditional1.left, conditional2.right) && isDeepStrictEqual2(conditional1.right, conditional2.left))\n      return {\n        operation: \"Biconditional\",\n        left: conditional1.left,\n        right: conditional1.right\n      };\n    const errorMsg = `Biconditional Introduction: cannot apply in ${parseToFormulaString(\n      conditional1\n    )} and ${parseToFormulaString(conditional2)}`;\n    throw new InferenceException(errorMsg);\n  }\n  static BiconditionalElimination(biconditional2) {\n    const implication1 = {\n      operation: \"Implication\",\n      left: biconditional2.left,\n      right: biconditional2.right\n    };\n    const implication2 = {\n      operation: \"Implication\",\n      left: biconditional2.right,\n      right: biconditional2.left\n    };\n    return {\n      operation: \"Conjunction\",\n      left: implication1,\n      right: implication2\n    };\n  }\n  static ConditionalProof(hypothesis, conclusionOfHypothesis) {\n    const conditional = {\n      operation: \"Implication\",\n      left: hypothesis,\n      right: conclusionOfHypothesis\n    };\n    return conditional;\n  }\n  static Conditionalization(formula, conditional) {\n    if (isDeepStrictEqual2(formula, conditional.right))\n      return conditional;\n    throw new InferenceException(\n      `Conditionalization: cannot apply in ${parseToFormulaString(\n        conditional\n      )} with ${parseToFormulaString(formula)}`\n    );\n  }\n  static Commutativity(formula) {\n    const right = formula.right;\n    formula.right = formula.left;\n    formula.left = right;\n    return formula;\n  }\n  static Contraposition(formula) {\n    const contraposition = {\n      operation: \"Implication\",\n      left: { operation: \"Negation\", value: formula.right },\n      right: { operation: \"Negation\", value: formula.left }\n    };\n    return eliminateDoubleNegations(contraposition);\n  }\n  static ConjunctionIntroduction(formula1, formula2) {\n    return {\n      operation: \"Conjunction\",\n      left: formula1,\n      right: formula2\n    };\n  }\n  static ConjunctionElimination(conjunction2) {\n    return [conjunction2.left, conjunction2.right];\n  }\n  static DeMorgan(formula) {\n    if (isNegation(formula)) {\n      if (isDisjunction(formula.value)) {\n        return {\n          operation: \"Conjunction\",\n          left: { operation: \"Negation\", value: formula.value.left },\n          right: { operation: \"Negation\", value: formula.value.right }\n        };\n      }\n      if (isConjunction(formula.value)) {\n        return {\n          operation: \"Disjunction\",\n          left: { operation: \"Negation\", value: formula.value.left },\n          right: { operation: \"Negation\", value: formula.value.right }\n        };\n      }\n    }\n    if (isDisjunction(formula)) {\n      if (!(isNegation(formula.left) && isNegation(formula.right)))\n        throw new InferenceException(\n          `De Morgan: cannot apply in ${parseToFormulaString(formula)}`\n        );\n      return {\n        operation: \"Negation\",\n        value: {\n          operation: \"Conjunction\",\n          left: formula.left.value,\n          right: formula.right.value\n        }\n      };\n    }\n    if (isConjunction(formula)) {\n      if (!(isNegation(formula.left) && isNegation(formula.right)))\n        throw new InferenceException(\n          `De Morgan: cannot apply in ${parseToFormulaString(formula)}`\n        );\n      return {\n        operation: \"Negation\",\n        value: {\n          operation: \"Disjunction\",\n          left: formula.left.value,\n          right: formula.right.value\n        }\n      };\n    }\n    throw new InferenceException(\n      `De Morgan: cannot apply in ${parseToFormulaString(formula)}`\n    );\n  }\n  static DisjunctionIntroduction(formula, disjunction2) {\n    if (isDeepStrictEqual2(disjunction2.left, formula))\n      return disjunction2;\n    if (isDeepStrictEqual2(disjunction2.right, formula))\n      return disjunction2;\n    const errorMsg = `Disjunction Introduction: cannot apply in ${parseToFormulaString(\n      disjunction2\n    )} with ${parseToFormulaString(formula)}`;\n    throw new InferenceException(errorMsg);\n  }\n  static DisjunctiveSyllogism(disjunction2, negatedDisjunct) {\n    if (isDeepStrictEqual2(disjunction2.left, negatedDisjunct.value))\n      return disjunction2.right;\n    if (isDeepStrictEqual2(disjunction2.right, negatedDisjunct.value))\n      return disjunction2.left;\n    const errorMsg = `Disjunctive Syllogism: cannot apply in ${parseToFormulaString(\n      disjunction2\n    )} with ${parseToFormulaString(negatedDisjunct)}`;\n    throw new InferenceException(errorMsg);\n  }\n  static ImplicationElimination(conditional) {\n    return {\n      operation: \"Disjunction\",\n      left: { operation: \"Negation\", value: conditional.left },\n      right: conditional.right\n    };\n  }\n  static ImplicationNegation(negation2) {\n    if (!isImplication(negation2.value))\n      throw new InferenceException(\n        `Implication Negation: cannot apply in ${parseToFormulaString(\n          negation2\n        )}`\n      );\n    return {\n      operation: \"Conjunction\",\n      left: negation2.value.left,\n      right: { operation: \"Negation\", value: negation2.value.right }\n    };\n  }\n  static DoubleNegation(formula) {\n    return eliminateDoubleNegations(formula);\n  }\n  static DoubleNegationIntroduction(formula) {\n    const negation2 = {\n      operation: \"Negation\",\n      value: { operation: \"Negation\", value: formula }\n    };\n    return negation2;\n  }\n  static ConjunctionOverDisjunctionDistribution(formula) {\n    return this.Distribute(formula, isDisjunction);\n  }\n  static DisjunctionOverConjunctionDistribution(formula) {\n    return this.Distribute(formula, isConjunction);\n  }\n  static ConjunctionAssociativity(formula) {\n    return this.Associate(formula, isConjunction);\n  }\n  static DisjunctionAssociativity(formula) {\n    return this.Associate(formula, isDisjunction);\n  }\n  static BiconditionalAssociativity(formula) {\n    return this.Associate(formula, isBiconditional);\n  }\n  static HypotheticalSyllogism(conditional1, conditional2) {\n    if (isDeepStrictEqual2(conditional1.right, conditional2.left)) {\n      return {\n        operation: \"Implication\",\n        left: conditional1.left,\n        right: conditional2.right\n      };\n    }\n    if (isDeepStrictEqual2(conditional1.left, conditional2.right)) {\n      return {\n        operation: \"Implication\",\n        left: conditional2.left,\n        right: conditional1.right\n      };\n    }\n    const errorMsg = `Hypothetical Syllogism: cannot apply in ${parseToFormulaString(\n      conditional1\n    )} with ${parseToFormulaString(conditional2)}`;\n    throw new InferenceException(errorMsg);\n  }\n  static ModusPonens(conditional, antecedent) {\n    if (isDeepStrictEqual2(conditional.left, antecedent))\n      return conditional.right;\n    const errorMsg = `Modus Ponens: cannot apply in ${parseToFormulaString(\n      conditional\n    )} with ${parseToFormulaString(antecedent)}`;\n    throw new InferenceException(errorMsg);\n  }\n  static ModusTollens(conditional, negatedConsequent) {\n    if (isDeepStrictEqual2(conditional.right, negatedConsequent.value))\n      return { operation: \"Negation\", value: conditional.left };\n    const errorMsg = `Modus Tollens: cannot apply in ${parseToFormulaString(\n      conditional\n    )} with ${parseToFormulaString(negatedConsequent)}`;\n    throw new InferenceException(errorMsg);\n  }\n  static ReductioAdAbsurdum(conditional) {\n    if (isContradiction(conditional.right))\n      return { operation: \"Negation\", value: conditional.left };\n    throw new InferenceException(\n      `Reductio Ad Absurdum: cannot apply in ${conditional} with ${conditional.right}`\n    );\n  }\n  static DistributeRecursively(formula, isK) {\n    try {\n      return this.Distribute(formula, isK);\n    } catch (e) {\n      return formula;\n    }\n  }\n  static Distribute(formula, isK) {\n    let KFormula;\n    let otherFormula;\n    if (isK(formula.left)) {\n      KFormula = formula.left;\n      otherFormula = formula.right;\n    } else if (isK(formula.right)) {\n      KFormula = formula.right, otherFormula = formula.left;\n    } else {\n      throw new InferenceException(\n        `Distribution: cannot apply in ${parseToFormulaString(formula)}`\n      );\n    }\n    let distributedFormula = {\n      operation: KFormula.operation,\n      left: {\n        operation: formula.operation,\n        left: otherFormula,\n        right: KFormula.left\n      },\n      right: {\n        operation: formula.operation,\n        left: otherFormula,\n        right: KFormula.right\n      }\n    };\n    if (!isPropositionalVariable(distributedFormula.left))\n      distributedFormula.left = this.DistributeRecursively(\n        distributedFormula.left,\n        isK\n      );\n    if (!isPropositionalVariable(distributedFormula.right))\n      distributedFormula.right = this.DistributeRecursively(\n        distributedFormula.right,\n        isK\n      );\n    return distributedFormula;\n  }\n  static Associate(formula, isT) {\n    let mainFormula;\n    let otherFormula;\n    if (isT(formula.left)) {\n      mainFormula = formula.left;\n      otherFormula = formula.right;\n      return {\n        operation: formula.operation,\n        left: mainFormula.left,\n        right: {\n          operation: formula.operation,\n          left: mainFormula.right,\n          right: otherFormula\n        }\n      };\n    }\n    if (isT(formula.right)) {\n      mainFormula = formula.right;\n      otherFormula = formula.left;\n      return {\n        operation: formula.operation,\n        left: {\n          operation: formula.operation,\n          left: otherFormula,\n          right: mainFormula.left\n        },\n        right: mainFormula.right\n      };\n    }\n    throw new InferenceException(\n      `Associativity: cannot apply in ${parseToFormulaString(formula)}`\n    );\n  }\n};\n\n// src/rulers/RuleApplier.ts\nvar RuleApplier = class _RuleApplier extends RuleSetter {\n  static biconditionalIntroduction(item, proof) {\n    const requiredItens = item.from[0];\n    const line = item.id;\n    _RuleApplier.throwsIfLengthDoesntMatch(item, 2, requiredItens.length);\n    _RuleApplier.throwsIfIndexDoesntExist(requiredItens, proof);\n    const formulas = [\n      proof[requiredItens[0]].expression,\n      proof[requiredItens[1]].expression\n    ];\n    if (!isImplication(formulas[0]) || !isImplication(formulas[1]))\n      throw new InferenceException(\n        `Biconditional Introduction (Line ${line}): conditionals not found.`\n      );\n    const inferenceResult = _RuleApplier.BiconditionalIntroduction(\n      formulas[0],\n      formulas[1]\n    );\n    _RuleApplier.throwsIfIsNotEqual(inferenceResult, item);\n    return inferenceResult;\n  }\n  static biconditionalElimination(item, proof) {\n    const requiredItem = item.from[0];\n    const line = item.id;\n    _RuleApplier.throwsIfLengthDoesntMatch(item, 1, requiredItem.length);\n    _RuleApplier.throwsIfIndexDoesntExist(requiredItem, proof);\n    const biconditional2 = proof[requiredItem[0]].expression;\n    if (!isBiconditional(biconditional2))\n      throw new InferenceException(\n        `Biconditional Elimination (Line ${line}): biconditional not found.`\n      );\n    const inferenceResult = _RuleApplier.BiconditionalElimination(biconditional2);\n    _RuleApplier.throwsIfIsNotEqual(inferenceResult, item);\n    return inferenceResult;\n  }\n  static conditionalization(item, proof) {\n    const requiredItem = item.from[0];\n    const line = item.id;\n    _RuleApplier.throwsIfLengthDoesntMatch(item, 1, requiredItem.length);\n    _RuleApplier.throwsIfIndexDoesntExist(requiredItem, proof);\n    if (!isImplication(item.expression))\n      throw new InferenceException(\n        `Conditionalization (Line ${line}): the formula is not an implication.`\n      );\n    const formula = proof[requiredItem[0]].expression;\n    if (typeof formula === \"string\" && !isPropositionalVariable(formula))\n      throw new InferenceException(\n        `Conditionalization (Line ${line}): formula not found.`\n      );\n    const inferenceResult = _RuleApplier.Conditionalization(\n      formula,\n      item.expression\n    );\n    _RuleApplier.throwsIfIsNotEqual(inferenceResult, item);\n    return inferenceResult;\n  }\n  static conjunctionIntroduction(item, proof) {\n    const requiredItens = item.from[0];\n    const line = item.id;\n    _RuleApplier.throwsIfLengthDoesntMatch(item, 2, requiredItens.length);\n    _RuleApplier.throwsIfIndexDoesntExist(requiredItens, proof);\n    const firstFormula = proof[requiredItens[0]].expression;\n    if (typeof firstFormula === \"string\" && !isPropositionalVariable(firstFormula))\n      throw new InferenceException(\n        `Conjunction Introduction (Line ${line}): line ${requiredItens[0]} formula not found.`\n      );\n    const secondFormula = proof[requiredItens[1]].expression;\n    if (typeof secondFormula === \"string\" && !isPropositionalVariable(secondFormula))\n      throw new InferenceException(\n        `Conjunction Introduction (Line ${line}): line ${requiredItens[1]} formula not found.`\n      );\n    const inferenceResult = _RuleApplier.ConjunctionIntroduction(\n      firstFormula,\n      secondFormula\n    );\n    _RuleApplier.throwsIfIsNotEqual(inferenceResult, item);\n    return inferenceResult;\n  }\n  static conjunctionElimination(item, proof) {\n    const requiredItem = item.from[0];\n    const line = item.id;\n    _RuleApplier.throwsIfLengthDoesntMatch(item, 1, requiredItem.length);\n    _RuleApplier.throwsIfIndexDoesntExist(requiredItem, proof);\n    const conjunction2 = proof[requiredItem[0]].expression;\n    if (!isConjunction(conjunction2))\n      throw new InferenceException(\n        `Conjunction Elimination (Line ${line}): conjunction not found.`\n      );\n    const inferenceResults = _RuleApplier.ConjunctionElimination(conjunction2);\n    if (!isDeepStrictEqual3(item.expression, inferenceResults[0]) && !isDeepStrictEqual3(item.expression, inferenceResults[1])) {\n      throw new InferenceException(\n        `Conjunction Elimination (Line ${line}): expected ${parseToFormulaString(\n          inferenceResults[0]\n        )} or ${parseToFormulaString(\n          inferenceResults[1]\n        )} but received ${parseToFormulaString(item.expression)}`\n      );\n    }\n    return inferenceResults;\n  }\n  static commutativity(item, proof) {\n    const requiredItem = item.from[0];\n    const line = item.id;\n    _RuleApplier.throwsIfLengthDoesntMatch(item, 1, requiredItem.length);\n    _RuleApplier.throwsIfIndexDoesntExist(requiredItem, proof);\n    const formula = proof[requiredItem[0]].expression;\n    if (!isDisjunction(formula) && !isConjunction(formula) && !isBiconditional(formula))\n      throw new InferenceException(\n        `Commutativity (Line ${line}): cannot find any conjunction, biconditional or disjunction.`\n      );\n    const inferenceResult = _RuleApplier.Commutativity(formula);\n    _RuleApplier.throwsIfIsNotEqual(inferenceResult, item);\n    return inferenceResult;\n  }\n  static contraposition(item, proof) {\n    const requiredItem = item.from[0];\n    const line = item.id;\n    _RuleApplier.throwsIfLengthDoesntMatch(item, 1, requiredItem.length);\n    _RuleApplier.throwsIfIndexDoesntExist(requiredItem, proof);\n    const formula = proof[requiredItem[0]].expression;\n    if (!isImplication(formula))\n      throw new InferenceException(\n        `Contraposition (Line ${line}): implication not found.`\n      );\n    const inferenceResult = _RuleApplier.Contraposition(formula);\n    _RuleApplier.throwsIfIsNotEqual(inferenceResult, item);\n    return inferenceResult;\n  }\n  static deMorgan(item, proof) {\n    const requiredItem = item.from[0];\n    const line = item.id;\n    _RuleApplier.throwsIfLengthDoesntMatch(item, 1, requiredItem.length);\n    _RuleApplier.throwsIfIndexDoesntExist(requiredItem, proof);\n    const formula = proof[requiredItem[0]].expression;\n    if (!isNegation(formula) && !isConjunction(formula) && !isDisjunction(formula))\n      throw new InferenceException(\n        `De Morgan (Line ${line}): formula is not a disjunction, conjunction or negation.`\n      );\n    const inferenceResult = _RuleApplier.DeMorgan(formula);\n    _RuleApplier.throwsIfIsNotEqual(inferenceResult, item);\n    return inferenceResult;\n  }\n  static disjunctionIntroduction(item, proof) {\n    const requiredItem = item.from[0];\n    const line = item.id;\n    _RuleApplier.throwsIfLengthDoesntMatch(item, 1, requiredItem.length);\n    _RuleApplier.throwsIfIndexDoesntExist(requiredItem, proof);\n    if (!isDisjunction(item.expression))\n      throw new InferenceException(\n        `Disjunction Introduction (Line ${line}): expression is not a disjunction`\n      );\n    const formula = proof[requiredItem[0]].expression;\n    if (typeof formula === \"string\" && !isPropositionalVariable(formula))\n      throw new InferenceException(\n        `Disjunction Introduction (Line ${line}): formula not found.`\n      );\n    const inferenceResult = _RuleApplier.DisjunctionIntroduction(\n      formula,\n      item.expression\n    );\n    _RuleApplier.throwsIfIsNotEqual(inferenceResult, item);\n    return inferenceResult;\n  }\n  static disjunctiveSyllogism(item, proof) {\n    const requiredItens = item.from[0];\n    const line = item.id;\n    _RuleApplier.throwsIfLengthDoesntMatch(item, 2, requiredItens.length);\n    _RuleApplier.throwsIfIndexDoesntExist(requiredItens, proof);\n    const firstFormula = proof[requiredItens[0]].expression;\n    const secondFormula = proof[requiredItens[1]].expression;\n    let remainingFormula;\n    let disjunction2;\n    if (isDisjunction(firstFormula)) {\n      disjunction2 = firstFormula;\n      remainingFormula = secondFormula;\n    }\n    if (isDisjunction(secondFormula)) {\n      disjunction2 = secondFormula;\n      remainingFormula = firstFormula;\n    }\n    if (!disjunction2)\n      throw new InferenceException(\n        `Disjunctive Syllogism (Line ${line}): disjunction not found`\n      );\n    let negation2;\n    if (isNegation(remainingFormula))\n      negation2 = remainingFormula;\n    if (!negation2)\n      throw new InferenceException(\n        `Disjunctive Syllogism (Line ${line}): negation not found`\n      );\n    const inferenceResult = _RuleApplier.DisjunctiveSyllogism(\n      disjunction2,\n      negation2\n    );\n    _RuleApplier.throwsIfIsNotEqual(inferenceResult, item);\n    return inferenceResult;\n  }\n  static doubleNegation(item, proof) {\n    const requiredItem = item.from[0];\n    const line = item.id;\n    _RuleApplier.throwsIfLengthDoesntMatch(item, 1, requiredItem.length);\n    _RuleApplier.throwsIfIndexDoesntExist(requiredItem, proof);\n    const formula = proof[requiredItem[0]].expression;\n    if (typeof formula === \"string\" && !isPropositionalVariable(formula))\n      throw new InferenceException(\n        `Double Negation (Line ${line}): formula not found.`\n      );\n    const inferenceResult = _RuleApplier.DoubleNegation(formula);\n    _RuleApplier.throwsIfIsNotEqual(inferenceResult, item);\n    return inferenceResult;\n  }\n  static doubleNegationIntroduction(item, proof) {\n    const requiredItem = item.from[0];\n    const line = item.id;\n    _RuleApplier.throwsIfLengthDoesntMatch(item, 1, requiredItem.length);\n    _RuleApplier.throwsIfIndexDoesntExist(requiredItem, proof);\n    const formula = proof[requiredItem[0]].expression;\n    if (typeof formula === \"string\" && !isPropositionalVariable(formula))\n      throw new InferenceException(\n        `Double Negation Introduction (Line ${line}): negation not found.`\n      );\n    const inferenceResult = _RuleApplier.DoubleNegationIntroduction(formula);\n    _RuleApplier.throwsIfIsNotEqual(inferenceResult, item);\n    return inferenceResult;\n  }\n  static hypotheticalSyllogism(item, proof) {\n    const requiredItens = item.from[0];\n    const line = item.id;\n    _RuleApplier.throwsIfLengthDoesntMatch(item, 2, requiredItens.length);\n    _RuleApplier.throwsIfIndexDoesntExist(requiredItens, proof);\n    const firstFormula = proof[requiredItens[0]].expression;\n    const secondFormula = proof[requiredItens[1]].expression;\n    if (!isImplication(firstFormula) || !isImplication(secondFormula))\n      throw new InferenceException(\n        `Hypothetical Syllogism (Line ${line}): both formulas should be conditionals.`\n      );\n    const inferenceResult = _RuleApplier.HypotheticalSyllogism(\n      firstFormula,\n      secondFormula\n    );\n    _RuleApplier.throwsIfIsNotEqual(inferenceResult, item);\n    return inferenceResult;\n  }\n  static implicationElimination(item, proof) {\n    const requiredItem = item.from[0];\n    const line = item.id;\n    _RuleApplier.throwsIfLengthDoesntMatch(item, 1, requiredItem.length);\n    _RuleApplier.throwsIfIndexDoesntExist(requiredItem, proof);\n    const formula = proof[requiredItem[0]].expression;\n    if (!isImplication(formula))\n      throw new InferenceException(\n        `Implication Elimination (Line ${line}): implication not found.`\n      );\n    const inferenceResult = _RuleApplier.ImplicationElimination(formula);\n    _RuleApplier.throwsIfIsNotEqual(inferenceResult, item);\n    return inferenceResult;\n  }\n  static implicationNegation(item, proof) {\n    const requiredItem = item.from[0];\n    const line = item.id;\n    _RuleApplier.throwsIfLengthDoesntMatch(item, 1, requiredItem.length);\n    _RuleApplier.throwsIfIndexDoesntExist(requiredItem, proof);\n    let formula = proof[requiredItem[0]].expression;\n    if (!isNegation(formula))\n      throw new InferenceException(\n        `Implication Negation (Line ${line}): negation not found`\n      );\n    const inferenceResult = _RuleApplier.ImplicationNegation(formula);\n    _RuleApplier.throwsIfIsNotEqual(inferenceResult, item);\n    return inferenceResult;\n  }\n  static modusPonens(item, proof) {\n    const requiredItens = item.from[0];\n    const line = item.id;\n    _RuleApplier.throwsIfLengthDoesntMatch(item, 2, requiredItens.length);\n    _RuleApplier.throwsIfIndexDoesntExist(requiredItens, proof);\n    let firstFormula = proof[requiredItens[0]].expression;\n    let secondFormula = proof[requiredItens[1]].expression;\n    let remainingFormula;\n    let implication2;\n    if (isImplication(firstFormula)) {\n      implication2 = firstFormula;\n      remainingFormula = secondFormula;\n    }\n    if (isImplication(secondFormula)) {\n      implication2 = secondFormula;\n      remainingFormula = firstFormula;\n    }\n    if (!implication2)\n      throw new InferenceException(\n        `Modus Ponens (Line ${line}): implication not found`\n      );\n    const antecedent = remainingFormula;\n    if (!isPropositionalVariable(antecedent) && typeof antecedent === \"string\")\n      throw new InferenceException(\n        `Modus Ponens (Line ${line}): antecedent not found`\n      );\n    const inferenceResult = _RuleApplier.ModusPonens(implication2, antecedent);\n    _RuleApplier.throwsIfIsNotEqual(inferenceResult, item);\n    return inferenceResult;\n  }\n  static modusTollens(item, proof) {\n    const requiredItens = item.from[0];\n    const line = item.id;\n    _RuleApplier.throwsIfLengthDoesntMatch(item, 2, requiredItens.length);\n    _RuleApplier.throwsIfIndexDoesntExist(requiredItens, proof);\n    const firstFormula = proof[requiredItens[0]].expression;\n    const secondFormula = proof[requiredItens[1]].expression;\n    let remainingFormula;\n    let implication2;\n    if (isImplication(firstFormula)) {\n      implication2 = firstFormula;\n      remainingFormula = secondFormula;\n    }\n    if (isImplication(secondFormula)) {\n      implication2 = secondFormula;\n      remainingFormula = firstFormula;\n    }\n    if (!implication2)\n      throw new InferenceException(\n        `Modus Tollens (Line ${line}): implication not found`\n      );\n    const consequent = remainingFormula;\n    if (!isNegation(consequent))\n      throw new InferenceException(\n        `Modus Tollens (Line ${line}): negated consequent not found`\n      );\n    const inferenceResult = _RuleApplier.ModusTollens(implication2, consequent);\n    _RuleApplier.throwsIfIsNotEqual(inferenceResult, item);\n    return inferenceResult;\n  }\n  static conjunctionOverDisjunctionDistribution(item, proof) {\n    const requiredItem = item.from[0];\n    const line = item.id;\n    _RuleApplier.throwsIfLengthDoesntMatch(item, 1, requiredItem.length);\n    _RuleApplier.throwsIfIndexDoesntExist(requiredItem, proof);\n    const conjunction2 = proof[requiredItem[0]].expression;\n    if (!isConjunction(conjunction2))\n      throw new InferenceException(\n        `Distribution (Line ${line}): conjunction not found.`\n      );\n    const inferenceResult = _RuleApplier.ConjunctionOverDisjunctionDistribution(conjunction2);\n    _RuleApplier.throwsIfIsNotEqual(inferenceResult, item);\n    return inferenceResult;\n  }\n  static disjunctionOverConjunctionDistribution(item, proof) {\n    const requiredItem = item.from[0];\n    const line = item.id;\n    _RuleApplier.throwsIfLengthDoesntMatch(item, 1, requiredItem.length);\n    _RuleApplier.throwsIfIndexDoesntExist(requiredItem, proof);\n    const disjunction2 = proof[requiredItem[0]].expression;\n    if (!isDisjunction(disjunction2))\n      throw new InferenceException(\n        `Distribution (Line ${line}): disjunction not found.`\n      );\n    const inferenceResult = _RuleApplier.DisjunctionOverConjunctionDistribution(disjunction2);\n    _RuleApplier.throwsIfIsNotEqual(inferenceResult, item);\n    return inferenceResult;\n  }\n  static conjunctionAssociativity(item, proof) {\n    const requiredItem = item.from[0];\n    const line = item.id;\n    _RuleApplier.throwsIfLengthDoesntMatch(item, 1, requiredItem.length);\n    _RuleApplier.throwsIfIndexDoesntExist(requiredItem, proof);\n    const conjunction2 = proof[requiredItem[0]].expression;\n    if (!isConjunction(conjunction2))\n      throw new InferenceException(\n        `Associativity (Line ${line}): conjunction not found.`\n      );\n    const inferenceResult = _RuleApplier.ConjunctionAssociativity(conjunction2);\n    _RuleApplier.throwsIfIsNotEqual(inferenceResult, item);\n    return inferenceResult;\n  }\n  static disjunctionAssociativity(item, proof) {\n    const requiredItem = item.from[0];\n    const line = item.id;\n    _RuleApplier.throwsIfLengthDoesntMatch(item, 1, requiredItem.length);\n    _RuleApplier.throwsIfIndexDoesntExist(requiredItem, proof);\n    const disjunction2 = proof[requiredItem[0]].expression;\n    if (!isDisjunction(disjunction2))\n      throw new InferenceException(\n        `Associativity (Line ${line}): disjunction not found.`\n      );\n    const inferenceResult = _RuleApplier.DisjunctionAssociativity(disjunction2);\n    _RuleApplier.throwsIfIsNotEqual(inferenceResult, item);\n    return inferenceResult;\n  }\n  static biconditionalAssociativity(item, proof) {\n    const requiredItem = item.from[0];\n    const line = item.id;\n    _RuleApplier.throwsIfLengthDoesntMatch(item, 1, requiredItem.length);\n    _RuleApplier.throwsIfIndexDoesntExist(requiredItem, proof);\n    const biconditional2 = proof[requiredItem[0]].expression;\n    if (!isBiconditional(biconditional2))\n      throw new InferenceException(\n        `Associativity (Line ${line}): disjunction not found.`\n      );\n    const inferenceResult = _RuleApplier.BiconditionalAssociativity(biconditional2);\n    _RuleApplier.throwsIfIsNotEqual(inferenceResult, item);\n    return inferenceResult;\n  }\n  static conditionalProof(item, proof) {\n    const requiredItens = item.from[0];\n    const line = item.id;\n    _RuleApplier.throwsIfLengthDoesntMatch(item, 2, requiredItens.length);\n    _RuleApplier.throwsIfIndexDoesntExist(requiredItens, proof);\n    const item1 = proof[requiredItens[0]];\n    const item2 = proof[requiredItens[1]];\n    if (!isPropositionalVariable(item2.expression) && typeof item2.expression === \"string\")\n      throw new InferenceException(\n        `Conditional Proof (Line ${line}): cannot find a formula at line ${item2.id}`\n      );\n    if (!isPropositionalVariable(item1.expression) && typeof item1.expression === \"string\")\n      throw new InferenceException(\n        `Conditional Proof (Line ${line}): cannot find a formula at line ${item1.id}`\n      );\n    let hypothesis;\n    let endOfHypothesis;\n    if (isHypothesis(item1) && isEndOfHypothesis(item2)) {\n      hypothesis = item1.expression;\n      if (item2.hypothesisId != item1.id)\n        throw new InferenceException(\n          `Conditional Proof (Line ${line}): end of hypothesis references line ${item2.hypothesisId} hypothesis, but received line ${item1.id} hypothesis`\n        );\n      endOfHypothesis = item2.expression;\n    } else if (isHypothesis(item2) && isEndOfHypothesis(item1)) {\n      hypothesis = item2.expression;\n      if (item1.hypothesisId != item2.id)\n        throw new InferenceException(\n          `Conditional Proof (Line ${line}): end of hypothesis references line ${item1.hypothesisId} hypothesis, but received line ${item2.id} hypothesis`\n        );\n      endOfHypothesis = item1.expression;\n    } else {\n      throw new InferenceException(\n        `Conditional Proof: end of hypothesis or hypothesis not found.`\n      );\n    }\n    const inferenceResult = _RuleApplier.ConditionalProof(\n      hypothesis,\n      endOfHypothesis\n    );\n    _RuleApplier.throwsIfIsNotEqual(inferenceResult, item);\n    return inferenceResult;\n  }\n  static reductioAdAbsurdum(item, proof) {\n    const requiredItem = item.from[0];\n    const line = item.id;\n    _RuleApplier.throwsIfLengthDoesntMatch(item, 1, requiredItem.length);\n    _RuleApplier.throwsIfIndexDoesntExist(requiredItem, proof);\n    const conditional = proof[requiredItem[0]].expression;\n    if (!isImplication(conditional))\n      throw new InferenceException(\n        `Reductio Ad Absurdum (Line ${line}): conditional not found.`\n      );\n    const inferenceResult = _RuleApplier.ReductioAdAbsurdum(conditional);\n    _RuleApplier.throwsIfIsNotEqual(inferenceResult, item);\n    return inferenceResult;\n  }\n  static throwsIfIsNotEqual(expectedFormula, actualItem) {\n    const actualFormula = actualItem.expression;\n    const inferenceMethod = actualItem.from[1];\n    if (!isDeepStrictEqual3(expectedFormula, actualFormula)) {\n      throw new InferenceException(`\n        ${inferenceMethod} (Line ${actualItem.id}): expected ${parseToFormulaString(\n        expectedFormula\n      )} but received ${parseToFormulaString(actualFormula)}\n      `);\n    }\n  }\n  static throwsIfLengthDoesntMatch(item, expected, received) {\n    const rule = item.from[1];\n    const line = item.id;\n    if (expected !== received)\n      throw new InferenceException(\n        `${rule} (Line ${line}): expect ${expected} formulas to apply the rule but received ${received}.`\n      );\n  }\n  static throwsIfIndexDoesntExist(requiredItens, proof) {\n    requiredItens.forEach((idx) => {\n      if (!proof[idx])\n        throw new InferenceException(`Cannot find a formula at index ${idx}`);\n    });\n  }\n};\n\n// src/types/syntactic/proof.ts\nvar inferenceRulesMap = {\n  \"Associativity (Biconditional)\": RuleApplier.biconditionalAssociativity,\n  \"Associativity (Conjunction)\": RuleApplier.conjunctionAssociativity,\n  \"Associativity (Disjunction)\": RuleApplier.disjunctionAssociativity,\n  \"Biconditional Elimination\": RuleApplier.biconditionalElimination,\n  \"Biconditional Introduction\": RuleApplier.biconditionalIntroduction,\n  \"Commutativity\": RuleApplier.commutativity,\n  \"Conditional Proof\": RuleApplier.conditionalProof,\n  \"Conditionalization\": RuleApplier.conditionalization,\n  \"Contraposition\": RuleApplier.contraposition,\n  \"Conjunction Elimination\": RuleApplier.conjunctionElimination,\n  \"Conjunction Introduction\": RuleApplier.conjunctionIntroduction,\n  \"De Morgan\": RuleApplier.deMorgan,\n  \"Disjunction Introduction\": RuleApplier.disjunctionIntroduction,\n  \"Disjunctive Syllogism\": RuleApplier.disjunctiveSyllogism,\n  \"Distribution (Conjunction over Disjunction)\": RuleApplier.conjunctionOverDisjunctionDistribution,\n  \"Distribution (Disjunction over Conjunction)\": RuleApplier.disjunctionOverConjunctionDistribution,\n  \"Double Negation\": RuleApplier.doubleNegation,\n  \"Double Negation Introduction\": RuleApplier.doubleNegationIntroduction,\n  \"Hypothetical Syllogism\": RuleApplier.hypotheticalSyllogism,\n  \"Implication Elimination\": RuleApplier.implicationElimination,\n  \"Implication Negation\": RuleApplier.implicationNegation,\n  \"Modus Ponens\": RuleApplier.modusPonens,\n  \"Modus Tollens\": RuleApplier.modusTollens,\n  \"Reductio Ad Absurdum\": RuleApplier.reductioAdAbsurdum\n};\n\n// src/proof-checker/ProofChecker.ts\nvar ProofChecker = class _ProofChecker {\n  /**\n   * Checks the given proof for validity.\n   *\n   * @param {Proof} proof - The proof to be checked.\n   * @returns {boolean} - `true` if the proof is valid, `InferenceError` or `Error` otherwise.\n   */\n  static check(proof) {\n    const mappedProof = _ProofChecker.createMappedProof(proof);\n    let premises = [];\n    let conclusion;\n    Object.keys(mappedProof).forEach((_, idx) => {\n      const item = mappedProof[idx + 1];\n      if (isProofItemInferred(item)) {\n        const [requiredItens, inferenceRule] = item.from;\n        _ProofChecker.validateScope(requiredItens, item, mappedProof);\n        inferenceRulesMap[inferenceRule](item, proof);\n        console.log(\n          \"\\x1B[32m\",\n          `Applied ${inferenceRule} with success at line ${item.id} \\u2714\\uFE0F`\n        );\n      }\n      if (item.type === \"Premise\") {\n        premises.push(item.expression);\n      }\n      if (item.type === \"Conclusion\") {\n        conclusion = parseToFormulaString(item.expression);\n      }\n      premises = premises.map((formula) => {\n        return parseToFormulaString(formula);\n      });\n    });\n    console.log(\"\\x1B[0m\", `\n{ ${premises.join(\", \")} } \\u22A2 ${conclusion}`);\n    return true;\n  }\n  /**\n   * Creates a mapped version of the proof, with the representation of the scopes of each item.\n   * @param {Proof} proof - The proof to be mapped.\n   * @returns {MappedProof} - The mapped proof.\n   */\n  static createMappedProof(proof) {\n    let layerIdx = 0;\n    let blockIdx = 0;\n    Object.keys(proof).forEach((_, idx) => {\n      idx++;\n      const item = proof[idx];\n      if (isHypothesis(item)) {\n        blockIdx++;\n        layerIdx++;\n        proof[idx][\"scopeIdx\"] = [layerIdx, blockIdx];\n      } else if (isEndOfHypothesis(item)) {\n        const itemBlockIdx = proof[item.hypothesisId][\"scopeIdx\"][1];\n        proof[idx][\"scopeIdx\"] = [layerIdx, itemBlockIdx];\n        layerIdx--;\n      } else {\n        proof[idx][\"scopeIdx\"] = layerIdx === 0 ? [0, 0] : [layerIdx, blockIdx];\n        if (layerIdx !== 0 && proof[idx].type === \"Conclusion\")\n          throw new Error(\n            `(Line ${idx}): You cannot put your conclusion inside of a hypothesis.`\n          );\n      }\n    });\n    return proof;\n  }\n  /**\n   * Validates the scope of inferred items.\n   * @param {number[]} requiredItens - An array of required item IDs.\n   * @param {ProofItemInferred} item - The inferred proof item to be validated.\n   * @param {MappedProof} mappedProof - The mapped proof.\n   */\n  static validateScope(requiredItens, item, mappedProof) {\n    requiredItens.forEach((requiredItemId) => {\n      const [actualLayer, actualBlock] = mappedProof[item.id].scopeIdx;\n      const [requiredLayer, requiredBlock] = mappedProof[requiredItemId].scopeIdx;\n      const [, inferenceRule] = item.from;\n      if (actualLayer < requiredLayer && actualBlock != requiredBlock && inferenceRule != \"Conditional Proof\")\n        throw new InferenceException(\n          `Scope Error: cannot access line ${requiredItemId} by the ${item.id} line.`\n        );\n    });\n  }\n};\n\n// src/reducer/Reducer.ts\nvar Reducer = class {\n  /**\n   * Recursively reduces a logical formula to its reduced form based on its operation.\n   * @param x - The logical formula to reduce.\n   * @returns The reduced logical formula.\n   */\n  static reduceFormula(x) {\n    if (typeof x === \"string\")\n      return x;\n    switch (x.operation) {\n      case \"Biconditional\":\n        return this.biconditional(x);\n      case \"Implication\":\n        return this.implication(x);\n      case \"Conjunction\":\n        return this.conjunction(x);\n      case \"Disjunction\":\n        return this.disjunction(x);\n      case \"Negation\":\n        return this.negation(x);\n      default:\n        throw new Error(\"Invalid operation\");\n    }\n  }\n  /**\n   * Reduces a Biconditional to a Conjunction.\n   * @param x - The Biconditional operation to reduce.\n   * @returns The reduced Conjunction formula.\n   */\n  static biconditional(x) {\n    const left = this.reduceFormula(x.left);\n    const right = this.reduceFormula(x.right);\n    const reducedLeft = this.reduceFormula({\n      operation: \"Implication\",\n      left,\n      right\n    });\n    const reducedRight = this.reduceFormula({\n      operation: \"Implication\",\n      left: right,\n      right: left\n    });\n    return {\n      operation: \"Conjunction\",\n      left: reducedLeft,\n      right: reducedRight\n    };\n  }\n  /**\n   * Reduces an Implication to a Disjunction\n   * @param x - The formula to reduce.\n   * @returns The reduced Disjunction formula.\n   */\n  static implication(x) {\n    const left = this.reduceFormula(x.left);\n    const right = this.reduceFormula(x.right);\n    return {\n      operation: \"Disjunction\",\n      left: {\n        operation: \"Negation\",\n        value: left\n      },\n      right\n    };\n  }\n  /**\n   * Reduces both sides of a Conjunction\n   * @param x - The formula to reduce.\n   * @returns The reduced Conjunction formula.\n   */\n  static conjunction(x) {\n    const left = this.reduceFormula(x.left);\n    const right = this.reduceFormula(x.right);\n    return {\n      operation: \"Conjunction\",\n      left,\n      right\n    };\n  }\n  /**\n   * Reduces both sides of a Disjunction\n   * @param x - The formula to reduce.\n   * @returns The reduced Disjunction formula.\n   */\n  static disjunction(x) {\n    const left = this.reduceFormula(x.left);\n    const right = this.reduceFormula(x.right);\n    return {\n      operation: \"Disjunction\",\n      left,\n      right\n    };\n  }\n  /**\n   * Reduces the negated formula\n   * @param x - The formula to reduce.\n   * @returns The reduced Negation formula.\n   */\n  static negation(x) {\n    const value = this.reduceFormula(x.value);\n    return {\n      operation: \"Negation\",\n      value\n    };\n  }\n};\n\n// src/frege/Frege.ts\nvar Frege = class {\n  constructor() {\n    this.builder = Builder;\n    this.reducer = Reducer;\n    this.calculator = Calculator;\n    this.proofChecker = ProofChecker;\n    /**\n     * The `parse` property provides functions to build and parse formulas in propositional logic.\n     * @public\n     */\n    this.parse = {\n      /**\n       * Builds a formula object from a string, which contains a well-formed formula of the propositional logic.\n       * @param formula - The logical formula to build.\n       * @returns The built formula object.\n       * @throws {UnrecognizedTokenException} If the provided formula contains unrecognized tokens.\n       *\n       * @example\n       *\n       * // Input: \"P->Q\"\n       * // Output: { operation: 'Implication', left: 'P', right: 'Q' }\n       * const parsedFormula = frege.parse.toFormulaObject<Implication>(\"P->Q\");\n       * console.log(parsedFormula);\n       */\n      toFormulaObject: (formula) => {\n        const tokens = new Lexer(formula).lex();\n        const parsedFormula = new Parser(tokens).parse();\n        return parsedFormula;\n      },\n      /**\n       * Builds a logical formula string from a formula object using the syntax of propositional logic.\n       * @param formula - The formula object to build the string from.\n       * @returns The built logical formula string.\n       * @throws {InvalidFormulaException} If the provided formula object is invalid or incomplete.\n       *\n       * @example\n       *\n       * // Input: { operation: 'Implication', left: 'P', right: 'Q' }\n       * // Output: \"(P->Q)\"\n       * const implication: Implication = {\n       *    operation: 'Implication',\n       *    left: 'P',\n       *    right: 'Q'\n       * };\n       *\n       * const parsedFormula = frege.parse.toFormulaString(implication);\n       * console.log(parsedFormula); // => \"(P->Q)\"\n       */\n      toFormulaString: (formula) => {\n        return this.builder.buildFormula(formula);\n      }\n    };\n    this.verifyConsequence = {\n      semantic: this.calculator.isSemanticConsequence,\n      syntactic: () => {\n      }\n    };\n    /**\n     * Reduces a formula object or a formula string to its reduced form.\n     * @param formula - The formula object or formula string to reduce.\n     * @returns The reduced formula in its string representation or as a formula object.\n     *\n     * @example\n     * // Input: { operation: 'Implication', left: 'P', right: ' Q' }\n     * // Output: { operation: 'Disjunction' left: { operation: 'Negation', value: 'P'}, right: 'Q' };\n     *\n     * const formulaObject: Implication = {\n     *    operation: 'Implication',\n     *    left: 'P',\n     *    right: 'Q'\n     * };\n     *\n     * const reducedFormula = frege.reduce(formulaObject);\n     * console.log(reducedFormula); // => { operation: 'Disjunction' left: { operation: 'Negation', value: 'P'}, right: 'Q' };\n     *\n     *\n     * // Input: \"P<->Q\"\n     * // Output: '((¬(P) ∨ Q) ∧ (¬(Q) ∨ P))'\n     *\n     * const formulaString = \"P<->Q\";\n     *\n     * const reducedFormula = frege.reduce(formulaString);\n     * console.log(reducedFormula); // => '((¬(P) ∨ Q) ∧ (¬(Q) ∨ P))'\n     */\n    this.reduce = (formula) => {\n      if (typeof formula === \"string\") {\n        let formulaObject = this.parse.toFormulaObject(formula);\n        formulaObject = this.reducer[\"reduceFormula\"](formulaObject);\n        return this.parse.toFormulaString(formulaObject);\n      }\n      let operation = formula.operation.toLocaleLowerCase();\n      const reducedFormula = this.reducer[operation](formula);\n      return reducedFormula;\n    };\n    /**\n     * Evaluates the given logical formula with the provided truth values for variables.\n     *\n     * @param formula - The logical formula to evaluate.\n     * @param values - An object representing truth values for propositional variables.\n     * @returns The result of the evaluation (true or false).\n     *\n     * @example\n     * const result = Calculator.evaluate('P -> Q', { P: true, Q: false });\n     * console.log(result); // Output: false\n     */\n    this.evaluate = this.calculator.evaluate;\n    /**\n     * Generates a truth table for the given formula.\n     *\n     * @param formula - The logical formula to generate a truth table for.\n     * @param stringfiedFormula - An optional string representation of the formula.\n     * @returns The truth table as an array containing headers, truth combinations, and results.\n     *\n     * @example\n     * const output = Calculator.generateTruthTable('P -> Q');\n     * console.log(output);\n     * // Output:\n     * {\n     *    headers: ['P', 'Q', '(P -> Q)'],\n     *    truthCombinations: [\n     *      [false, false], [false, true],\n     *      [true, false], [true, true]\n     *    ],\n     *    truthValues: [true, true, false, true]\n     *  }\n     */\n    this.generateTruthTable = this.calculator.generateTruthTable;\n    /**\n       * Checks the given proof for validity.\n       * \n       * @param {Proof} proof - The proof to be checked.\n       * @returns {boolean} - `true` if the proof is valid, `InferenceError` or `Error` otherwise.\n       * @example\n       * ```\n       * const proof = {\n        // ... (Your proof object)\n        };\n    \n        const isProofValid = ProofChecker.check(proof);\n        console.log(`The proof is valid: ${isProofValid}`);\n       * ```\n       */\n    this.checkProof = this.proofChecker.check;\n    /**\n     * Checks if the given formula is a tautology.\n     *\n     * @param {Formula | string} formula - The formula to check.\n     */\n    this.isTautology = (formula) => {\n      const { truthValues } = this.calculator.generateTruthTable(formula);\n      for (let i = 0; i < truthValues.length; i++) {\n        if (!truthValues[i])\n          return false;\n      }\n      return true;\n    };\n    /**\n     * Checks if the given formula is a contradiction.\n     *\n     * @param {Formula | string} formula - The formula to check.\n     */\n    this.isContradiction = (formula) => {\n      const { truthValues } = this.calculator.generateTruthTable(formula);\n      for (let i = 0; i < truthValues.length; i++) {\n        if (truthValues[i])\n          return false;\n      }\n      return true;\n    };\n    /**\n     * Checks if the given formula is a contingency.\n     *\n     * @param {Formula | string} formula - The formula to check.\n     */\n    this.isContingency = (formula) => {\n      let firstTruthValue;\n      const { truthValues } = this.calculator.generateTruthTable(formula);\n      firstTruthValue = truthValues[0];\n      for (let i = 1; i < truthValues.length; i++) {\n        if (truthValues[i] != firstTruthValue)\n          return true;\n      }\n      return false;\n    };\n  }\n};\n\n// src/index.ts\nvar frege = new Frege();\nexport {\n  Builder,\n  Calculator,\n  Frege,\n  InferenceException,\n  InvalidFormulaException,\n  InvalidProofSequenceException,\n  Lexer,\n  Parser,\n  ProofChecker,\n  Reducer,\n  RuleApplier,\n  RuleSetter,\n  UnrecognizedTokenException,\n  biconditional,\n  buildConjunctionString,\n  conjunction,\n  disjunction,\n  eliminateDoubleNegations,\n  frege,\n  haveEvenNumberOfNegations,\n  implication,\n  inferenceRulesMap,\n  isArrayString,\n  isBiconditional,\n  isBinaryOperationFormula,\n  isConjunction,\n  isContradiction,\n  isDisjunction,\n  isEndOfHypothesis,\n  isHypothesis,\n  isImplication,\n  isMolecularFormula,\n  isNegation,\n  isProofItemInferred,\n  isPropositionalVariable,\n  negation,\n  parseToFormulaObject,\n  parseToFormulaString,\n  printTruthTable\n};\n","import { frege } from 'fregejs';\r\n\r\n\r\ndocument.querySelectorAll(\".logic-button\").forEach((button) => {\r\n  button.addEventListener(\"click\", function () {\r\n    insert(this.textContent);\r\n  });\r\n});\r\ndocument.querySelectorAll(\".button\").forEach((button) => {\r\n  button.addEventListener(\"click\", function () {\r\n      if (this.textContent === \"DEL\") {\r\n          var telinha = document.getElementById(\"resultado\");\r\n          telinha.textContent = telinha.textContent.slice(0, -1); \r\n      } else if (this.textContent === \"AC\") {\r\n          var telinha = document.getElementById(\"resultado\");\r\n          telinha.textContent = \"\";\r\n      }\r\n  });\r\n});\r\n\r\ndocument.addEventListener(\"keydown\", function (event) {\r\n  if (event.key === \"Backspace\") {\r\n    deleteChar();\r\n  } else if (event.key === \"ArrowLeft\") {\r\n    moveCursorLeft();\r\n  } else if (event.key === \"ArrowRight\") {\r\n    moveCursorRight();\r\n  }\r\n  else\r\n    event.preventDefault();\r\n});\r\n\r\nfunction insert(text) {\r\n  var telinha = document.getElementById(\"resultado\");\r\n  telinha.textContent += text;\r\n}\r\n\r\nfunction analiseLexica(formula) {\r\n  const regex = /^[~^v→↔]+$/;\r\n  return regex.test(formula);\r\n}\r\n\r\nfunction analisadorSintatico(formula) {\r\n  try {\r\n    new Function(\"return \" + formula); \r\n    return true; \r\n  } catch (error) {\r\n    return false; \r\n  }\r\n}\r\n\r\n\r\nfunction exibirResultados(formula, lexica, sintatica, tautologia) {\r\n  const resultsDiv = document.getElementById(\"results\");\r\n  resultsDiv.innerHTML = `\r\n    <p>Fórmula: ${formula}</p>\r\n    <p>Análise Léxica: ${lexica ? \"Válida\" : \"Inválida\"}</p>\r\n    <p>Analisador Sintático: ${sintatica ? \"Válida\" : \"Inválida\"}</p>\r\n    <p>Provador de Tautologia: ${\r\n      tautologia ? \"É uma tautologia\" : \"Não é uma tautologia\"\r\n    }</p>\r\n\r\n  `;\r\n}\r\n\r\n\r\ndocument.querySelector(\".button-calc\").addEventListener(\"click\", function() {\r\n  var expressaoLogica = document.getElementById(\"resultado\").textContent;\r\n  var resultadoCalculo = calcularExpressaoLogica(expressaoLogica);\r\n});\r\n\r\nfunction calcularExpressaoLogica(expressao) {\r\n    var expressaoNaoTratada = expressao\r\n    expressao = expressao.replace(/~/g, \"¬\");\r\n\r\n    expressao = expressao.replace(/→/g, \"->\");\r\n    expressao = expressao.replace(/↔/g, \"<->\");\r\n    const truthTable = frege.generateTruthTable(expressao);\r\n    // printTruthTable(truthTable);\r\n    generateHTMLTruthTable(truthTable)\r\n    const lexica = \"\";\r\n    const sintatica = \"\";\r\n    const tautologia = frege.isTautology(expressao);\r\n    exibirResultados(expressaoNaoTratada, lexica, sintatica, tautologia);\r\n}\r\n\r\n\r\n\r\nfunction generateHTMLTruthTable(truthTable) {\r\n  let htmlTable = '<table class=\"tabela-verdade\">';\r\n  \r\n  htmlTable += '<tr>';\r\n  truthTable.headers.forEach(header => {\r\n    htmlTable += `<th>${header}</th>`;\r\n  });\r\n  htmlTable += '</tr>';\r\n  \r\n  for (let i = 0; i < truthTable.truthCombinations.length; i++) {\r\n    htmlTable += '<tr>';\r\n    const combination = truthTable.truthCombinations[i];\r\n    combination.forEach(value => {\r\n      const formattedValue = value ? \"<span style='color:green'>T</span>\" : \"<span style='color:red'>F</span>\";\r\n      htmlTable += `<td class=\"tabela-verdade\">${formattedValue}</td>`;\r\n    });\r\n    const formattedValue = truthTable.truthValues[i] ? \"<span style='color:green'>T</span>\" : \"<span style='color:red'>F</span>\";\r\n    htmlTable += `<td class=\"tabela-verdade\">${formattedValue}</td>`;\r\n    htmlTable += '</tr>';\r\n  }\r\n\r\n  htmlTable += '</table>';\r\n  \r\n  var resultsDiv = document.getElementById(\"tabela\");\r\n  resultsDiv.innerHTML = htmlTable;\r\n}\r\n"]}