{"version":3,"sources":["node_modules/util/support/isBufferBrowser.js","node_modules/util/node_modules/inherits/inherits_browser.js","node_modules/process/browser.js","node_modules/util/util.js","node_modules/fregejs/dist/index.mjs","script.js","node_modules/parcel-bundler/src/builtins/hmr-runtime.js"],"names":["process","module","exports","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","Error","defaultClearTimeout","setTimeout","e","clearTimeout","runTimeout","fun","call","runClearTimeout","marker","queue","draining","currentQueue","queueIndex","cleanUpNextTick","length","concat","drainQueue","timeout","len","run","nextTick","args","Array","arguments","i","push","Item","array","prototype","apply","title","env","argv","version","versions","noop","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","name","binding","cwd","chdir","dir","umask","getOwnPropertyDescriptors","Object","obj","keys","descriptors","getOwnPropertyDescriptor","formatRegExp","format","f","isString","objects","inspect","join","str","String","replace","x","Number","JSON","stringify","_","isNull","isObject","deprecate","fn","msg","noDeprecation","warned","deprecated","throwDeprecation","traceDeprecation","console","trace","error","debugs","debugEnviron","debuglog","set","isUndefined","undefined","toUpperCase","RegExp","test","pid","opts","ctx","seen","stylize","stylizeNoColor","depth","colors","isBoolean","showHidden","_extend","customInspect","stylizeWithColor","formatValue","styles","styleType","style","arrayToHash","hash","forEach","val","idx","value","recurseTimes","isFunction","constructor","ret","primitive","formatPrimitive","visibleKeys","getOwnPropertyNames","isError","indexOf","formatError","isRegExp","toString","isDate","Date","base","braces","isArray","n","toUTCString","output","formatArray","map","key","formatProperty","pop","reduceToSingleString","simple","isNumber","l","hasOwnProperty","match","desc","get","split","line","substr","numLinesEst","reduce","prev","cur","ar","arg","isNullOrUndefined","isSymbol","re","objectToString","d","isPrimitive","isBuffer","require","o","pad","months","timestamp","time","getHours","getMinutes","getSeconds","getDate","getMonth","log","inherits","origin","add","prop","kCustomPromisifiedSymbol","Symbol","promisify","original","TypeError","defineProperty","enumerable","writable","configurable","promiseResolve","promiseReject","promise","Promise","resolve","reject","err","setPrototypeOf","getPrototypeOf","defineProperties","custom","callbackifyOnRejected","reason","cb","newReason","callbackify","callbackified","maybeCb","self","then","rej","_util","InvalidFormulaException","InferenceException","InvalidProofSequenceException","UnrecognizedTokenException","_Builder","biconditional","left","right","conjunction","disjunction","implication","buildRecursively","formula","operation","buildFormula","operations","result","Biconditional","Conjunction","Disjunction","Implication","Builder","isBinaryOperationFormula","isBiconditional","isConjunction","isDisjunction","isImplication","isNegation","eliminateDoubleNegations","innerValue","isContradiction","firstCondition","isDeepStrictEqual","secondCondition","isArrayString","every","item","isHypothesis","type","isEndOfHypothesis","isMolecularFormula","isProofItemInferred","includes","propositionalVariablesList","isPropositionalVariable","buildConjunctionString","premises","conjunctionFormulaArray","premise","conjunctionFormulaString","haveEvenNumberOfNegations","Lexer","tokens","pointer","operator","input","lex","next","isSpecial","c","operatorExists","throwTokenException","isWhiteSpace","isVariable","isExpressionBoundary","token","op","position","SyntaxException","Parser","lastIsVariable","parse","_a","_b","_c","_d","_e","_f","node","isUnary","tmp","slice","shift","parseToFormulaObject","parseToFormulaString","printTruthTable","truthTable","headers","truthCombinations","combination","values","truthValues","formattedCombination","formattedValue","implication2","biconditional2","conjunction2","disjunction2","negation","negation2","Calculator","_Calculator","generateTruthTable","stringfiedFormula","parsedFormula","variables","Set","collectVariables","variableArray","from","generateTruthCombinations","table","variable","index","evaluate","evaluateImplication","evaluateBiconditional","evaluateConjunction","evaluateDisjunction","evaluateNegation","isSemanticConsequence","conclusion","conjunctionOfPremises","allPremisesAreTrue","numVariables","combinations","totalCombinations","binaryString","padStart","bit","RuleSetter","BiconditionalIntroduction","conditional1","conditional2","isDeepStrictEqual2","errorMsg","BiconditionalElimination","implication1","ConditionalProof","hypothesis","conclusionOfHypothesis","conditional","Conditionalization","Commutativity","Contraposition","contraposition","ConjunctionIntroduction","formula1","formula2","ConjunctionElimination","DeMorgan","DisjunctionIntroduction","DisjunctiveSyllogism","negatedDisjunct","ImplicationElimination","ImplicationNegation","DoubleNegation","DoubleNegationIntroduction","ConjunctionOverDisjunctionDistribution","Distribute","DisjunctionOverConjunctionDistribution","ConjunctionAssociativity","Associate","DisjunctionAssociativity","BiconditionalAssociativity","HypotheticalSyllogism","ModusPonens","antecedent","ModusTollens","negatedConsequent","ReductioAdAbsurdum","DistributeRecursively","isK","KFormula","otherFormula","distributedFormula","isT","mainFormula","RuleApplier","_RuleApplier","biconditionalIntroduction","proof","requiredItens","id","throwsIfLengthDoesntMatch","throwsIfIndexDoesntExist","formulas","expression","inferenceResult","throwsIfIsNotEqual","biconditionalElimination","requiredItem","conditionalization","conjunctionIntroduction","firstFormula","secondFormula","conjunctionElimination","inferenceResults","isDeepStrictEqual3","commutativity","deMorgan","disjunctionIntroduction","disjunctiveSyllogism","remainingFormula","doubleNegation","doubleNegationIntroduction","hypotheticalSyllogism","implicationElimination","implicationNegation","modusPonens","modusTollens","consequent","conjunctionOverDisjunctionDistribution","disjunctionOverConjunctionDistribution","conjunctionAssociativity","disjunctionAssociativity","biconditionalAssociativity","conditionalProof","item1","item2","endOfHypothesis","hypothesisId","reductioAdAbsurdum","expectedFormula","actualItem","actualFormula","inferenceMethod","expected","received","rule","inferenceRulesMap","ProofChecker","_ProofChecker","check","mappedProof","createMappedProof","inferenceRule","validateScope","layerIdx","blockIdx","itemBlockIdx","requiredItemId","actualLayer","actualBlock","scopeIdx","requiredLayer","requiredBlock","Reducer","reduceFormula","reducedLeft","reducedRight","Frege","builder","reducer","calculator","proofChecker","toFormulaObject","toFormulaString","verifyConsequence","semantic","syntactic","formulaObject","toLocaleLowerCase","reducedFormula","checkProof","isTautology","isContingency","firstTruthValue","frege","_fregejs","document","querySelectorAll","button","addEventListener","insert","textContent","telinha","getElementById","event","deleteChar","moveCursorLeft","moveCursorRight","preventDefault","text","analiseLexica","regex","analisadorSintatico","Function","exibirResultados","tautologia","resultsDiv","innerHTML","exibirErro","querySelector","expressaoLogica","resultadoCalculo","calcularExpressaoLogica","expressao","expressaoNaoTratada","generateHTMLTruthTable","htmlTable","header","OVERLAY_ID","OldModule","bundle","Module","moduleName","hot","data","hotData","_acceptCallbacks","_disposeCallbacks","accept","dispose","checkedAssets","assetsToAccept","parent","isParcelRequire","WebSocket","hostname","location","protocol","ws","onmessage","handled","assets","asset","isNew","didAccept","hmrAcceptCheck","global","parcelRequire","generated","js","clear","hmrApply","v","hmrAcceptRun","reload","close","onclose","removeErrorOverlay","message","stack","overlay","createErrorOverlay","body","appendChild","remove","createElement","stackTrace","innerText","getParents","modules","parents","k","dep","deps","cached","cache","some"],"mappings":"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","file":"script.75da7f30.js","sourceRoot":"..","sourcesContent":["module.exports = function isBuffer(arg) {\n  return arg && typeof arg === 'object'\n    && typeof arg.copy === 'function'\n    && typeof arg.fill === 'function'\n    && typeof arg.readUInt8 === 'function';\n}","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    var TempCtor = function () {}\n    TempCtor.prototype = superCtor.prototype\n    ctor.prototype = new TempCtor()\n    ctor.prototype.constructor = ctor\n  }\n}\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar getOwnPropertyDescriptors = Object.getOwnPropertyDescriptors ||\n  function getOwnPropertyDescriptors(obj) {\n    var keys = Object.keys(obj);\n    var descriptors = {};\n    for (var i = 0; i < keys.length; i++) {\n      descriptors[keys[i]] = Object.getOwnPropertyDescriptor(obj, keys[i]);\n    }\n    return descriptors;\n  };\n\nvar formatRegExp = /%[sdj%]/g;\nexports.format = function(f) {\n  if (!isString(f)) {\n    var objects = [];\n    for (var i = 0; i < arguments.length; i++) {\n      objects.push(inspect(arguments[i]));\n    }\n    return objects.join(' ');\n  }\n\n  var i = 1;\n  var args = arguments;\n  var len = args.length;\n  var str = String(f).replace(formatRegExp, function(x) {\n    if (x === '%%') return '%';\n    if (i >= len) return x;\n    switch (x) {\n      case '%s': return String(args[i++]);\n      case '%d': return Number(args[i++]);\n      case '%j':\n        try {\n          return JSON.stringify(args[i++]);\n        } catch (_) {\n          return '[Circular]';\n        }\n      default:\n        return x;\n    }\n  });\n  for (var x = args[i]; i < len; x = args[++i]) {\n    if (isNull(x) || !isObject(x)) {\n      str += ' ' + x;\n    } else {\n      str += ' ' + inspect(x);\n    }\n  }\n  return str;\n};\n\n\n// Mark that a method should not be used.\n// Returns a modified function which warns once by default.\n// If --no-deprecation is set, then it is a no-op.\nexports.deprecate = function(fn, msg) {\n  if (typeof process !== 'undefined' && process.noDeprecation === true) {\n    return fn;\n  }\n\n  // Allow for deprecating things in the process of starting up.\n  if (typeof process === 'undefined') {\n    return function() {\n      return exports.deprecate(fn, msg).apply(this, arguments);\n    };\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (process.throwDeprecation) {\n        throw new Error(msg);\n      } else if (process.traceDeprecation) {\n        console.trace(msg);\n      } else {\n        console.error(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n};\n\n\nvar debugs = {};\nvar debugEnviron;\nexports.debuglog = function(set) {\n  if (isUndefined(debugEnviron))\n    debugEnviron = process.env.NODE_DEBUG || '';\n  set = set.toUpperCase();\n  if (!debugs[set]) {\n    if (new RegExp('\\\\b' + set + '\\\\b', 'i').test(debugEnviron)) {\n      var pid = process.pid;\n      debugs[set] = function() {\n        var msg = exports.format.apply(exports, arguments);\n        console.error('%s %d: %s', set, pid, msg);\n      };\n    } else {\n      debugs[set] = function() {};\n    }\n  }\n  return debugs[set];\n};\n\n\n/**\n * Echos the value of a value. Trys to print the value out\n * in the best way possible given the different types.\n *\n * @param {Object} obj The object to print out.\n * @param {Object} opts Optional options object that alters the output.\n */\n/* legacy: obj, showHidden, depth, colors*/\nfunction inspect(obj, opts) {\n  // default options\n  var ctx = {\n    seen: [],\n    stylize: stylizeNoColor\n  };\n  // legacy...\n  if (arguments.length >= 3) ctx.depth = arguments[2];\n  if (arguments.length >= 4) ctx.colors = arguments[3];\n  if (isBoolean(opts)) {\n    // legacy...\n    ctx.showHidden = opts;\n  } else if (opts) {\n    // got an \"options\" object\n    exports._extend(ctx, opts);\n  }\n  // set default options\n  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;\n  if (isUndefined(ctx.depth)) ctx.depth = 2;\n  if (isUndefined(ctx.colors)) ctx.colors = false;\n  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;\n  if (ctx.colors) ctx.stylize = stylizeWithColor;\n  return formatValue(ctx, obj, ctx.depth);\n}\nexports.inspect = inspect;\n\n\n// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics\ninspect.colors = {\n  'bold' : [1, 22],\n  'italic' : [3, 23],\n  'underline' : [4, 24],\n  'inverse' : [7, 27],\n  'white' : [37, 39],\n  'grey' : [90, 39],\n  'black' : [30, 39],\n  'blue' : [34, 39],\n  'cyan' : [36, 39],\n  'green' : [32, 39],\n  'magenta' : [35, 39],\n  'red' : [31, 39],\n  'yellow' : [33, 39]\n};\n\n// Don't use 'blue' not visible on cmd.exe\ninspect.styles = {\n  'special': 'cyan',\n  'number': 'yellow',\n  'boolean': 'yellow',\n  'undefined': 'grey',\n  'null': 'bold',\n  'string': 'green',\n  'date': 'magenta',\n  // \"name\": intentionally not styling\n  'regexp': 'red'\n};\n\n\nfunction stylizeWithColor(str, styleType) {\n  var style = inspect.styles[styleType];\n\n  if (style) {\n    return '\\u001b[' + inspect.colors[style][0] + 'm' + str +\n           '\\u001b[' + inspect.colors[style][1] + 'm';\n  } else {\n    return str;\n  }\n}\n\n\nfunction stylizeNoColor(str, styleType) {\n  return str;\n}\n\n\nfunction arrayToHash(array) {\n  var hash = {};\n\n  array.forEach(function(val, idx) {\n    hash[val] = true;\n  });\n\n  return hash;\n}\n\n\nfunction formatValue(ctx, value, recurseTimes) {\n  // Provide a hook for user-specified inspect functions.\n  // Check that value is an object with an inspect function on it\n  if (ctx.customInspect &&\n      value &&\n      isFunction(value.inspect) &&\n      // Filter out the util module, it's inspect function is special\n      value.inspect !== exports.inspect &&\n      // Also filter out any prototype objects using the circular check.\n      !(value.constructor && value.constructor.prototype === value)) {\n    var ret = value.inspect(recurseTimes, ctx);\n    if (!isString(ret)) {\n      ret = formatValue(ctx, ret, recurseTimes);\n    }\n    return ret;\n  }\n\n  // Primitive types cannot have properties\n  var primitive = formatPrimitive(ctx, value);\n  if (primitive) {\n    return primitive;\n  }\n\n  // Look up the keys of the object.\n  var keys = Object.keys(value);\n  var visibleKeys = arrayToHash(keys);\n\n  if (ctx.showHidden) {\n    keys = Object.getOwnPropertyNames(value);\n  }\n\n  // IE doesn't make error fields non-enumerable\n  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx\n  if (isError(value)\n      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {\n    return formatError(value);\n  }\n\n  // Some type of object without properties can be shortcutted.\n  if (keys.length === 0) {\n    if (isFunction(value)) {\n      var name = value.name ? ': ' + value.name : '';\n      return ctx.stylize('[Function' + name + ']', 'special');\n    }\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    }\n    if (isDate(value)) {\n      return ctx.stylize(Date.prototype.toString.call(value), 'date');\n    }\n    if (isError(value)) {\n      return formatError(value);\n    }\n  }\n\n  var base = '', array = false, braces = ['{', '}'];\n\n  // Make Array say that they are Array\n  if (isArray(value)) {\n    array = true;\n    braces = ['[', ']'];\n  }\n\n  // Make functions say that they are functions\n  if (isFunction(value)) {\n    var n = value.name ? ': ' + value.name : '';\n    base = ' [Function' + n + ']';\n  }\n\n  // Make RegExps say that they are RegExps\n  if (isRegExp(value)) {\n    base = ' ' + RegExp.prototype.toString.call(value);\n  }\n\n  // Make dates with properties first say the date\n  if (isDate(value)) {\n    base = ' ' + Date.prototype.toUTCString.call(value);\n  }\n\n  // Make error with message first say the error\n  if (isError(value)) {\n    base = ' ' + formatError(value);\n  }\n\n  if (keys.length === 0 && (!array || value.length == 0)) {\n    return braces[0] + base + braces[1];\n  }\n\n  if (recurseTimes < 0) {\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    } else {\n      return ctx.stylize('[Object]', 'special');\n    }\n  }\n\n  ctx.seen.push(value);\n\n  var output;\n  if (array) {\n    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\n  } else {\n    output = keys.map(function(key) {\n      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\n    });\n  }\n\n  ctx.seen.pop();\n\n  return reduceToSingleString(output, base, braces);\n}\n\n\nfunction formatPrimitive(ctx, value) {\n  if (isUndefined(value))\n    return ctx.stylize('undefined', 'undefined');\n  if (isString(value)) {\n    var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '')\n                                             .replace(/'/g, \"\\\\'\")\n                                             .replace(/\\\\\"/g, '\"') + '\\'';\n    return ctx.stylize(simple, 'string');\n  }\n  if (isNumber(value))\n    return ctx.stylize('' + value, 'number');\n  if (isBoolean(value))\n    return ctx.stylize('' + value, 'boolean');\n  // For some reason typeof null is \"object\", so special case here.\n  if (isNull(value))\n    return ctx.stylize('null', 'null');\n}\n\n\nfunction formatError(value) {\n  return '[' + Error.prototype.toString.call(value) + ']';\n}\n\n\nfunction formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n  var output = [];\n  for (var i = 0, l = value.length; i < l; ++i) {\n    if (hasOwnProperty(value, String(i))) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          String(i), true));\n    } else {\n      output.push('');\n    }\n  }\n  keys.forEach(function(key) {\n    if (!key.match(/^\\d+$/)) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          key, true));\n    }\n  });\n  return output;\n}\n\n\nfunction formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\n  var name, str, desc;\n  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };\n  if (desc.get) {\n    if (desc.set) {\n      str = ctx.stylize('[Getter/Setter]', 'special');\n    } else {\n      str = ctx.stylize('[Getter]', 'special');\n    }\n  } else {\n    if (desc.set) {\n      str = ctx.stylize('[Setter]', 'special');\n    }\n  }\n  if (!hasOwnProperty(visibleKeys, key)) {\n    name = '[' + key + ']';\n  }\n  if (!str) {\n    if (ctx.seen.indexOf(desc.value) < 0) {\n      if (isNull(recurseTimes)) {\n        str = formatValue(ctx, desc.value, null);\n      } else {\n        str = formatValue(ctx, desc.value, recurseTimes - 1);\n      }\n      if (str.indexOf('\\n') > -1) {\n        if (array) {\n          str = str.split('\\n').map(function(line) {\n            return '  ' + line;\n          }).join('\\n').substr(2);\n        } else {\n          str = '\\n' + str.split('\\n').map(function(line) {\n            return '   ' + line;\n          }).join('\\n');\n        }\n      }\n    } else {\n      str = ctx.stylize('[Circular]', 'special');\n    }\n  }\n  if (isUndefined(name)) {\n    if (array && key.match(/^\\d+$/)) {\n      return str;\n    }\n    name = JSON.stringify('' + key);\n    if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n      name = name.substr(1, name.length - 2);\n      name = ctx.stylize(name, 'name');\n    } else {\n      name = name.replace(/'/g, \"\\\\'\")\n                 .replace(/\\\\\"/g, '\"')\n                 .replace(/(^\"|\"$)/g, \"'\");\n      name = ctx.stylize(name, 'string');\n    }\n  }\n\n  return name + ': ' + str;\n}\n\n\nfunction reduceToSingleString(output, base, braces) {\n  var numLinesEst = 0;\n  var length = output.reduce(function(prev, cur) {\n    numLinesEst++;\n    if (cur.indexOf('\\n') >= 0) numLinesEst++;\n    return prev + cur.replace(/\\u001b\\[\\d\\d?m/g, '').length + 1;\n  }, 0);\n\n  if (length > 60) {\n    return braces[0] +\n           (base === '' ? '' : base + '\\n ') +\n           ' ' +\n           output.join(',\\n  ') +\n           ' ' +\n           braces[1];\n  }\n\n  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\n}\n\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\nfunction isArray(ar) {\n  return Array.isArray(ar);\n}\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return isObject(re) && objectToString(re) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return isObject(d) && objectToString(d) === '[object Date]';\n}\nexports.isDate = isDate;\n\nfunction isError(e) {\n  return isObject(e) &&\n      (objectToString(e) === '[object Error]' || e instanceof Error);\n}\nexports.isError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\nexports.isPrimitive = isPrimitive;\n\nexports.isBuffer = require('./support/isBuffer');\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n\n\nfunction pad(n) {\n  return n < 10 ? '0' + n.toString(10) : n.toString(10);\n}\n\n\nvar months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',\n              'Oct', 'Nov', 'Dec'];\n\n// 26 Feb 16:19:34\nfunction timestamp() {\n  var d = new Date();\n  var time = [pad(d.getHours()),\n              pad(d.getMinutes()),\n              pad(d.getSeconds())].join(':');\n  return [d.getDate(), months[d.getMonth()], time].join(' ');\n}\n\n\n// log is just a thin wrapper to console.log that prepends a timestamp\nexports.log = function() {\n  console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));\n};\n\n\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * The Function.prototype.inherits from lang.js rewritten as a standalone\n * function (not on Function.prototype). NOTE: If this file is to be loaded\n * during bootstrapping this function needs to be rewritten using some native\n * functions as prototype setup using normal JavaScript does not work as\n * expected during bootstrapping (see mirror.js in r114903).\n *\n * @param {function} ctor Constructor function which needs to inherit the\n *     prototype.\n * @param {function} superCtor Constructor function to inherit prototype from.\n */\nexports.inherits = require('inherits');\n\nexports._extend = function(origin, add) {\n  // Don't do anything if add isn't an object\n  if (!add || !isObject(add)) return origin;\n\n  var keys = Object.keys(add);\n  var i = keys.length;\n  while (i--) {\n    origin[keys[i]] = add[keys[i]];\n  }\n  return origin;\n};\n\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nvar kCustomPromisifiedSymbol = typeof Symbol !== 'undefined' ? Symbol('util.promisify.custom') : undefined;\n\nexports.promisify = function promisify(original) {\n  if (typeof original !== 'function')\n    throw new TypeError('The \"original\" argument must be of type Function');\n\n  if (kCustomPromisifiedSymbol && original[kCustomPromisifiedSymbol]) {\n    var fn = original[kCustomPromisifiedSymbol];\n    if (typeof fn !== 'function') {\n      throw new TypeError('The \"util.promisify.custom\" argument must be of type Function');\n    }\n    Object.defineProperty(fn, kCustomPromisifiedSymbol, {\n      value: fn, enumerable: false, writable: false, configurable: true\n    });\n    return fn;\n  }\n\n  function fn() {\n    var promiseResolve, promiseReject;\n    var promise = new Promise(function (resolve, reject) {\n      promiseResolve = resolve;\n      promiseReject = reject;\n    });\n\n    var args = [];\n    for (var i = 0; i < arguments.length; i++) {\n      args.push(arguments[i]);\n    }\n    args.push(function (err, value) {\n      if (err) {\n        promiseReject(err);\n      } else {\n        promiseResolve(value);\n      }\n    });\n\n    try {\n      original.apply(this, args);\n    } catch (err) {\n      promiseReject(err);\n    }\n\n    return promise;\n  }\n\n  Object.setPrototypeOf(fn, Object.getPrototypeOf(original));\n\n  if (kCustomPromisifiedSymbol) Object.defineProperty(fn, kCustomPromisifiedSymbol, {\n    value: fn, enumerable: false, writable: false, configurable: true\n  });\n  return Object.defineProperties(\n    fn,\n    getOwnPropertyDescriptors(original)\n  );\n}\n\nexports.promisify.custom = kCustomPromisifiedSymbol\n\nfunction callbackifyOnRejected(reason, cb) {\n  // `!reason` guard inspired by bluebird (Ref: https://goo.gl/t5IS6M).\n  // Because `null` is a special error value in callbacks which means \"no error\n  // occurred\", we error-wrap so the callback consumer can distinguish between\n  // \"the promise rejected with null\" or \"the promise fulfilled with undefined\".\n  if (!reason) {\n    var newReason = new Error('Promise was rejected with a falsy value');\n    newReason.reason = reason;\n    reason = newReason;\n  }\n  return cb(reason);\n}\n\nfunction callbackify(original) {\n  if (typeof original !== 'function') {\n    throw new TypeError('The \"original\" argument must be of type Function');\n  }\n\n  // We DO NOT return the promise as it gives the user a false sense that\n  // the promise is actually somehow related to the callback's execution\n  // and that the callback throwing will reject the promise.\n  function callbackified() {\n    var args = [];\n    for (var i = 0; i < arguments.length; i++) {\n      args.push(arguments[i]);\n    }\n\n    var maybeCb = args.pop();\n    if (typeof maybeCb !== 'function') {\n      throw new TypeError('The last argument must be of type Function');\n    }\n    var self = this;\n    var cb = function() {\n      return maybeCb.apply(self, arguments);\n    };\n    // In true node style we process the callback on `nextTick` with all the\n    // implications (stack, `uncaughtException`, `async_hooks`)\n    original.apply(this, args)\n      .then(function(ret) { process.nextTick(cb, null, ret) },\n            function(rej) { process.nextTick(callbackifyOnRejected, rej, cb) });\n  }\n\n  Object.setPrototypeOf(callbackified, Object.getPrototypeOf(original));\n  Object.defineProperties(callbackified,\n                          getOwnPropertyDescriptors(original));\n  return callbackified;\n}\nexports.callbackify = callbackify;\n","// src/exceptions/invalid-formula.exception.ts\nvar InvalidFormulaException = class extends Error {\n};\n\n// src/exceptions/invalid-inference.exception.ts\nvar InferenceException = class extends Error {\n};\n\n// src/exceptions/invalid-proof-sequence.exception.ts\nvar InvalidProofSequenceException = class extends Error {\n};\n\n// src/exceptions/unrecognized-token.exception.ts\nvar UnrecognizedTokenException = class extends Error {\n};\n\n// src/builder/Builder.ts\nvar _Builder = class _Builder {\n  static biconditional(left, right) {\n    return `(${left} <-> ${right})`;\n  }\n  static conjunction(left, right) {\n    return `(${left} \\u2227 ${right})`;\n  }\n  static disjunction(left, right) {\n    return `(${left} \\u2228 ${right})`;\n  }\n  static implication(left, right) {\n    return `(${left} -> ${right})`;\n  }\n  static buildRecursively(formula) {\n    if (typeof formula === \"string\")\n      return formula;\n    if (\"operation\" in formula && formula.operation === \"Negation\")\n      return `\\xAC(${this.buildFormula(formula.value)})`;\n    if (!(\"operation\" in formula))\n      throw new InvalidFormulaException(\"Invalid Formula.\");\n    const left = this.buildFormula(formula.left);\n    const right = this.buildFormula(formula.right);\n    const operation = formula.operation;\n    return this.operations[operation](left, right);\n  }\n  /**\n   * Builds a formula with the syntax of logic.\n   * @param formula - The logical formula to build.\n   * @returns The builded logical formula.\n   * @throws {InvalidFormulaException}\n   */\n  static buildFormula(formula) {\n    const result = this.buildRecursively(formula);\n    return result;\n  }\n};\n_Builder.operations = {\n  Biconditional: _Builder.biconditional,\n  Conjunction: _Builder.conjunction,\n  Disjunction: _Builder.disjunction,\n  Implication: _Builder.implication\n};\nvar Builder = _Builder;\n\n// src/utils/isBinaryOperation.ts\nfunction isBinaryOperationFormula(formula) {\n  return !!(formula.operation && formula.left && formula.right);\n}\n\n// src/utils/isBiconditional.ts\nfunction isBiconditional(formula) {\n  return formula.operation === \"Biconditional\" && isBinaryOperationFormula(formula);\n}\n\n// src/utils/isConjunction.ts\nfunction isConjunction(formula) {\n  return formula.operation === \"Conjunction\" && isBinaryOperationFormula(formula);\n}\n\n// src/utils/isDisjunction.ts\nfunction isDisjunction(formula) {\n  return formula.operation === \"Disjunction\" && isBinaryOperationFormula(formula);\n}\n\n// src/utils/isImplication.ts\nfunction isImplication(formula) {\n  return formula.operation === \"Implication\" && isBinaryOperationFormula(formula);\n}\n\n// src/utils/isContradiction.ts\nimport { isDeepStrictEqual } from \"util\";\n\n// src/utils/isNegation.ts\nfunction isNegation(formula) {\n  return formula.operation === \"Negation\" && !!formula.value;\n}\n\n// src/utils/eliminateDoubleNegation.ts\nfunction eliminateDoubleNegations(formula) {\n  if (isNegation(formula)) {\n    const innerValue = formula.value;\n    if (isNegation(innerValue)) {\n      return eliminateDoubleNegations(innerValue.value);\n    }\n    return {\n      operation: \"Negation\",\n      value: eliminateDoubleNegations(innerValue)\n    };\n  }\n  if (isBinaryOperationFormula(formula)) {\n    return {\n      operation: formula.operation,\n      left: eliminateDoubleNegations(formula.left),\n      right: eliminateDoubleNegations(formula.right)\n    };\n  }\n  return formula;\n}\n\n// src/utils/isContradiction.ts\nfunction isContradiction(formula) {\n  formula = eliminateDoubleNegations(formula);\n  const firstCondition = isDeepStrictEqual(formula, {\n    operation: \"Conjunction\",\n    left: formula.left,\n    right: { operation: \"Negation\", value: formula.left }\n  });\n  const secondCondition = isDeepStrictEqual(formula, {\n    operation: \"Conjunction\",\n    left: { operation: \"Negation\", value: formula.right },\n    right: formula.right\n  });\n  return firstCondition || secondCondition;\n}\n\n// src/utils/isArrayString.ts\nfunction isArrayString(array) {\n  return array.every((item) => typeof item === \"string\");\n}\n\n// src/utils/isHypothesis.ts\nfunction isHypothesis(x) {\n  return x.type === \"Hypothesis\";\n}\n\n// src/utils/isEndOfHypothesis.ts\nfunction isEndOfHypothesis(x) {\n  return x.type === \"End of Hypothesis\";\n}\n\n// src/utils/isMolecularFormula.ts\nfunction isMolecularFormula(formula) {\n  if (typeof formula === \"string\")\n    return false;\n  if (formula.operation === \"Negation\")\n    return false;\n  return true;\n}\n\n// src/utils/isProofItemInferred.ts\nfunction isProofItemInferred(x) {\n  if (!(x == null ? void 0 : x.type))\n    return false;\n  return [\"Knowledge\", \"End of Hypothesis\", \"Conclusion\"].includes(x.type);\n}\n\n// src/utils/isPropositionalVariable.ts\nvar propositionalVariablesList = [\n  \"A\",\n  \"B\",\n  \"C\",\n  \"D\",\n  \"E\",\n  \"F\",\n  \"G\",\n  \"H\",\n  \"I\",\n  \"J\",\n  \"K\",\n  \"L\",\n  \"M\",\n  \"N\",\n  \"O\",\n  \"P\",\n  \"Q\",\n  \"R\",\n  \"S\",\n  \"T\",\n  \"U\",\n  \"V\",\n  \"W\",\n  \"X\",\n  \"Y\",\n  \"Z\"\n];\nfunction isPropositionalVariable(formula) {\n  return typeof formula === \"string\" && propositionalVariablesList.includes(formula);\n}\n\n// src/utils/buildConjunctionString.ts\nfunction buildConjunctionString(premises) {\n  const conjunctionFormulaArray = premises.map(\n    (premise) => `(${premise})`\n  );\n  const conjunctionFormulaString = conjunctionFormulaArray.join(\"\\u2227\");\n  return conjunctionFormulaString;\n}\n\n// src/utils/haveEvenNumberOfNegations.ts\nfunction haveEvenNumberOfNegations(formula) {\n  if (!isNegation(formula))\n    return true;\n  formula = eliminateDoubleNegations(formula);\n  return !isNegation(formula);\n}\n\n// src/lexer/Lexer.ts\nvar Lexer = class {\n  /**\n   * Creates a new Lexer instance.\n   * @param formula The propositional logic formula to tokenize.\n   */\n  constructor(formula) {\n    this.tokens = [];\n    this.pointer = 0;\n    this.operator = \"\";\n    this.input = formula;\n  }\n  /**\n   * Tokenizes the propositional logic formula.\n   * @returns An array of tokens representing the formula.\n   */\n  lex() {\n    while (this.next()) {\n      if (this.isSpecial(this.c)) {\n        this.operator += this.c;\n        if (this.operatorExists(this.operator)) {\n          this.push({\n            type: \"operator\",\n            value: this.operator\n          });\n          this.operator = \"\";\n        }\n      } else {\n        if (this.operator)\n          this.throwTokenException(\n            this.operator,\n            this.pointer - this.operator.length - 1\n          );\n        else if (this.isWhiteSpace(this.c))\n          continue;\n        else if (this.isVariable(this.c))\n          this.push({ type: \"variable\", value: this.c });\n        else if (this.isExpressionBoundary(this.c))\n          this.push({ type: \"boundary\", value: this.c });\n        else\n          this.throwTokenException(this.c, this.pointer - 2);\n      }\n    }\n    return this.tokens;\n  }\n  next() {\n    return this.c = this.input[this.pointer++];\n  }\n  push(token) {\n    this.tokens.push({\n      type: token.type,\n      value: token.value\n    });\n  }\n  isWhiteSpace(c) {\n    return /\\s/.test(c);\n  }\n  isVariable(c) {\n    return /[A-Z]/.test(c);\n  }\n  isSpecial(c) {\n    return /[¬∧∨&!|\\-><->]/.test(c);\n  }\n  isExpressionBoundary(c) {\n    return /[\\(\\)]/.test(c);\n  }\n  operatorExists(op) {\n    return [\"\\xAC\", \"!\", \"\\u2227\", \"&\", \"\\u2228\", \"|\", \"->\", \"<->\"].indexOf(op) !== -1;\n  }\n  throwTokenException(token, position) {\n    throw new UnrecognizedTokenException(\n      `Unrecognized token \"${token}\" on position ${position}`\n    );\n  }\n};\n\n// src/exceptions/syntax-error.exception.ts\nvar SyntaxException = class extends Error {\n};\n\n// src/parser/Parser.ts\nvar Parser = class {\n  /**\n   * Constructor of the Parser class.\n   * @param tokens Array of tokens to be analyzed.\n   */\n  constructor(tokens) {\n    this.lastIsVariable = false;\n    this.tokens = JSON.parse(JSON.stringify(tokens));\n  }\n  /**\n   * Performs the analysis of the tokens and returns the logical formula tree.\n   * @returns The logical formula resulting from the analysis of the tokens.\n   */\n  parse() {\n    return this.process();\n  }\n  process(operation) {\n    var _a, _b, _c, _d, _e, _f;\n    operation = operation || null;\n    const args = [];\n    while (this.next()) {\n      if (this.lastIsVariable && ((_a = this.token) == null ? void 0 : _a.type) === \"variable\")\n        throw new SyntaxException(\n          `Token \"${this.token.value}\": Expected one variable, but received more than 1.`\n        );\n      if (this.token === void 0)\n        break;\n      if (((_b = this.token) == null ? void 0 : _b.type) === \"boundary\") {\n        if (this.token.value === \")\")\n          return this.node(operation, args);\n        args.push(this.process());\n      }\n      if (((_c = this.token) == null ? void 0 : _c.type) === \"variable\") {\n        args.push(this.token.value);\n        if (this.isUnary(operation))\n          return this.node(operation, args);\n      }\n      if (((_d = this.token) == null ? void 0 : _d.type) === \"operator\") {\n        if (this.isUnary(this.token.value)) {\n          args.push(this.process(this.token.value));\n          continue;\n        }\n        if (operation) {\n          const tmp = args.slice(0);\n          args.length = 0;\n          args.push(this.node(operation, tmp));\n        }\n        operation = this.token.value;\n      }\n      this.lastIsVariable = ((_e = this.token) == null ? void 0 : _e.type) === \"variable\" || this.lastIsVariable && ((_f = this.token) == null ? void 0 : _f.type) === \"boundary\";\n    }\n    return this.node(operation, args);\n  }\n  next() {\n    return this.token = this.tokens.shift();\n  }\n  node(operator, args) {\n    if ([\"->\", \"<->\", \"&\", \"|\", \"\\u2227\", \"\\u2228\"].includes(operator)) {\n      if (args.length !== 2)\n        throw new SyntaxException(`\n        Token \"${operator}\": expected 2 variables, but received 1.\n      `);\n    }\n    if (operator === \"\\xAC\" || operator === \"!\")\n      return { operation: \"Negation\", value: args[0] };\n    if (operator === \"\\u2228\" || operator === \"|\")\n      return {\n        operation: \"Disjunction\",\n        left: args[0],\n        right: args[1]\n      };\n    if (operator === \"\\u2227\" || operator === \"&\")\n      return {\n        operation: \"Conjunction\",\n        left: args[0],\n        right: args[1]\n      };\n    if (operator === \"->\")\n      return {\n        operation: \"Implication\",\n        left: args[0],\n        right: args[1]\n      };\n    if (operator === \"<->\")\n      return {\n        operation: \"Biconditional\",\n        left: args[0],\n        right: args[1]\n      };\n    return args[0];\n  }\n  isUnary(operator) {\n    return operator === \"\\xAC\" || operator === \"!\";\n  }\n};\n\n// src/utils/parse.ts\nfunction parseToFormulaObject(formula) {\n  const tokens = new Lexer(formula).lex();\n  return new Parser(tokens).parse();\n}\nfunction parseToFormulaString(formula) {\n  return Builder.buildFormula(formula);\n}\n\n// src/utils/printTruthTable.ts\nfunction printTruthTable(truthTable) {\n  console.log(`\\x1B[36m${truthTable.headers.join(\"\t\")}\\x1B[0m`);\n  for (let i = 0; i < truthTable.truthCombinations.length; i++) {\n    const combination = truthTable.truthCombinations[i];\n    const values = truthTable.truthValues[i];\n    const formattedCombination = combination.map((value) => value ? \"\\x1B[32mT\\x1B[0m\" : \"\\x1B[31mF\\x1B[0m\").join(\"\t\");\n    const formattedValue = values ? \"\\x1B[32mT\\x1B[0m\" : \"\\x1B[31mF\\x1B[0m\";\n    console.log(`${formattedCombination}\t${formattedValue}`);\n  }\n}\n\n// src/utils/objectBuilder.ts\nfunction implication(left, right) {\n  let implication2 = { operation: \"Implication\", left, right };\n  return implication2;\n}\nfunction biconditional(left, right) {\n  let biconditional2 = { operation: \"Biconditional\", left, right };\n  return biconditional2;\n}\nfunction conjunction(left, right) {\n  let conjunction2 = { operation: \"Conjunction\", left, right };\n  return conjunction2;\n}\nfunction disjunction(left, right) {\n  let disjunction2 = { operation: \"Disjunction\", left, right };\n  return disjunction2;\n}\nfunction negation(value) {\n  let negation2 = { operation: \"Negation\", value };\n  return negation2;\n}\n\n// src/calculator/Calculator.ts\nvar Calculator = class _Calculator {\n  /**\n   * Generates a truth table for the given formula.\n   *\n   * @param formula - The logical formula to generate a truth table for.\n   * @param stringfiedFormula - An optional string representation of the formula.\n   * @returns The truth table as an array containing headers, truth combinations, and results.\n   *\n   * @example\n   * const output = Calculator.generateTruthTable('P -> Q');\n   * console.log(output);\n   * // Output:\n   * // {\n   * //   headers: ['P', 'Q', '(P -> Q)'],\n   * //   truthCombinations: [\n   * //     [false, false], [false, true],\n   * //     [true, false], [true, true]\n   * //   ],\n   * //   truthValues: [true, true, false, true]\n   * // }\n   */\n  static generateTruthTable(formula, stringfiedFormula) {\n    if (typeof formula === \"string\" && !isPropositionalVariable(formula)) {\n      const parsedFormula = parseToFormulaObject(formula);\n      return _Calculator.generateTruthTable(parsedFormula, formula);\n    }\n    const variables = /* @__PURE__ */ new Set();\n    _Calculator.collectVariables(formula, variables);\n    const variableArray = Array.from(variables);\n    const truthCombinations = _Calculator.generateTruthCombinations(\n      variableArray.length\n    );\n    const table = {\n      headers: [],\n      truthCombinations: [],\n      truthValues: []\n    };\n    variableArray.forEach((variable) => {\n      table.headers.push(variable);\n    });\n    stringfiedFormula = stringfiedFormula || Builder.buildFormula(formula);\n    table.headers.push(stringfiedFormula);\n    truthCombinations.forEach((combination) => {\n      const values = {};\n      variableArray.forEach((variable, index) => {\n        values[variable] = !!combination[index];\n      });\n      table.truthCombinations.push(combination);\n      const result = _Calculator.evaluate(formula, values);\n      table.truthValues.push(result);\n    });\n    return table;\n  }\n  /**\n   * Evaluates the given logical formula with the provided truth values for variables.\n   *\n   * @param formula - The logical formula to evaluate.\n   * @param values - An object representing truth values for propositional variables.\n   * @returns The result of the evaluation (true or false).\n   *\n   * @example\n   * const result = Calculator.evaluate('P -> Q', { P: true, Q: false });\n   * console.log(result); // Output: false\n   */\n  static evaluate(formula, values) {\n    if (typeof formula === \"string\" && !isPropositionalVariable(formula)) {\n      const parsedFormula = parseToFormulaObject(formula);\n      return _Calculator.evaluate(parsedFormula, values);\n    }\n    if (typeof formula === \"string\")\n      return values[`${formula}`];\n    if (formula.operation === \"Implication\") {\n      return _Calculator.evaluateImplication(formula, values);\n    }\n    if (formula.operation === \"Biconditional\") {\n      return _Calculator.evaluateBiconditional(formula, values);\n    }\n    if (formula.operation === \"Conjunction\") {\n      return _Calculator.evaluateConjunction(formula, values);\n    }\n    if (formula.operation === \"Disjunction\") {\n      return _Calculator.evaluateDisjunction(formula, values);\n    }\n    if (formula.operation === \"Negation\") {\n      return _Calculator.evaluateNegation(formula, values);\n    }\n    throw new Error(\"Invalid formula operation\");\n  }\n  /**\n   * Checks if a given formula is a semantic consequence of the given premises.\n   * A semantic consequence holds if, in every possible truth assignment to the propositional variables,\n   * when all premises are true, the conclusion is also true.\n   *\n   * @param premises - An array of logical formulas or strings representing the premises.\n   * @param conclusion - The conclusion formula to check as a semantic consequence.\n   * @returns True if the conclusion is a semantic consequence of the premises, false otherwise.\n   *\n   * @example\n   * const output = Calculator.isSemanticConsequence(['P->Q', 'P'], 'Q');\n   * console.log(output); // Output: true\n   */\n  static isSemanticConsequence(premises, conclusion) {\n    const variables = /* @__PURE__ */ new Set();\n    let conjunctionOfPremises;\n    if (typeof conclusion === \"string\" && !isPropositionalVariable(conclusion))\n      conclusion = parseToFormulaObject(conclusion);\n    if (premises.length === 1) {\n      conjunctionOfPremises = typeof premises[0] === \"object\" ? premises[0] : parseToFormulaObject(premises[0]);\n    } else {\n      if (!isArrayString(premises)) {\n        premises = premises.map((premise) => parseToFormulaString(premise));\n      }\n      let conjunctionFormulaString = buildConjunctionString(premises);\n      conjunctionOfPremises = parseToFormulaObject(conjunctionFormulaString);\n    }\n    _Calculator.collectVariables(conjunctionOfPremises, variables);\n    const variableArray = Array.from(variables);\n    const truthCombinations = _Calculator.generateTruthCombinations(variableArray.length);\n    for (const combination of truthCombinations) {\n      const values = {};\n      variableArray.forEach((variable, index) => {\n        values[variable] = !!combination[index];\n      });\n      const allPremisesAreTrue = _Calculator.evaluate(conjunctionOfPremises, values);\n      if (allPremisesAreTrue && !_Calculator.evaluate(conclusion, values))\n        return false;\n    }\n    return true;\n  }\n  static evaluateImplication(formula, values) {\n    const left = _Calculator.evaluate(formula.left, values);\n    const right = _Calculator.evaluate(formula.right, values);\n    return !left || right;\n  }\n  static evaluateBiconditional(formula, values) {\n    const left = _Calculator.evaluate(formula.left, values);\n    const right = _Calculator.evaluate(formula.right, values);\n    return left && right || !left && !right;\n  }\n  static evaluateConjunction(formula, values) {\n    const left = _Calculator.evaluate(formula.left, values);\n    const right = _Calculator.evaluate(formula.right, values);\n    return left && right;\n  }\n  static evaluateDisjunction(formula, values) {\n    const left = _Calculator.evaluate(formula.left, values);\n    const right = _Calculator.evaluate(formula.right, values);\n    return left || right;\n  }\n  static evaluateNegation(formula, values) {\n    const value = _Calculator.evaluate(formula.value, values);\n    return !value;\n  }\n  static generateTruthCombinations(numVariables) {\n    const combinations = [];\n    const totalCombinations = 2 ** numVariables;\n    for (let i = 0; i < totalCombinations; i++) {\n      const binaryString = i.toString(2).padStart(numVariables, \"0\");\n      const combination = binaryString.split(\"\").map((bit) => bit === \"1\");\n      combinations.push(combination);\n    }\n    return combinations;\n  }\n  static collectVariables(formula, variables) {\n    if (isPropositionalVariable(formula)) {\n      variables.add(formula);\n    } else if (isNegation(formula)) {\n      _Calculator.collectVariables(formula.value, variables);\n    } else {\n      _Calculator.collectVariables(formula.left, variables);\n      _Calculator.collectVariables(formula.right, variables);\n    }\n  }\n};\n\n// src/rulers/RuleApplier.ts\nimport { isDeepStrictEqual as isDeepStrictEqual3 } from \"util\";\n\n// src/rulers/RuleSetter.ts\nimport { isDeepStrictEqual as isDeepStrictEqual2 } from \"util\";\nvar RuleSetter = class {\n  static BiconditionalIntroduction(conditional1, conditional2) {\n    if (isDeepStrictEqual2(conditional1.left, conditional2.right) && isDeepStrictEqual2(conditional1.right, conditional2.left))\n      return {\n        operation: \"Biconditional\",\n        left: conditional1.left,\n        right: conditional1.right\n      };\n    const errorMsg = `Biconditional Introduction: cannot apply in ${parseToFormulaString(\n      conditional1\n    )} and ${parseToFormulaString(conditional2)}`;\n    throw new InferenceException(errorMsg);\n  }\n  static BiconditionalElimination(biconditional2) {\n    const implication1 = {\n      operation: \"Implication\",\n      left: biconditional2.left,\n      right: biconditional2.right\n    };\n    const implication2 = {\n      operation: \"Implication\",\n      left: biconditional2.right,\n      right: biconditional2.left\n    };\n    return {\n      operation: \"Conjunction\",\n      left: implication1,\n      right: implication2\n    };\n  }\n  static ConditionalProof(hypothesis, conclusionOfHypothesis) {\n    const conditional = {\n      operation: \"Implication\",\n      left: hypothesis,\n      right: conclusionOfHypothesis\n    };\n    return conditional;\n  }\n  static Conditionalization(formula, conditional) {\n    if (isDeepStrictEqual2(formula, conditional.right))\n      return conditional;\n    throw new InferenceException(\n      `Conditionalization: cannot apply in ${parseToFormulaString(\n        conditional\n      )} with ${parseToFormulaString(formula)}`\n    );\n  }\n  static Commutativity(formula) {\n    const right = formula.right;\n    formula.right = formula.left;\n    formula.left = right;\n    return formula;\n  }\n  static Contraposition(formula) {\n    const contraposition = {\n      operation: \"Implication\",\n      left: { operation: \"Negation\", value: formula.right },\n      right: { operation: \"Negation\", value: formula.left }\n    };\n    return eliminateDoubleNegations(contraposition);\n  }\n  static ConjunctionIntroduction(formula1, formula2) {\n    return {\n      operation: \"Conjunction\",\n      left: formula1,\n      right: formula2\n    };\n  }\n  static ConjunctionElimination(conjunction2) {\n    return [conjunction2.left, conjunction2.right];\n  }\n  static DeMorgan(formula) {\n    if (isNegation(formula)) {\n      if (isDisjunction(formula.value)) {\n        return {\n          operation: \"Conjunction\",\n          left: { operation: \"Negation\", value: formula.value.left },\n          right: { operation: \"Negation\", value: formula.value.right }\n        };\n      }\n      if (isConjunction(formula.value)) {\n        return {\n          operation: \"Disjunction\",\n          left: { operation: \"Negation\", value: formula.value.left },\n          right: { operation: \"Negation\", value: formula.value.right }\n        };\n      }\n    }\n    if (isDisjunction(formula)) {\n      if (!(isNegation(formula.left) && isNegation(formula.right)))\n        throw new InferenceException(\n          `De Morgan: cannot apply in ${parseToFormulaString(formula)}`\n        );\n      return {\n        operation: \"Negation\",\n        value: {\n          operation: \"Conjunction\",\n          left: formula.left.value,\n          right: formula.right.value\n        }\n      };\n    }\n    if (isConjunction(formula)) {\n      if (!(isNegation(formula.left) && isNegation(formula.right)))\n        throw new InferenceException(\n          `De Morgan: cannot apply in ${parseToFormulaString(formula)}`\n        );\n      return {\n        operation: \"Negation\",\n        value: {\n          operation: \"Disjunction\",\n          left: formula.left.value,\n          right: formula.right.value\n        }\n      };\n    }\n    throw new InferenceException(\n      `De Morgan: cannot apply in ${parseToFormulaString(formula)}`\n    );\n  }\n  static DisjunctionIntroduction(formula, disjunction2) {\n    if (isDeepStrictEqual2(disjunction2.left, formula))\n      return disjunction2;\n    if (isDeepStrictEqual2(disjunction2.right, formula))\n      return disjunction2;\n    const errorMsg = `Disjunction Introduction: cannot apply in ${parseToFormulaString(\n      disjunction2\n    )} with ${parseToFormulaString(formula)}`;\n    throw new InferenceException(errorMsg);\n  }\n  static DisjunctiveSyllogism(disjunction2, negatedDisjunct) {\n    if (isDeepStrictEqual2(disjunction2.left, negatedDisjunct.value))\n      return disjunction2.right;\n    if (isDeepStrictEqual2(disjunction2.right, negatedDisjunct.value))\n      return disjunction2.left;\n    const errorMsg = `Disjunctive Syllogism: cannot apply in ${parseToFormulaString(\n      disjunction2\n    )} with ${parseToFormulaString(negatedDisjunct)}`;\n    throw new InferenceException(errorMsg);\n  }\n  static ImplicationElimination(conditional) {\n    return {\n      operation: \"Disjunction\",\n      left: { operation: \"Negation\", value: conditional.left },\n      right: conditional.right\n    };\n  }\n  static ImplicationNegation(negation2) {\n    if (!isImplication(negation2.value))\n      throw new InferenceException(\n        `Implication Negation: cannot apply in ${parseToFormulaString(\n          negation2\n        )}`\n      );\n    return {\n      operation: \"Conjunction\",\n      left: negation2.value.left,\n      right: { operation: \"Negation\", value: negation2.value.right }\n    };\n  }\n  static DoubleNegation(formula) {\n    return eliminateDoubleNegations(formula);\n  }\n  static DoubleNegationIntroduction(formula) {\n    const negation2 = {\n      operation: \"Negation\",\n      value: { operation: \"Negation\", value: formula }\n    };\n    return negation2;\n  }\n  static ConjunctionOverDisjunctionDistribution(formula) {\n    return this.Distribute(formula, isDisjunction);\n  }\n  static DisjunctionOverConjunctionDistribution(formula) {\n    return this.Distribute(formula, isConjunction);\n  }\n  static ConjunctionAssociativity(formula) {\n    return this.Associate(formula, isConjunction);\n  }\n  static DisjunctionAssociativity(formula) {\n    return this.Associate(formula, isDisjunction);\n  }\n  static BiconditionalAssociativity(formula) {\n    return this.Associate(formula, isBiconditional);\n  }\n  static HypotheticalSyllogism(conditional1, conditional2) {\n    if (isDeepStrictEqual2(conditional1.right, conditional2.left)) {\n      return {\n        operation: \"Implication\",\n        left: conditional1.left,\n        right: conditional2.right\n      };\n    }\n    if (isDeepStrictEqual2(conditional1.left, conditional2.right)) {\n      return {\n        operation: \"Implication\",\n        left: conditional2.left,\n        right: conditional1.right\n      };\n    }\n    const errorMsg = `Hypothetical Syllogism: cannot apply in ${parseToFormulaString(\n      conditional1\n    )} with ${parseToFormulaString(conditional2)}`;\n    throw new InferenceException(errorMsg);\n  }\n  static ModusPonens(conditional, antecedent) {\n    if (isDeepStrictEqual2(conditional.left, antecedent))\n      return conditional.right;\n    const errorMsg = `Modus Ponens: cannot apply in ${parseToFormulaString(\n      conditional\n    )} with ${parseToFormulaString(antecedent)}`;\n    throw new InferenceException(errorMsg);\n  }\n  static ModusTollens(conditional, negatedConsequent) {\n    if (isDeepStrictEqual2(conditional.right, negatedConsequent.value))\n      return { operation: \"Negation\", value: conditional.left };\n    const errorMsg = `Modus Tollens: cannot apply in ${parseToFormulaString(\n      conditional\n    )} with ${parseToFormulaString(negatedConsequent)}`;\n    throw new InferenceException(errorMsg);\n  }\n  static ReductioAdAbsurdum(conditional) {\n    if (isContradiction(conditional.right))\n      return { operation: \"Negation\", value: conditional.left };\n    throw new InferenceException(\n      `Reductio Ad Absurdum: cannot apply in ${conditional} with ${conditional.right}`\n    );\n  }\n  static DistributeRecursively(formula, isK) {\n    try {\n      return this.Distribute(formula, isK);\n    } catch (e) {\n      return formula;\n    }\n  }\n  static Distribute(formula, isK) {\n    let KFormula;\n    let otherFormula;\n    if (isK(formula.left)) {\n      KFormula = formula.left;\n      otherFormula = formula.right;\n    } else if (isK(formula.right)) {\n      KFormula = formula.right, otherFormula = formula.left;\n    } else {\n      throw new InferenceException(\n        `Distribution: cannot apply in ${parseToFormulaString(formula)}`\n      );\n    }\n    let distributedFormula = {\n      operation: KFormula.operation,\n      left: {\n        operation: formula.operation,\n        left: otherFormula,\n        right: KFormula.left\n      },\n      right: {\n        operation: formula.operation,\n        left: otherFormula,\n        right: KFormula.right\n      }\n    };\n    if (!isPropositionalVariable(distributedFormula.left))\n      distributedFormula.left = this.DistributeRecursively(\n        distributedFormula.left,\n        isK\n      );\n    if (!isPropositionalVariable(distributedFormula.right))\n      distributedFormula.right = this.DistributeRecursively(\n        distributedFormula.right,\n        isK\n      );\n    return distributedFormula;\n  }\n  static Associate(formula, isT) {\n    let mainFormula;\n    let otherFormula;\n    if (isT(formula.left)) {\n      mainFormula = formula.left;\n      otherFormula = formula.right;\n      return {\n        operation: formula.operation,\n        left: mainFormula.left,\n        right: {\n          operation: formula.operation,\n          left: mainFormula.right,\n          right: otherFormula\n        }\n      };\n    }\n    if (isT(formula.right)) {\n      mainFormula = formula.right;\n      otherFormula = formula.left;\n      return {\n        operation: formula.operation,\n        left: {\n          operation: formula.operation,\n          left: otherFormula,\n          right: mainFormula.left\n        },\n        right: mainFormula.right\n      };\n    }\n    throw new InferenceException(\n      `Associativity: cannot apply in ${parseToFormulaString(formula)}`\n    );\n  }\n};\n\n// src/rulers/RuleApplier.ts\nvar RuleApplier = class _RuleApplier extends RuleSetter {\n  static biconditionalIntroduction(item, proof) {\n    const requiredItens = item.from[0];\n    const line = item.id;\n    _RuleApplier.throwsIfLengthDoesntMatch(item, 2, requiredItens.length);\n    _RuleApplier.throwsIfIndexDoesntExist(requiredItens, proof);\n    const formulas = [\n      proof[requiredItens[0]].expression,\n      proof[requiredItens[1]].expression\n    ];\n    if (!isImplication(formulas[0]) || !isImplication(formulas[1]))\n      throw new InferenceException(\n        `Biconditional Introduction (Line ${line}): conditionals not found.`\n      );\n    const inferenceResult = _RuleApplier.BiconditionalIntroduction(\n      formulas[0],\n      formulas[1]\n    );\n    _RuleApplier.throwsIfIsNotEqual(inferenceResult, item);\n    return inferenceResult;\n  }\n  static biconditionalElimination(item, proof) {\n    const requiredItem = item.from[0];\n    const line = item.id;\n    _RuleApplier.throwsIfLengthDoesntMatch(item, 1, requiredItem.length);\n    _RuleApplier.throwsIfIndexDoesntExist(requiredItem, proof);\n    const biconditional2 = proof[requiredItem[0]].expression;\n    if (!isBiconditional(biconditional2))\n      throw new InferenceException(\n        `Biconditional Elimination (Line ${line}): biconditional not found.`\n      );\n    const inferenceResult = _RuleApplier.BiconditionalElimination(biconditional2);\n    _RuleApplier.throwsIfIsNotEqual(inferenceResult, item);\n    return inferenceResult;\n  }\n  static conditionalization(item, proof) {\n    const requiredItem = item.from[0];\n    const line = item.id;\n    _RuleApplier.throwsIfLengthDoesntMatch(item, 1, requiredItem.length);\n    _RuleApplier.throwsIfIndexDoesntExist(requiredItem, proof);\n    if (!isImplication(item.expression))\n      throw new InferenceException(\n        `Conditionalization (Line ${line}): the formula is not an implication.`\n      );\n    const formula = proof[requiredItem[0]].expression;\n    if (typeof formula === \"string\" && !isPropositionalVariable(formula))\n      throw new InferenceException(\n        `Conditionalization (Line ${line}): formula not found.`\n      );\n    const inferenceResult = _RuleApplier.Conditionalization(\n      formula,\n      item.expression\n    );\n    _RuleApplier.throwsIfIsNotEqual(inferenceResult, item);\n    return inferenceResult;\n  }\n  static conjunctionIntroduction(item, proof) {\n    const requiredItens = item.from[0];\n    const line = item.id;\n    _RuleApplier.throwsIfLengthDoesntMatch(item, 2, requiredItens.length);\n    _RuleApplier.throwsIfIndexDoesntExist(requiredItens, proof);\n    const firstFormula = proof[requiredItens[0]].expression;\n    if (typeof firstFormula === \"string\" && !isPropositionalVariable(firstFormula))\n      throw new InferenceException(\n        `Conjunction Introduction (Line ${line}): line ${requiredItens[0]} formula not found.`\n      );\n    const secondFormula = proof[requiredItens[1]].expression;\n    if (typeof secondFormula === \"string\" && !isPropositionalVariable(secondFormula))\n      throw new InferenceException(\n        `Conjunction Introduction (Line ${line}): line ${requiredItens[1]} formula not found.`\n      );\n    const inferenceResult = _RuleApplier.ConjunctionIntroduction(\n      firstFormula,\n      secondFormula\n    );\n    _RuleApplier.throwsIfIsNotEqual(inferenceResult, item);\n    return inferenceResult;\n  }\n  static conjunctionElimination(item, proof) {\n    const requiredItem = item.from[0];\n    const line = item.id;\n    _RuleApplier.throwsIfLengthDoesntMatch(item, 1, requiredItem.length);\n    _RuleApplier.throwsIfIndexDoesntExist(requiredItem, proof);\n    const conjunction2 = proof[requiredItem[0]].expression;\n    if (!isConjunction(conjunction2))\n      throw new InferenceException(\n        `Conjunction Elimination (Line ${line}): conjunction not found.`\n      );\n    const inferenceResults = _RuleApplier.ConjunctionElimination(conjunction2);\n    if (!isDeepStrictEqual3(item.expression, inferenceResults[0]) && !isDeepStrictEqual3(item.expression, inferenceResults[1])) {\n      throw new InferenceException(\n        `Conjunction Elimination (Line ${line}): expected ${parseToFormulaString(\n          inferenceResults[0]\n        )} or ${parseToFormulaString(\n          inferenceResults[1]\n        )} but received ${parseToFormulaString(item.expression)}`\n      );\n    }\n    return inferenceResults;\n  }\n  static commutativity(item, proof) {\n    const requiredItem = item.from[0];\n    const line = item.id;\n    _RuleApplier.throwsIfLengthDoesntMatch(item, 1, requiredItem.length);\n    _RuleApplier.throwsIfIndexDoesntExist(requiredItem, proof);\n    const formula = proof[requiredItem[0]].expression;\n    if (!isDisjunction(formula) && !isConjunction(formula) && !isBiconditional(formula))\n      throw new InferenceException(\n        `Commutativity (Line ${line}): cannot find any conjunction, biconditional or disjunction.`\n      );\n    const inferenceResult = _RuleApplier.Commutativity(formula);\n    _RuleApplier.throwsIfIsNotEqual(inferenceResult, item);\n    return inferenceResult;\n  }\n  static contraposition(item, proof) {\n    const requiredItem = item.from[0];\n    const line = item.id;\n    _RuleApplier.throwsIfLengthDoesntMatch(item, 1, requiredItem.length);\n    _RuleApplier.throwsIfIndexDoesntExist(requiredItem, proof);\n    const formula = proof[requiredItem[0]].expression;\n    if (!isImplication(formula))\n      throw new InferenceException(\n        `Contraposition (Line ${line}): implication not found.`\n      );\n    const inferenceResult = _RuleApplier.Contraposition(formula);\n    _RuleApplier.throwsIfIsNotEqual(inferenceResult, item);\n    return inferenceResult;\n  }\n  static deMorgan(item, proof) {\n    const requiredItem = item.from[0];\n    const line = item.id;\n    _RuleApplier.throwsIfLengthDoesntMatch(item, 1, requiredItem.length);\n    _RuleApplier.throwsIfIndexDoesntExist(requiredItem, proof);\n    const formula = proof[requiredItem[0]].expression;\n    if (!isNegation(formula) && !isConjunction(formula) && !isDisjunction(formula))\n      throw new InferenceException(\n        `De Morgan (Line ${line}): formula is not a disjunction, conjunction or negation.`\n      );\n    const inferenceResult = _RuleApplier.DeMorgan(formula);\n    _RuleApplier.throwsIfIsNotEqual(inferenceResult, item);\n    return inferenceResult;\n  }\n  static disjunctionIntroduction(item, proof) {\n    const requiredItem = item.from[0];\n    const line = item.id;\n    _RuleApplier.throwsIfLengthDoesntMatch(item, 1, requiredItem.length);\n    _RuleApplier.throwsIfIndexDoesntExist(requiredItem, proof);\n    if (!isDisjunction(item.expression))\n      throw new InferenceException(\n        `Disjunction Introduction (Line ${line}): expression is not a disjunction`\n      );\n    const formula = proof[requiredItem[0]].expression;\n    if (typeof formula === \"string\" && !isPropositionalVariable(formula))\n      throw new InferenceException(\n        `Disjunction Introduction (Line ${line}): formula not found.`\n      );\n    const inferenceResult = _RuleApplier.DisjunctionIntroduction(\n      formula,\n      item.expression\n    );\n    _RuleApplier.throwsIfIsNotEqual(inferenceResult, item);\n    return inferenceResult;\n  }\n  static disjunctiveSyllogism(item, proof) {\n    const requiredItens = item.from[0];\n    const line = item.id;\n    _RuleApplier.throwsIfLengthDoesntMatch(item, 2, requiredItens.length);\n    _RuleApplier.throwsIfIndexDoesntExist(requiredItens, proof);\n    const firstFormula = proof[requiredItens[0]].expression;\n    const secondFormula = proof[requiredItens[1]].expression;\n    let remainingFormula;\n    let disjunction2;\n    if (isDisjunction(firstFormula)) {\n      disjunction2 = firstFormula;\n      remainingFormula = secondFormula;\n    }\n    if (isDisjunction(secondFormula)) {\n      disjunction2 = secondFormula;\n      remainingFormula = firstFormula;\n    }\n    if (!disjunction2)\n      throw new InferenceException(\n        `Disjunctive Syllogism (Line ${line}): disjunction not found`\n      );\n    let negation2;\n    if (isNegation(remainingFormula))\n      negation2 = remainingFormula;\n    if (!negation2)\n      throw new InferenceException(\n        `Disjunctive Syllogism (Line ${line}): negation not found`\n      );\n    const inferenceResult = _RuleApplier.DisjunctiveSyllogism(\n      disjunction2,\n      negation2\n    );\n    _RuleApplier.throwsIfIsNotEqual(inferenceResult, item);\n    return inferenceResult;\n  }\n  static doubleNegation(item, proof) {\n    const requiredItem = item.from[0];\n    const line = item.id;\n    _RuleApplier.throwsIfLengthDoesntMatch(item, 1, requiredItem.length);\n    _RuleApplier.throwsIfIndexDoesntExist(requiredItem, proof);\n    const formula = proof[requiredItem[0]].expression;\n    if (typeof formula === \"string\" && !isPropositionalVariable(formula))\n      throw new InferenceException(\n        `Double Negation (Line ${line}): formula not found.`\n      );\n    const inferenceResult = _RuleApplier.DoubleNegation(formula);\n    _RuleApplier.throwsIfIsNotEqual(inferenceResult, item);\n    return inferenceResult;\n  }\n  static doubleNegationIntroduction(item, proof) {\n    const requiredItem = item.from[0];\n    const line = item.id;\n    _RuleApplier.throwsIfLengthDoesntMatch(item, 1, requiredItem.length);\n    _RuleApplier.throwsIfIndexDoesntExist(requiredItem, proof);\n    const formula = proof[requiredItem[0]].expression;\n    if (typeof formula === \"string\" && !isPropositionalVariable(formula))\n      throw new InferenceException(\n        `Double Negation Introduction (Line ${line}): negation not found.`\n      );\n    const inferenceResult = _RuleApplier.DoubleNegationIntroduction(formula);\n    _RuleApplier.throwsIfIsNotEqual(inferenceResult, item);\n    return inferenceResult;\n  }\n  static hypotheticalSyllogism(item, proof) {\n    const requiredItens = item.from[0];\n    const line = item.id;\n    _RuleApplier.throwsIfLengthDoesntMatch(item, 2, requiredItens.length);\n    _RuleApplier.throwsIfIndexDoesntExist(requiredItens, proof);\n    const firstFormula = proof[requiredItens[0]].expression;\n    const secondFormula = proof[requiredItens[1]].expression;\n    if (!isImplication(firstFormula) || !isImplication(secondFormula))\n      throw new InferenceException(\n        `Hypothetical Syllogism (Line ${line}): both formulas should be conditionals.`\n      );\n    const inferenceResult = _RuleApplier.HypotheticalSyllogism(\n      firstFormula,\n      secondFormula\n    );\n    _RuleApplier.throwsIfIsNotEqual(inferenceResult, item);\n    return inferenceResult;\n  }\n  static implicationElimination(item, proof) {\n    const requiredItem = item.from[0];\n    const line = item.id;\n    _RuleApplier.throwsIfLengthDoesntMatch(item, 1, requiredItem.length);\n    _RuleApplier.throwsIfIndexDoesntExist(requiredItem, proof);\n    const formula = proof[requiredItem[0]].expression;\n    if (!isImplication(formula))\n      throw new InferenceException(\n        `Implication Elimination (Line ${line}): implication not found.`\n      );\n    const inferenceResult = _RuleApplier.ImplicationElimination(formula);\n    _RuleApplier.throwsIfIsNotEqual(inferenceResult, item);\n    return inferenceResult;\n  }\n  static implicationNegation(item, proof) {\n    const requiredItem = item.from[0];\n    const line = item.id;\n    _RuleApplier.throwsIfLengthDoesntMatch(item, 1, requiredItem.length);\n    _RuleApplier.throwsIfIndexDoesntExist(requiredItem, proof);\n    let formula = proof[requiredItem[0]].expression;\n    if (!isNegation(formula))\n      throw new InferenceException(\n        `Implication Negation (Line ${line}): negation not found`\n      );\n    const inferenceResult = _RuleApplier.ImplicationNegation(formula);\n    _RuleApplier.throwsIfIsNotEqual(inferenceResult, item);\n    return inferenceResult;\n  }\n  static modusPonens(item, proof) {\n    const requiredItens = item.from[0];\n    const line = item.id;\n    _RuleApplier.throwsIfLengthDoesntMatch(item, 2, requiredItens.length);\n    _RuleApplier.throwsIfIndexDoesntExist(requiredItens, proof);\n    let firstFormula = proof[requiredItens[0]].expression;\n    let secondFormula = proof[requiredItens[1]].expression;\n    let remainingFormula;\n    let implication2;\n    if (isImplication(firstFormula)) {\n      implication2 = firstFormula;\n      remainingFormula = secondFormula;\n    }\n    if (isImplication(secondFormula)) {\n      implication2 = secondFormula;\n      remainingFormula = firstFormula;\n    }\n    if (!implication2)\n      throw new InferenceException(\n        `Modus Ponens (Line ${line}): implication not found`\n      );\n    const antecedent = remainingFormula;\n    if (!isPropositionalVariable(antecedent) && typeof antecedent === \"string\")\n      throw new InferenceException(\n        `Modus Ponens (Line ${line}): antecedent not found`\n      );\n    const inferenceResult = _RuleApplier.ModusPonens(implication2, antecedent);\n    _RuleApplier.throwsIfIsNotEqual(inferenceResult, item);\n    return inferenceResult;\n  }\n  static modusTollens(item, proof) {\n    const requiredItens = item.from[0];\n    const line = item.id;\n    _RuleApplier.throwsIfLengthDoesntMatch(item, 2, requiredItens.length);\n    _RuleApplier.throwsIfIndexDoesntExist(requiredItens, proof);\n    const firstFormula = proof[requiredItens[0]].expression;\n    const secondFormula = proof[requiredItens[1]].expression;\n    let remainingFormula;\n    let implication2;\n    if (isImplication(firstFormula)) {\n      implication2 = firstFormula;\n      remainingFormula = secondFormula;\n    }\n    if (isImplication(secondFormula)) {\n      implication2 = secondFormula;\n      remainingFormula = firstFormula;\n    }\n    if (!implication2)\n      throw new InferenceException(\n        `Modus Tollens (Line ${line}): implication not found`\n      );\n    const consequent = remainingFormula;\n    if (!isNegation(consequent))\n      throw new InferenceException(\n        `Modus Tollens (Line ${line}): negated consequent not found`\n      );\n    const inferenceResult = _RuleApplier.ModusTollens(implication2, consequent);\n    _RuleApplier.throwsIfIsNotEqual(inferenceResult, item);\n    return inferenceResult;\n  }\n  static conjunctionOverDisjunctionDistribution(item, proof) {\n    const requiredItem = item.from[0];\n    const line = item.id;\n    _RuleApplier.throwsIfLengthDoesntMatch(item, 1, requiredItem.length);\n    _RuleApplier.throwsIfIndexDoesntExist(requiredItem, proof);\n    const conjunction2 = proof[requiredItem[0]].expression;\n    if (!isConjunction(conjunction2))\n      throw new InferenceException(\n        `Distribution (Line ${line}): conjunction not found.`\n      );\n    const inferenceResult = _RuleApplier.ConjunctionOverDisjunctionDistribution(conjunction2);\n    _RuleApplier.throwsIfIsNotEqual(inferenceResult, item);\n    return inferenceResult;\n  }\n  static disjunctionOverConjunctionDistribution(item, proof) {\n    const requiredItem = item.from[0];\n    const line = item.id;\n    _RuleApplier.throwsIfLengthDoesntMatch(item, 1, requiredItem.length);\n    _RuleApplier.throwsIfIndexDoesntExist(requiredItem, proof);\n    const disjunction2 = proof[requiredItem[0]].expression;\n    if (!isDisjunction(disjunction2))\n      throw new InferenceException(\n        `Distribution (Line ${line}): disjunction not found.`\n      );\n    const inferenceResult = _RuleApplier.DisjunctionOverConjunctionDistribution(disjunction2);\n    _RuleApplier.throwsIfIsNotEqual(inferenceResult, item);\n    return inferenceResult;\n  }\n  static conjunctionAssociativity(item, proof) {\n    const requiredItem = item.from[0];\n    const line = item.id;\n    _RuleApplier.throwsIfLengthDoesntMatch(item, 1, requiredItem.length);\n    _RuleApplier.throwsIfIndexDoesntExist(requiredItem, proof);\n    const conjunction2 = proof[requiredItem[0]].expression;\n    if (!isConjunction(conjunction2))\n      throw new InferenceException(\n        `Associativity (Line ${line}): conjunction not found.`\n      );\n    const inferenceResult = _RuleApplier.ConjunctionAssociativity(conjunction2);\n    _RuleApplier.throwsIfIsNotEqual(inferenceResult, item);\n    return inferenceResult;\n  }\n  static disjunctionAssociativity(item, proof) {\n    const requiredItem = item.from[0];\n    const line = item.id;\n    _RuleApplier.throwsIfLengthDoesntMatch(item, 1, requiredItem.length);\n    _RuleApplier.throwsIfIndexDoesntExist(requiredItem, proof);\n    const disjunction2 = proof[requiredItem[0]].expression;\n    if (!isDisjunction(disjunction2))\n      throw new InferenceException(\n        `Associativity (Line ${line}): disjunction not found.`\n      );\n    const inferenceResult = _RuleApplier.DisjunctionAssociativity(disjunction2);\n    _RuleApplier.throwsIfIsNotEqual(inferenceResult, item);\n    return inferenceResult;\n  }\n  static biconditionalAssociativity(item, proof) {\n    const requiredItem = item.from[0];\n    const line = item.id;\n    _RuleApplier.throwsIfLengthDoesntMatch(item, 1, requiredItem.length);\n    _RuleApplier.throwsIfIndexDoesntExist(requiredItem, proof);\n    const biconditional2 = proof[requiredItem[0]].expression;\n    if (!isBiconditional(biconditional2))\n      throw new InferenceException(\n        `Associativity (Line ${line}): disjunction not found.`\n      );\n    const inferenceResult = _RuleApplier.BiconditionalAssociativity(biconditional2);\n    _RuleApplier.throwsIfIsNotEqual(inferenceResult, item);\n    return inferenceResult;\n  }\n  static conditionalProof(item, proof) {\n    const requiredItens = item.from[0];\n    const line = item.id;\n    _RuleApplier.throwsIfLengthDoesntMatch(item, 2, requiredItens.length);\n    _RuleApplier.throwsIfIndexDoesntExist(requiredItens, proof);\n    const item1 = proof[requiredItens[0]];\n    const item2 = proof[requiredItens[1]];\n    if (!isPropositionalVariable(item2.expression) && typeof item2.expression === \"string\")\n      throw new InferenceException(\n        `Conditional Proof (Line ${line}): cannot find a formula at line ${item2.id}`\n      );\n    if (!isPropositionalVariable(item1.expression) && typeof item1.expression === \"string\")\n      throw new InferenceException(\n        `Conditional Proof (Line ${line}): cannot find a formula at line ${item1.id}`\n      );\n    let hypothesis;\n    let endOfHypothesis;\n    if (isHypothesis(item1) && isEndOfHypothesis(item2)) {\n      hypothesis = item1.expression;\n      if (item2.hypothesisId != item1.id)\n        throw new InferenceException(\n          `Conditional Proof (Line ${line}): end of hypothesis references line ${item2.hypothesisId} hypothesis, but received line ${item1.id} hypothesis`\n        );\n      endOfHypothesis = item2.expression;\n    } else if (isHypothesis(item2) && isEndOfHypothesis(item1)) {\n      hypothesis = item2.expression;\n      if (item1.hypothesisId != item2.id)\n        throw new InferenceException(\n          `Conditional Proof (Line ${line}): end of hypothesis references line ${item1.hypothesisId} hypothesis, but received line ${item2.id} hypothesis`\n        );\n      endOfHypothesis = item1.expression;\n    } else {\n      throw new InferenceException(\n        `Conditional Proof: end of hypothesis or hypothesis not found.`\n      );\n    }\n    const inferenceResult = _RuleApplier.ConditionalProof(\n      hypothesis,\n      endOfHypothesis\n    );\n    _RuleApplier.throwsIfIsNotEqual(inferenceResult, item);\n    return inferenceResult;\n  }\n  static reductioAdAbsurdum(item, proof) {\n    const requiredItem = item.from[0];\n    const line = item.id;\n    _RuleApplier.throwsIfLengthDoesntMatch(item, 1, requiredItem.length);\n    _RuleApplier.throwsIfIndexDoesntExist(requiredItem, proof);\n    const conditional = proof[requiredItem[0]].expression;\n    if (!isImplication(conditional))\n      throw new InferenceException(\n        `Reductio Ad Absurdum (Line ${line}): conditional not found.`\n      );\n    const inferenceResult = _RuleApplier.ReductioAdAbsurdum(conditional);\n    _RuleApplier.throwsIfIsNotEqual(inferenceResult, item);\n    return inferenceResult;\n  }\n  static throwsIfIsNotEqual(expectedFormula, actualItem) {\n    const actualFormula = actualItem.expression;\n    const inferenceMethod = actualItem.from[1];\n    if (!isDeepStrictEqual3(expectedFormula, actualFormula)) {\n      throw new InferenceException(`\n        ${inferenceMethod} (Line ${actualItem.id}): expected ${parseToFormulaString(\n        expectedFormula\n      )} but received ${parseToFormulaString(actualFormula)}\n      `);\n    }\n  }\n  static throwsIfLengthDoesntMatch(item, expected, received) {\n    const rule = item.from[1];\n    const line = item.id;\n    if (expected !== received)\n      throw new InferenceException(\n        `${rule} (Line ${line}): expect ${expected} formulas to apply the rule but received ${received}.`\n      );\n  }\n  static throwsIfIndexDoesntExist(requiredItens, proof) {\n    requiredItens.forEach((idx) => {\n      if (!proof[idx])\n        throw new InferenceException(`Cannot find a formula at index ${idx}`);\n    });\n  }\n};\n\n// src/types/syntactic/proof.ts\nvar inferenceRulesMap = {\n  \"Associativity (Biconditional)\": RuleApplier.biconditionalAssociativity,\n  \"Associativity (Conjunction)\": RuleApplier.conjunctionAssociativity,\n  \"Associativity (Disjunction)\": RuleApplier.disjunctionAssociativity,\n  \"Biconditional Elimination\": RuleApplier.biconditionalElimination,\n  \"Biconditional Introduction\": RuleApplier.biconditionalIntroduction,\n  \"Commutativity\": RuleApplier.commutativity,\n  \"Conditional Proof\": RuleApplier.conditionalProof,\n  \"Conditionalization\": RuleApplier.conditionalization,\n  \"Contraposition\": RuleApplier.contraposition,\n  \"Conjunction Elimination\": RuleApplier.conjunctionElimination,\n  \"Conjunction Introduction\": RuleApplier.conjunctionIntroduction,\n  \"De Morgan\": RuleApplier.deMorgan,\n  \"Disjunction Introduction\": RuleApplier.disjunctionIntroduction,\n  \"Disjunctive Syllogism\": RuleApplier.disjunctiveSyllogism,\n  \"Distribution (Conjunction over Disjunction)\": RuleApplier.conjunctionOverDisjunctionDistribution,\n  \"Distribution (Disjunction over Conjunction)\": RuleApplier.disjunctionOverConjunctionDistribution,\n  \"Double Negation\": RuleApplier.doubleNegation,\n  \"Double Negation Introduction\": RuleApplier.doubleNegationIntroduction,\n  \"Hypothetical Syllogism\": RuleApplier.hypotheticalSyllogism,\n  \"Implication Elimination\": RuleApplier.implicationElimination,\n  \"Implication Negation\": RuleApplier.implicationNegation,\n  \"Modus Ponens\": RuleApplier.modusPonens,\n  \"Modus Tollens\": RuleApplier.modusTollens,\n  \"Reductio Ad Absurdum\": RuleApplier.reductioAdAbsurdum\n};\n\n// src/proof-checker/ProofChecker.ts\nvar ProofChecker = class _ProofChecker {\n  /**\n   * Checks the given proof for validity.\n   *\n   * @param {Proof} proof - The proof to be checked.\n   * @returns {boolean} - `true` if the proof is valid, `InferenceError` or `Error` otherwise.\n   */\n  static check(proof) {\n    const mappedProof = _ProofChecker.createMappedProof(proof);\n    let premises = [];\n    let conclusion;\n    Object.keys(mappedProof).forEach((_, idx) => {\n      const item = mappedProof[idx + 1];\n      if (isProofItemInferred(item)) {\n        const [requiredItens, inferenceRule] = item.from;\n        _ProofChecker.validateScope(requiredItens, item, mappedProof);\n        inferenceRulesMap[inferenceRule](item, proof);\n        console.log(\n          \"\\x1B[32m\",\n          `Applied ${inferenceRule} with success at line ${item.id} \\u2714\\uFE0F`\n        );\n      }\n      if (item.type === \"Premise\") {\n        premises.push(item.expression);\n      }\n      if (item.type === \"Conclusion\") {\n        conclusion = parseToFormulaString(item.expression);\n      }\n      premises = premises.map((formula) => {\n        return parseToFormulaString(formula);\n      });\n    });\n    console.log(\"\\x1B[0m\", `\n{ ${premises.join(\", \")} } \\u22A2 ${conclusion}`);\n    return true;\n  }\n  /**\n   * Creates a mapped version of the proof, with the representation of the scopes of each item.\n   * @param {Proof} proof - The proof to be mapped.\n   * @returns {MappedProof} - The mapped proof.\n   */\n  static createMappedProof(proof) {\n    let layerIdx = 0;\n    let blockIdx = 0;\n    Object.keys(proof).forEach((_, idx) => {\n      idx++;\n      const item = proof[idx];\n      if (isHypothesis(item)) {\n        blockIdx++;\n        layerIdx++;\n        proof[idx][\"scopeIdx\"] = [layerIdx, blockIdx];\n      } else if (isEndOfHypothesis(item)) {\n        const itemBlockIdx = proof[item.hypothesisId][\"scopeIdx\"][1];\n        proof[idx][\"scopeIdx\"] = [layerIdx, itemBlockIdx];\n        layerIdx--;\n      } else {\n        proof[idx][\"scopeIdx\"] = layerIdx === 0 ? [0, 0] : [layerIdx, blockIdx];\n        if (layerIdx !== 0 && proof[idx].type === \"Conclusion\")\n          throw new Error(\n            `(Line ${idx}): You cannot put your conclusion inside of a hypothesis.`\n          );\n      }\n    });\n    return proof;\n  }\n  /**\n   * Validates the scope of inferred items.\n   * @param {number[]} requiredItens - An array of required item IDs.\n   * @param {ProofItemInferred} item - The inferred proof item to be validated.\n   * @param {MappedProof} mappedProof - The mapped proof.\n   */\n  static validateScope(requiredItens, item, mappedProof) {\n    requiredItens.forEach((requiredItemId) => {\n      const [actualLayer, actualBlock] = mappedProof[item.id].scopeIdx;\n      const [requiredLayer, requiredBlock] = mappedProof[requiredItemId].scopeIdx;\n      const [, inferenceRule] = item.from;\n      if (actualLayer < requiredLayer && actualBlock != requiredBlock && inferenceRule != \"Conditional Proof\")\n        throw new InferenceException(\n          `Scope Error: cannot access line ${requiredItemId} by the ${item.id} line.`\n        );\n    });\n  }\n};\n\n// src/reducer/Reducer.ts\nvar Reducer = class {\n  /**\n   * Recursively reduces a logical formula to its reduced form based on its operation.\n   * @param x - The logical formula to reduce.\n   * @returns The reduced logical formula.\n   */\n  static reduceFormula(x) {\n    if (typeof x === \"string\")\n      return x;\n    switch (x.operation) {\n      case \"Biconditional\":\n        return this.biconditional(x);\n      case \"Implication\":\n        return this.implication(x);\n      case \"Conjunction\":\n        return this.conjunction(x);\n      case \"Disjunction\":\n        return this.disjunction(x);\n      case \"Negation\":\n        return this.negation(x);\n      default:\n        throw new Error(\"Invalid operation\");\n    }\n  }\n  /**\n   * Reduces a Biconditional to a Conjunction.\n   * @param x - The Biconditional operation to reduce.\n   * @returns The reduced Conjunction formula.\n   */\n  static biconditional(x) {\n    const left = this.reduceFormula(x.left);\n    const right = this.reduceFormula(x.right);\n    const reducedLeft = this.reduceFormula({\n      operation: \"Implication\",\n      left,\n      right\n    });\n    const reducedRight = this.reduceFormula({\n      operation: \"Implication\",\n      left: right,\n      right: left\n    });\n    return {\n      operation: \"Conjunction\",\n      left: reducedLeft,\n      right: reducedRight\n    };\n  }\n  /**\n   * Reduces an Implication to a Disjunction\n   * @param x - The formula to reduce.\n   * @returns The reduced Disjunction formula.\n   */\n  static implication(x) {\n    const left = this.reduceFormula(x.left);\n    const right = this.reduceFormula(x.right);\n    return {\n      operation: \"Disjunction\",\n      left: {\n        operation: \"Negation\",\n        value: left\n      },\n      right\n    };\n  }\n  /**\n   * Reduces both sides of a Conjunction\n   * @param x - The formula to reduce.\n   * @returns The reduced Conjunction formula.\n   */\n  static conjunction(x) {\n    const left = this.reduceFormula(x.left);\n    const right = this.reduceFormula(x.right);\n    return {\n      operation: \"Conjunction\",\n      left,\n      right\n    };\n  }\n  /**\n   * Reduces both sides of a Disjunction\n   * @param x - The formula to reduce.\n   * @returns The reduced Disjunction formula.\n   */\n  static disjunction(x) {\n    const left = this.reduceFormula(x.left);\n    const right = this.reduceFormula(x.right);\n    return {\n      operation: \"Disjunction\",\n      left,\n      right\n    };\n  }\n  /**\n   * Reduces the negated formula\n   * @param x - The formula to reduce.\n   * @returns The reduced Negation formula.\n   */\n  static negation(x) {\n    const value = this.reduceFormula(x.value);\n    return {\n      operation: \"Negation\",\n      value\n    };\n  }\n};\n\n// src/frege/Frege.ts\nvar Frege = class {\n  constructor() {\n    this.builder = Builder;\n    this.reducer = Reducer;\n    this.calculator = Calculator;\n    this.proofChecker = ProofChecker;\n    /**\n     * The `parse` property provides functions to build and parse formulas in propositional logic.\n     * @public\n     */\n    this.parse = {\n      /**\n       * Builds a formula object from a string, which contains a well-formed formula of the propositional logic.\n       * @param formula - The logical formula to build.\n       * @returns The built formula object.\n       * @throws {UnrecognizedTokenException} If the provided formula contains unrecognized tokens.\n       *\n       * @example\n       *\n       * // Input: \"P->Q\"\n       * // Output: { operation: 'Implication', left: 'P', right: 'Q' }\n       * const parsedFormula = frege.parse.toFormulaObject<Implication>(\"P->Q\");\n       * console.log(parsedFormula);\n       */\n      toFormulaObject: (formula) => {\n        const tokens = new Lexer(formula).lex();\n        const parsedFormula = new Parser(tokens).parse();\n        return parsedFormula;\n      },\n      /**\n       * Builds a logical formula string from a formula object using the syntax of propositional logic.\n       * @param formula - The formula object to build the string from.\n       * @returns The built logical formula string.\n       * @throws {InvalidFormulaException} If the provided formula object is invalid or incomplete.\n       *\n       * @example\n       *\n       * // Input: { operation: 'Implication', left: 'P', right: 'Q' }\n       * // Output: \"(P->Q)\"\n       * const implication: Implication = {\n       *    operation: 'Implication',\n       *    left: 'P',\n       *    right: 'Q'\n       * };\n       *\n       * const parsedFormula = frege.parse.toFormulaString(implication);\n       * console.log(parsedFormula); // => \"(P->Q)\"\n       */\n      toFormulaString: (formula) => {\n        return this.builder.buildFormula(formula);\n      }\n    };\n    this.verifyConsequence = {\n      semantic: this.calculator.isSemanticConsequence,\n      syntactic: () => {\n      }\n    };\n    /**\n     * Reduces a formula object or a formula string to its reduced form.\n     * @param formula - The formula object or formula string to reduce.\n     * @returns The reduced formula in its string representation or as a formula object.\n     *\n     * @example\n     * // Input: { operation: 'Implication', left: 'P', right: ' Q' }\n     * // Output: { operation: 'Disjunction' left: { operation: 'Negation', value: 'P'}, right: 'Q' };\n     *\n     * const formulaObject: Implication = {\n     *    operation: 'Implication',\n     *    left: 'P',\n     *    right: 'Q'\n     * };\n     *\n     * const reducedFormula = frege.reduce(formulaObject);\n     * console.log(reducedFormula); // => { operation: 'Disjunction' left: { operation: 'Negation', value: 'P'}, right: 'Q' };\n     *\n     *\n     * // Input: \"P<->Q\"\n     * // Output: '((¬(P) ∨ Q) ∧ (¬(Q) ∨ P))'\n     *\n     * const formulaString = \"P<->Q\";\n     *\n     * const reducedFormula = frege.reduce(formulaString);\n     * console.log(reducedFormula); // => '((¬(P) ∨ Q) ∧ (¬(Q) ∨ P))'\n     */\n    this.reduce = (formula) => {\n      if (typeof formula === \"string\") {\n        let formulaObject = this.parse.toFormulaObject(formula);\n        formulaObject = this.reducer[\"reduceFormula\"](formulaObject);\n        return this.parse.toFormulaString(formulaObject);\n      }\n      let operation = formula.operation.toLocaleLowerCase();\n      const reducedFormula = this.reducer[operation](formula);\n      return reducedFormula;\n    };\n    /**\n     * Evaluates the given logical formula with the provided truth values for variables.\n     *\n     * @param formula - The logical formula to evaluate.\n     * @param values - An object representing truth values for propositional variables.\n     * @returns The result of the evaluation (true or false).\n     *\n     * @example\n     * const result = Calculator.evaluate('P -> Q', { P: true, Q: false });\n     * console.log(result); // Output: false\n     */\n    this.evaluate = this.calculator.evaluate;\n    /**\n     * Generates a truth table for the given formula.\n     *\n     * @param formula - The logical formula to generate a truth table for.\n     * @param stringfiedFormula - An optional string representation of the formula.\n     * @returns The truth table as an array containing headers, truth combinations, and results.\n     *\n     * @example\n     * const output = Calculator.generateTruthTable('P -> Q');\n     * console.log(output);\n     * // Output:\n     * {\n     *    headers: ['P', 'Q', '(P -> Q)'],\n     *    truthCombinations: [\n     *      [false, false], [false, true],\n     *      [true, false], [true, true]\n     *    ],\n     *    truthValues: [true, true, false, true]\n     *  }\n     */\n    this.generateTruthTable = this.calculator.generateTruthTable;\n    /**\n       * Checks the given proof for validity.\n       * \n       * @param {Proof} proof - The proof to be checked.\n       * @returns {boolean} - `true` if the proof is valid, `InferenceError` or `Error` otherwise.\n       * @example\n       * ```\n       * const proof = {\n        // ... (Your proof object)\n        };\n    \n        const isProofValid = ProofChecker.check(proof);\n        console.log(`The proof is valid: ${isProofValid}`);\n       * ```\n       */\n    this.checkProof = this.proofChecker.check;\n    /**\n     * Checks if the given formula is a tautology.\n     *\n     * @param {Formula | string} formula - The formula to check.\n     */\n    this.isTautology = (formula) => {\n      const { truthValues } = this.calculator.generateTruthTable(formula);\n      for (let i = 0; i < truthValues.length; i++) {\n        if (!truthValues[i])\n          return false;\n      }\n      return true;\n    };\n    /**\n     * Checks if the given formula is a contradiction.\n     *\n     * @param {Formula | string} formula - The formula to check.\n     */\n    this.isContradiction = (formula) => {\n      const { truthValues } = this.calculator.generateTruthTable(formula);\n      for (let i = 0; i < truthValues.length; i++) {\n        if (truthValues[i])\n          return false;\n      }\n      return true;\n    };\n    /**\n     * Checks if the given formula is a contingency.\n     *\n     * @param {Formula | string} formula - The formula to check.\n     */\n    this.isContingency = (formula) => {\n      let firstTruthValue;\n      const { truthValues } = this.calculator.generateTruthTable(formula);\n      firstTruthValue = truthValues[0];\n      for (let i = 1; i < truthValues.length; i++) {\n        if (truthValues[i] != firstTruthValue)\n          return true;\n      }\n      return false;\n    };\n  }\n};\n\n// src/index.ts\nvar frege = new Frege();\nexport {\n  Builder,\n  Calculator,\n  Frege,\n  InferenceException,\n  InvalidFormulaException,\n  InvalidProofSequenceException,\n  Lexer,\n  Parser,\n  ProofChecker,\n  Reducer,\n  RuleApplier,\n  RuleSetter,\n  UnrecognizedTokenException,\n  biconditional,\n  buildConjunctionString,\n  conjunction,\n  disjunction,\n  eliminateDoubleNegations,\n  frege,\n  haveEvenNumberOfNegations,\n  implication,\n  inferenceRulesMap,\n  isArrayString,\n  isBiconditional,\n  isBinaryOperationFormula,\n  isConjunction,\n  isContradiction,\n  isDisjunction,\n  isEndOfHypothesis,\n  isHypothesis,\n  isImplication,\n  isMolecularFormula,\n  isNegation,\n  isProofItemInferred,\n  isPropositionalVariable,\n  negation,\n  parseToFormulaObject,\n  parseToFormulaString,\n  printTruthTable\n};\n","import { frege } from 'fregejs';\r\n\r\n\r\ndocument.querySelectorAll(\".logic-button\").forEach((button) => {\r\n  button.addEventListener(\"click\", function () {\r\n    insert(this.textContent);\r\n  });\r\n});\r\ndocument.querySelectorAll(\".button\").forEach((button) => {\r\n  button.addEventListener(\"click\", function () {\r\n      if (this.textContent === \"DEL\") {\r\n          var telinha = document.getElementById(\"resultado\");\r\n          telinha.textContent = telinha.textContent.slice(0, -1); \r\n      } else if (this.textContent === \"AC\") {\r\n          var telinha = document.getElementById(\"resultado\");\r\n          telinha.textContent = \"\";\r\n      }\r\n  });\r\n});\r\n\r\ndocument.addEventListener(\"keydown\", function (event) {\r\n  if (event.key === \"Backspace\") {\r\n    deleteChar();\r\n  } else if (event.key === \"ArrowLeft\") {\r\n    moveCursorLeft();\r\n  } else if (event.key === \"ArrowRight\") {\r\n    moveCursorRight();\r\n  }\r\n  else\r\n    event.preventDefault();\r\n});\r\n\r\nfunction insert(text) {\r\n  var telinha = document.getElementById(\"resultado\");\r\n  telinha.textContent += text;\r\n}\r\n\r\nfunction analiseLexica(formula) {\r\n  const regex = /^[~^v→↔]+$/;\r\n  return regex.test(formula);\r\n}\r\n\r\nfunction analisadorSintatico(formula) {\r\n  try {\r\n    new Function(\"return \" + formula); \r\n    return true; \r\n  } catch (error) {\r\n    return false; \r\n  }\r\n}\r\n\r\n\r\nfunction exibirResultados(formula, tautologia) {\r\n  const resultsDiv = document.getElementById(\"results\");\r\n  resultsDiv.innerHTML = `\r\n    <p>Fórmula: ${formula}</p>\r\n    <p>Provador de Tautologia: ${\r\n      tautologia ? \"É uma tautologia\" : \"Não é uma tautologia\"\r\n    }</p>\r\n\r\n  `;\r\n}\r\nfunction exibirErro(formula) {\r\n  const resultsDiv = document.getElementById(\"results\");\r\n  resultsDiv.innerHTML = `\r\n    <p>Sua fórmula está incorreta: ${formula}</p>\r\n  `;\r\n}\r\n\r\n\r\ndocument.querySelector(\".button-calc\").addEventListener(\"click\", function() {\r\n  var expressaoLogica = document.getElementById(\"resultado\").textContent;\r\n  var resultadoCalculo = calcularExpressaoLogica(expressaoLogica);\r\n});\r\n\r\nfunction calcularExpressaoLogica(expressao) {\r\n    var expressaoNaoTratada = expressao\r\n    expressao = expressao.replace(/~/g, \"¬\");\r\n\r\n    expressao = expressao.replace(/→/g, \"->\");\r\n    expressao = expressao.replace(/↔/g, \"<->\");\r\n\r\n    try{\r\n      const truthTable = frege.generateTruthTable(expressao);\r\n      generateHTMLTruthTable(truthTable)\r\n      const tautologia = frege.isTautology(expressao);\r\n      exibirResultados(expressaoNaoTratada, tautologia);\r\n    } catch(error){\r\n      console.log(error)\r\n      exibirErro(expressaoNaoTratada)\r\n    }\r\n}\r\n\r\n\r\n\r\nfunction generateHTMLTruthTable(truthTable) {\r\n  let htmlTable = '<table class=\"tabela-verdade\">';\r\n  \r\n  htmlTable += '<tr>';\r\n  truthTable.headers.forEach(header => {\r\n    htmlTable += `<th>${header}</th>`;\r\n  });\r\n  htmlTable += '</tr>';\r\n  \r\n  for (let i = 0; i < truthTable.truthCombinations.length; i++) {\r\n    htmlTable += '<tr>';\r\n    const combination = truthTable.truthCombinations[i];\r\n    combination.forEach(value => {\r\n      const formattedValue = value ? \"<span style='color:green'>T</span>\" : \"<span style='color:red'>F</span>\";\r\n      htmlTable += `<td class=\"tabela-verdade\">${formattedValue}</td>`;\r\n    });\r\n    const formattedValue = truthTable.truthValues[i] ? \"<span style='color:green'>T</span>\" : \"<span style='color:red'>F</span>\";\r\n    htmlTable += `<td class=\"tabela-verdade\">${formattedValue}</td>`;\r\n    htmlTable += '</tr>';\r\n  }\r\n\r\n  htmlTable += '</table>';\r\n  \r\n  var resultsDiv = document.getElementById(\"tabela\");\r\n  resultsDiv.innerHTML = htmlTable;\r\n}\r\n","var OVERLAY_ID = '__parcel__error__overlay__';\n\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n\n  module.bundle.hotData = null;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets, assetsToAccept;\n\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = process.env.HMR_HOSTNAME || location.hostname;\n  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + ':' + process.env.HMR_PORT + '/');\n  ws.onmessage = function(event) {\n    checkedAssets = {};\n    assetsToAccept = [];\n\n    var data = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      var handled = false;\n      data.assets.forEach(function(asset) {\n        if (!asset.isNew) {\n          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);\n          if (didAccept) {\n            handled = true;\n          }\n        }\n      });\n\n      // Enable HMR for CSS by default.\n      handled = handled || data.assets.every(function(asset) {\n        return asset.type === 'css' && asset.generated.js;\n      });\n\n      if (handled) {\n        console.clear();\n\n        data.assets.forEach(function (asset) {\n          hmrApply(global.parcelRequire, asset);\n        });\n\n        assetsToAccept.forEach(function (v) {\n          hmrAcceptRun(v[0], v[1]);\n        });\n      } else if (location.reload) { // `location` global exists in a web worker context but lacks `.reload()` function.\n        location.reload();\n      }\n    }\n\n    if (data.type === 'reload') {\n      ws.close();\n      ws.onclose = function () {\n        location.reload();\n      }\n    }\n\n    if (data.type === 'error-resolved') {\n      console.log('[parcel] ✨ Error resolved');\n\n      removeErrorOverlay();\n    }\n\n    if (data.type === 'error') {\n      console.error('[parcel] 🚨  ' + data.error.message + '\\n' + data.error.stack);\n\n      removeErrorOverlay();\n\n      var overlay = createErrorOverlay(data);\n      document.body.appendChild(overlay);\n    }\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n  }\n}\n\nfunction createErrorOverlay(data) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n\n  // html encode message and stack trace\n  var message = document.createElement('div');\n  var stackTrace = document.createElement('pre');\n  message.innerText = data.error.message;\n  stackTrace.innerText = data.error.stack;\n\n  overlay.innerHTML = (\n    '<div style=\"background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;\">' +\n      '<span style=\"background: red; padding: 2px 4px; border-radius: 2px;\">ERROR</span>' +\n      '<span style=\"top: 2px; margin-left: 5px; position: relative;\">🚨</span>' +\n      '<div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">' + message.innerHTML + '</div>' +\n      '<pre>' + stackTrace.innerHTML + '</pre>' +\n    '</div>'\n  );\n\n  return overlay;\n\n}\n\nfunction getParents(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || (Array.isArray(dep) && dep[dep.length - 1] === id)) {\n        parents.push(k);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction hmrApply(bundle, asset) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (modules[asset.id] || !bundle.parent) {\n    var fn = new Function('require', 'module', 'exports', asset.generated.js);\n    asset.isNew = !modules[asset.id];\n    modules[asset.id] = [fn, asset.deps];\n  } else if (bundle.parent) {\n    hmrApply(bundle.parent, asset);\n  }\n}\n\nfunction hmrAcceptCheck(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (!modules[id] && bundle.parent) {\n    return hmrAcceptCheck(bundle.parent, id);\n  }\n\n  if (checkedAssets[id]) {\n    return;\n  }\n  checkedAssets[id] = true;\n\n  var cached = bundle.cache[id];\n\n  assetsToAccept.push([bundle, id]);\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n\n  return getParents(global.parcelRequire, id).some(function (id) {\n    return hmrAcceptCheck(global.parcelRequire, id)\n  });\n}\n\nfunction hmrAcceptRun(bundle, id) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n  if (cached) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n\n  cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      cb();\n    });\n    return true;\n  }\n}\n"]}